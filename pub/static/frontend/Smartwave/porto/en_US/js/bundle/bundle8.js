require.config({"config": {
        "jsbuild":{"jquery/spectrum/spectrum.js":"// Spectrum Colorpicker v1.8.0\n// https://github.com/bgrins/spectrum\n// Author: Brian Grinstead\n// License: MIT\n\n(function (factory) {\n    \"use strict\";\n\n    if (typeof define === 'function' && define.amd) { // AMD\n        define(['jquery'], factory);\n    }\n    else if (typeof exports == \"object\" && typeof module == \"object\") { // CommonJS\n        module.exports = factory(require('jquery'));\n    }\n    else { // Browser\n        factory(jQuery);\n    }\n})(function($, undefined) {\n    \"use strict\";\n\n    var defaultOpts = {\n\n            // Callbacks\n            beforeShow: noop,\n            move: noop,\n            change: noop,\n            show: noop,\n            hide: noop,\n\n            // Options\n            color: false,\n            flat: false,\n            showInput: false,\n            allowEmpty: false,\n            showButtons: true,\n            clickoutFiresChange: true,\n            showInitial: false,\n            showPalette: false,\n            showPaletteOnly: false,\n            hideAfterPaletteSelect: false,\n            togglePaletteOnly: false,\n            showSelectionPalette: true,\n            localStorageKey: false,\n            appendTo: \"body\",\n            maxSelectionSize: 7,\n            cancelText: \"cancel\",\n            chooseText: \"choose\",\n            togglePaletteMoreText: \"more\",\n            togglePaletteLessText: \"less\",\n            clearText: \"Clear Color Selection\",\n            noColorSelectedText: \"No Color Selected\",\n            preferredFormat: false,\n            className: \"\", // Deprecated - use containerClassName and replacerClassName instead.\n            containerClassName: \"\",\n            replacerClassName: \"\",\n            showAlpha: false,\n            theme: \"sp-light\",\n            palette: [[\"#ffffff\", \"#000000\", \"#ff0000\", \"#ff8000\", \"#ffff00\", \"#008000\", \"#0000ff\", \"#4b0082\", \"#9400d3\"]],\n            selectionPalette: [],\n            disabled: false,\n            offset: null\n        },\n        spectrums = [],\n        IE = !!/msie/i.exec( window.navigator.userAgent ),\n        rgbaSupport = (function() {\n            function contains( str, substr ) {\n                return !!~('' + str).indexOf(substr);\n            }\n\n            var elem = document.createElement('div');\n            var style = elem.style;\n            style.cssText = 'background-color:rgba(0,0,0,.5)';\n            return contains(style.backgroundColor, 'rgba') || contains(style.backgroundColor, 'hsla');\n        })(),\n        replaceInput = [\n            \"<div class='sp-replacer'>\",\n            \"<div class='sp-preview'><div class='sp-preview-inner'></div></div>\",\n            \"<div class='sp-dd'>&#9660;</div>\",\n            \"</div>\"\n        ].join(''),\n        markup = (function () {\n\n            // IE does not support gradients with multiple stops, so we need to simulate\n            //  that for the rainbow slider with 8 divs that each have a single gradient\n            var gradientFix = \"\";\n            if (IE) {\n                for (var i = 1; i <= 6; i++) {\n                    gradientFix += \"<div class='sp-\" + i + \"'></div>\";\n                }\n            }\n\n            return [\n                \"<div class='sp-container sp-hidden'>\",\n                \"<div class='sp-palette-container'>\",\n                \"<div class='sp-palette sp-thumb sp-cf'></div>\",\n                \"<div class='sp-palette-button-container sp-cf'>\",\n                \"<button type='button' class='sp-palette-toggle'></button>\",\n                \"</div>\",\n                \"</div>\",\n                \"<div class='sp-picker-container'>\",\n                \"<div class='sp-top sp-cf'>\",\n                \"<div class='sp-fill'></div>\",\n                \"<div class='sp-top-inner'>\",\n                \"<div class='sp-color'>\",\n                \"<div class='sp-sat'>\",\n                \"<div class='sp-val'>\",\n                \"<div class='sp-dragger'></div>\",\n                \"</div>\",\n                \"</div>\",\n                \"</div>\",\n                \"<div class='sp-clear sp-clear-display'>\",\n                \"</div>\",\n                \"<div class='sp-hue'>\",\n                \"<div class='sp-slider'></div>\",\n                gradientFix,\n                \"</div>\",\n                \"</div>\",\n                \"<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>\",\n                \"</div>\",\n                \"<div class='sp-input-container sp-cf'>\",\n                \"<input class='sp-input' type='text' spellcheck='false'  />\",\n                \"</div>\",\n                \"<div class='sp-initial sp-thumb sp-cf'></div>\",\n                \"<div class='sp-button-container sp-cf'>\",\n                \"<a class='sp-cancel' href='#'></a>\",\n                \"<button type='button' class='sp-choose'></button>\",\n                \"</div>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\");\n        })();\n\n    function paletteTemplate (p, color, className, opts) {\n        var html = [];\n        for (var i = 0; i < p.length; i++) {\n            var current = p[i];\n            if(current) {\n                var tiny = tinycolor(current);\n                var c = tiny.toHsl().l < 0.5 ? \"sp-thumb-el sp-thumb-dark\" : \"sp-thumb-el sp-thumb-light\";\n                c += (tinycolor.equals(color, current)) ? \" sp-thumb-active\" : \"\";\n                var formattedString = tiny.toString(opts.preferredFormat || \"rgb\");\n                var swatchStyle = rgbaSupport ? (\"background-color:\" + tiny.toRgbString()) : \"filter:\" + tiny.toFilter();\n                html.push('<span title=\"' + formattedString + '\" data-color=\"' + tiny.toRgbString() + '\" class=\"' + c + '\"><span class=\"sp-thumb-inner\" style=\"' + swatchStyle + ';\" /></span>');\n            } else {\n                var cls = 'sp-clear-display';\n                html.push($('<div />')\n                    .append($('<span data-color=\"\" style=\"background-color:transparent;\" class=\"' + cls + '\"></span>')\n                        .attr('title', opts.noColorSelectedText)\n                    )\n                    .html()\n                );\n            }\n        }\n        return \"<div class='sp-cf \" + className + \"'>\" + html.join('') + \"</div>\";\n    }\n\n    function hideAll() {\n        for (var i = 0; i < spectrums.length; i++) {\n            if (spectrums[i]) {\n                spectrums[i].hide();\n            }\n        }\n    }\n\n    function instanceOptions(o, callbackContext) {\n        var opts = $.extend({}, defaultOpts, o);\n        opts.callbacks = {\n            'move': bind(opts.move, callbackContext),\n            'change': bind(opts.change, callbackContext),\n            'show': bind(opts.show, callbackContext),\n            'hide': bind(opts.hide, callbackContext),\n            'beforeShow': bind(opts.beforeShow, callbackContext)\n        };\n\n        return opts;\n    }\n\n    function spectrum(element, o) {\n\n        var opts = instanceOptions(o, element),\n            flat = opts.flat,\n            showSelectionPalette = opts.showSelectionPalette,\n            localStorageKey = opts.localStorageKey,\n            theme = opts.theme,\n            callbacks = opts.callbacks,\n            resize = throttle(reflow, 10),\n            visible = false,\n            isDragging = false,\n            dragWidth = 0,\n            dragHeight = 0,\n            dragHelperHeight = 0,\n            slideHeight = 0,\n            slideWidth = 0,\n            alphaWidth = 0,\n            alphaSlideHelperWidth = 0,\n            slideHelperHeight = 0,\n            currentHue = 0,\n            currentSaturation = 0,\n            currentValue = 0,\n            currentAlpha = 1,\n            palette = [],\n            paletteArray = [],\n            paletteLookup = {},\n            selectionPalette = opts.selectionPalette.slice(0),\n            maxSelectionSize = opts.maxSelectionSize,\n            draggingClass = \"sp-dragging\",\n            shiftMovementDirection = null;\n\n        var doc = element.ownerDocument,\n            body = doc.body,\n            boundElement = $(element),\n            disabled = false,\n            container = $(markup, doc).addClass(theme),\n            pickerContainer = container.find(\".sp-picker-container\"),\n            dragger = container.find(\".sp-color\"),\n            dragHelper = container.find(\".sp-dragger\"),\n            slider = container.find(\".sp-hue\"),\n            slideHelper = container.find(\".sp-slider\"),\n            alphaSliderInner = container.find(\".sp-alpha-inner\"),\n            alphaSlider = container.find(\".sp-alpha\"),\n            alphaSlideHelper = container.find(\".sp-alpha-handle\"),\n            textInput = container.find(\".sp-input\"),\n            paletteContainer = container.find(\".sp-palette\"),\n            initialColorContainer = container.find(\".sp-initial\"),\n            cancelButton = container.find(\".sp-cancel\"),\n            clearButton = container.find(\".sp-clear\"),\n            chooseButton = container.find(\".sp-choose\"),\n            toggleButton = container.find(\".sp-palette-toggle\"),\n            isInput = boundElement.is(\"input\"),\n            isInputTypeColor = isInput && boundElement.attr(\"type\") === \"color\" && inputTypeColorSupport(),\n            shouldReplace = isInput && !flat,\n            replacer = (shouldReplace) ? $(replaceInput).addClass(theme).addClass(opts.className).addClass(opts.replacerClassName) : $([]),\n            offsetElement = (shouldReplace) ? replacer : boundElement,\n            previewElement = replacer.find(\".sp-preview-inner\"),\n            initialColor = opts.color || (isInput && boundElement.val()),\n            colorOnShow = false,\n            currentPreferredFormat = opts.preferredFormat,\n            clickoutFiresChange = !opts.showButtons || opts.clickoutFiresChange,\n            isEmpty = !initialColor,\n            allowEmpty = opts.allowEmpty && !isInputTypeColor;\n\n        function applyOptions() {\n\n            if (opts.showPaletteOnly) {\n                opts.showPalette = true;\n            }\n\n            toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\n\n            if (opts.palette) {\n                palette = opts.palette.slice(0);\n                paletteArray = $.isArray(palette[0]) ? palette : [palette];\n                paletteLookup = {};\n                for (var i = 0; i < paletteArray.length; i++) {\n                    for (var j = 0; j < paletteArray[i].length; j++) {\n                        var rgb = tinycolor(paletteArray[i][j]).toRgbString();\n                        paletteLookup[rgb] = true;\n                    }\n                }\n            }\n\n            container.toggleClass(\"sp-flat\", flat);\n            container.toggleClass(\"sp-input-disabled\", !opts.showInput);\n            container.toggleClass(\"sp-alpha-enabled\", opts.showAlpha);\n            container.toggleClass(\"sp-clear-enabled\", allowEmpty);\n            container.toggleClass(\"sp-buttons-disabled\", !opts.showButtons);\n            container.toggleClass(\"sp-palette-buttons-disabled\", !opts.togglePaletteOnly);\n            container.toggleClass(\"sp-palette-disabled\", !opts.showPalette);\n            container.toggleClass(\"sp-palette-only\", opts.showPaletteOnly);\n            container.toggleClass(\"sp-initial-disabled\", !opts.showInitial);\n            container.addClass(opts.className).addClass(opts.containerClassName);\n\n            reflow();\n        }\n\n        function initialize() {\n\n            if (IE) {\n                container.find(\"*:not(input)\").attr(\"unselectable\", \"on\");\n            }\n\n            applyOptions();\n\n            if (shouldReplace) {\n                boundElement.after(replacer).hide();\n            }\n\n            if (!allowEmpty) {\n                clearButton.hide();\n            }\n\n            if (flat) {\n                boundElement.after(container).hide();\n            }\n            else {\n\n                var appendTo = opts.appendTo === \"parent\" ? boundElement.parent() : $(opts.appendTo);\n                if (appendTo.length !== 1) {\n                    appendTo = $(\"body\");\n                }\n\n                appendTo.append(container);\n            }\n\n            updateSelectionPaletteFromStorage();\n\n            offsetElement.bind(\"click.spectrum touchstart.spectrum\", function (e) {\n                if (!disabled) {\n                    toggle();\n                }\n\n                e.stopPropagation();\n\n                if (!$(e.target).is(\"input\")) {\n                    e.preventDefault();\n                }\n            });\n\n            if(boundElement.is(\":disabled\") || (opts.disabled === true)) {\n                disable();\n            }\n\n            // Prevent clicks from bubbling up to document.  This would cause it to be hidden.\n            container.click(stopPropagation);\n\n            // Handle user typed input\n            textInput.change(setFromTextInput);\n            textInput.bind(\"paste\", function () {\n                setTimeout(setFromTextInput, 1);\n            });\n            textInput.keydown(function (e) { if (e.keyCode == 13) { setFromTextInput(); } });\n\n            cancelButton.text(opts.cancelText);\n            cancelButton.bind(\"click.spectrum\", function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n                revert();\n                hide();\n            });\n\n            clearButton.attr(\"title\", opts.clearText);\n            clearButton.bind(\"click.spectrum\", function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n                isEmpty = true;\n                move();\n\n                if(flat) {\n                    //for the flat style, this is a change event\n                    updateOriginalInput(true);\n                }\n            });\n\n            chooseButton.text(opts.chooseText);\n            chooseButton.bind(\"click.spectrum\", function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n\n                if (IE && textInput.is(\":focus\")) {\n                    textInput.trigger('change');\n                }\n\n                if (isValid()) {\n                    updateOriginalInput(true);\n                    hide();\n                }\n            });\n\n            toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\n            toggleButton.bind(\"click.spectrum\", function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n\n                opts.showPaletteOnly = !opts.showPaletteOnly;\n\n                // To make sure the Picker area is drawn on the right, next to the\n                // Palette area (and not below the palette), first move the Palette\n                // to the left to make space for the picker, plus 5px extra.\n                // The 'applyOptions' function puts the whole container back into place\n                // and takes care of the button-text and the sp-palette-only CSS class.\n                if (!opts.showPaletteOnly && !flat) {\n                    container.css('left', '-=' + (pickerContainer.outerWidth(true) + 5));\n                }\n                applyOptions();\n            });\n\n            draggable(alphaSlider, function (dragX, dragY, e) {\n                currentAlpha = (dragX / alphaWidth);\n                isEmpty = false;\n                if (e.shiftKey) {\n                    currentAlpha = Math.round(currentAlpha * 10) / 10;\n                }\n\n                move();\n            }, dragStart, dragStop);\n\n            draggable(slider, function (dragX, dragY) {\n                currentHue = parseFloat(dragY / slideHeight);\n                isEmpty = false;\n                if (!opts.showAlpha) {\n                    currentAlpha = 1;\n                }\n                move();\n            }, dragStart, dragStop);\n\n            draggable(dragger, function (dragX, dragY, e) {\n\n                // shift+drag should snap the movement to either the x or y axis.\n                if (!e.shiftKey) {\n                    shiftMovementDirection = null;\n                }\n                else if (!shiftMovementDirection) {\n                    var oldDragX = currentSaturation * dragWidth;\n                    var oldDragY = dragHeight - (currentValue * dragHeight);\n                    var furtherFromX = Math.abs(dragX - oldDragX) > Math.abs(dragY - oldDragY);\n\n                    shiftMovementDirection = furtherFromX ? \"x\" : \"y\";\n                }\n\n                var setSaturation = !shiftMovementDirection || shiftMovementDirection === \"x\";\n                var setValue = !shiftMovementDirection || shiftMovementDirection === \"y\";\n\n                if (setSaturation) {\n                    currentSaturation = parseFloat(dragX / dragWidth);\n                }\n                if (setValue) {\n                    currentValue = parseFloat((dragHeight - dragY) / dragHeight);\n                }\n\n                isEmpty = false;\n                if (!opts.showAlpha) {\n                    currentAlpha = 1;\n                }\n\n                move();\n\n            }, dragStart, dragStop);\n\n            if (!!initialColor) {\n                set(initialColor);\n\n                // In case color was black - update the preview UI and set the format\n                // since the set function will not run (default color is black).\n                updateUI();\n                currentPreferredFormat = opts.preferredFormat || tinycolor(initialColor).format;\n\n                addColorToSelectionPalette(initialColor);\n            }\n            else {\n                updateUI();\n            }\n\n            if (flat) {\n                show();\n            }\n\n            function paletteElementClick(e) {\n                if (e.data && e.data.ignore) {\n                    set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\n                    move();\n                }\n                else {\n                    set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\n                    move();\n                    updateOriginalInput(true);\n                    if (opts.hideAfterPaletteSelect) {\n                        hide();\n                    }\n                }\n\n                return false;\n            }\n\n            var paletteEvent = IE ? \"mousedown.spectrum\" : \"click.spectrum touchstart.spectrum\";\n            paletteContainer.delegate(\".sp-thumb-el\", paletteEvent, paletteElementClick);\n            initialColorContainer.delegate(\".sp-thumb-el:nth-child(1)\", paletteEvent, { ignore: true }, paletteElementClick);\n        }\n\n        function updateSelectionPaletteFromStorage() {\n\n            if (localStorageKey && window.localStorage) {\n\n                // Migrate old palettes over to new format.  May want to remove this eventually.\n                try {\n                    var oldPalette = window.localStorage[localStorageKey].split(\",#\");\n                    if (oldPalette.length > 1) {\n                        delete window.localStorage[localStorageKey];\n                        $.each(oldPalette, function(i, c) {\n                            addColorToSelectionPalette(c);\n                        });\n                    }\n                }\n                catch(e) { }\n\n                try {\n                    selectionPalette = window.localStorage[localStorageKey].split(\";\");\n                }\n                catch (e) { }\n            }\n        }\n\n        function addColorToSelectionPalette(color) {\n            if (showSelectionPalette) {\n                var rgb = tinycolor(color).toRgbString();\n                if (!paletteLookup[rgb] && $.inArray(rgb, selectionPalette) === -1) {\n                    selectionPalette.push(rgb);\n                    while(selectionPalette.length > maxSelectionSize) {\n                        selectionPalette.shift();\n                    }\n                }\n\n                if (localStorageKey && window.localStorage) {\n                    try {\n                        window.localStorage[localStorageKey] = selectionPalette.join(\";\");\n                    }\n                    catch(e) { }\n                }\n            }\n        }\n\n        function getUniqueSelectionPalette() {\n            var unique = [];\n            if (opts.showPalette) {\n                for (var i = 0; i < selectionPalette.length; i++) {\n                    var rgb = tinycolor(selectionPalette[i]).toRgbString();\n\n                    if (!paletteLookup[rgb]) {\n                        unique.push(selectionPalette[i]);\n                    }\n                }\n            }\n\n            return unique.reverse().slice(0, opts.maxSelectionSize);\n        }\n\n        function drawPalette() {\n\n            var currentColor = get();\n\n            var html = $.map(paletteArray, function (palette, i) {\n                return paletteTemplate(palette, currentColor, \"sp-palette-row sp-palette-row-\" + i, opts);\n            });\n\n            updateSelectionPaletteFromStorage();\n\n            if (selectionPalette) {\n                html.push(paletteTemplate(getUniqueSelectionPalette(), currentColor, \"sp-palette-row sp-palette-row-selection\", opts));\n            }\n\n            paletteContainer.html(html.join(\"\"));\n        }\n\n        function drawInitial() {\n            if (opts.showInitial) {\n                var initial = colorOnShow;\n                var current = get();\n                initialColorContainer.html(paletteTemplate([initial, current], current, \"sp-palette-row-initial\", opts));\n            }\n        }\n\n        function dragStart() {\n            if (dragHeight <= 0 || dragWidth <= 0 || slideHeight <= 0) {\n                reflow();\n            }\n            isDragging = true;\n            container.addClass(draggingClass);\n            shiftMovementDirection = null;\n            boundElement.trigger('dragstart.spectrum', [ get() ]);\n        }\n\n        function dragStop() {\n            isDragging = false;\n            container.removeClass(draggingClass);\n            boundElement.trigger('dragstop.spectrum', [ get() ]);\n        }\n\n        function setFromTextInput() {\n\n            var value = textInput.val();\n\n            if ((value === null || value === \"\") && allowEmpty) {\n                set(null);\n                updateOriginalInput(true);\n            }\n            else {\n                var tiny = tinycolor(value);\n                if (tiny.isValid()) {\n                    set(tiny);\n                    updateOriginalInput(true);\n                }\n                else {\n                    textInput.addClass(\"sp-validation-error\");\n                }\n            }\n        }\n\n        function toggle() {\n            if (visible) {\n                hide();\n            }\n            else {\n                show();\n            }\n        }\n\n        function show() {\n            var event = $.Event('beforeShow.spectrum');\n\n            if (visible) {\n                reflow();\n                return;\n            }\n\n            boundElement.trigger(event, [ get() ]);\n\n            if (callbacks.beforeShow(get()) === false || event.isDefaultPrevented()) {\n                return;\n            }\n\n            hideAll();\n            visible = true;\n\n            $(doc).bind(\"keydown.spectrum\", onkeydown);\n            $(doc).bind(\"click.spectrum\", clickout);\n            $(window).bind(\"resize.spectrum\", resize);\n            replacer.addClass(\"sp-active\");\n            container.removeClass(\"sp-hidden\");\n\n            reflow();\n            updateUI();\n\n            colorOnShow = get();\n\n            drawInitial();\n            callbacks.show(colorOnShow);\n            boundElement.trigger('show.spectrum', [ colorOnShow ]);\n        }\n\n        function onkeydown(e) {\n            // Close on ESC\n            if (e.keyCode === 27) {\n                hide();\n            }\n        }\n\n        function clickout(e) {\n            // Return on right click.\n            if (e.button == 2) { return; }\n\n            // If a drag event was happening during the mouseup, don't hide\n            // on click.\n            if (isDragging) { return; }\n\n            if (clickoutFiresChange) {\n                updateOriginalInput(true);\n            }\n            else {\n                revert();\n            }\n            hide();\n        }\n\n        function hide() {\n            // Return if hiding is unnecessary\n            if (!visible || flat) { return; }\n            visible = false;\n\n            $(doc).unbind(\"keydown.spectrum\", onkeydown);\n            $(doc).unbind(\"click.spectrum\", clickout);\n            $(window).unbind(\"resize.spectrum\", resize);\n\n            replacer.removeClass(\"sp-active\");\n            container.addClass(\"sp-hidden\");\n\n            callbacks.hide(get());\n            boundElement.trigger('hide.spectrum', [ get() ]);\n        }\n\n        function revert() {\n            set(colorOnShow, true);\n        }\n\n        function set(color, ignoreFormatChange) {\n            if (tinycolor.equals(color, get())) {\n                // Update UI just in case a validation error needs\n                // to be cleared.\n                updateUI();\n                return;\n            }\n\n            var newColor, newHsv;\n            if (!color && allowEmpty) {\n                isEmpty = true;\n            } else {\n                isEmpty = false;\n                newColor = tinycolor(color);\n                newHsv = newColor.toHsv();\n\n                currentHue = (newHsv.h % 360) / 360;\n                currentSaturation = newHsv.s;\n                currentValue = newHsv.v;\n                currentAlpha = newHsv.a;\n            }\n            updateUI();\n\n            if (newColor && newColor.isValid() && !ignoreFormatChange) {\n                currentPreferredFormat = opts.preferredFormat || newColor.getFormat();\n            }\n        }\n\n        function get(opts) {\n            opts = opts || { };\n\n            if (allowEmpty && isEmpty) {\n                return null;\n            }\n\n            return tinycolor.fromRatio({\n                h: currentHue,\n                s: currentSaturation,\n                v: currentValue,\n                a: Math.round(currentAlpha * 100) / 100\n            }, { format: opts.format || currentPreferredFormat });\n        }\n\n        function isValid() {\n            return !textInput.hasClass(\"sp-validation-error\");\n        }\n\n        function move() {\n            updateUI();\n\n            callbacks.move(get());\n            boundElement.trigger('move.spectrum', [ get() ]);\n        }\n\n        function updateUI() {\n\n            textInput.removeClass(\"sp-validation-error\");\n\n            updateHelperLocations();\n\n            // Update dragger background color (gradients take care of saturation and value).\n            var flatColor = tinycolor.fromRatio({ h: currentHue, s: 1, v: 1 });\n            dragger.css(\"background-color\", flatColor.toHexString());\n\n            // Get a format that alpha will be included in (hex and names ignore alpha)\n            var format = currentPreferredFormat;\n            if (currentAlpha < 1 && !(currentAlpha === 0 && format === \"name\")) {\n                if (format === \"hex\" || format === \"hex3\" || format === \"hex6\" || format === \"name\") {\n                    format = \"rgb\";\n                }\n            }\n\n            var realColor = get({ format: format }),\n                displayColor = '';\n\n            //reset background info for preview element\n            previewElement.removeClass(\"sp-clear-display\");\n            previewElement.css('background-color', 'transparent');\n\n            if (!realColor && allowEmpty) {\n                // Update the replaced elements background with icon indicating no color selection\n                previewElement.addClass(\"sp-clear-display\");\n            }\n            else {\n                var realHex = realColor.toHexString(),\n                    realRgb = realColor.toRgbString();\n\n                // Update the replaced elements background color (with actual selected color)\n                if (rgbaSupport || realColor.alpha === 1) {\n                    previewElement.css(\"background-color\", realRgb);\n                }\n                else {\n                    previewElement.css(\"background-color\", \"transparent\");\n                    previewElement.css(\"filter\", realColor.toFilter());\n                }\n\n                if (opts.showAlpha) {\n                    var rgb = realColor.toRgb();\n                    rgb.a = 0;\n                    var realAlpha = tinycolor(rgb).toRgbString();\n                    var gradient = \"linear-gradient(left, \" + realAlpha + \", \" + realHex + \")\";\n\n                    if (IE) {\n                        alphaSliderInner.css(\"filter\", tinycolor(realAlpha).toFilter({ gradientType: 1 }, realHex));\n                    }\n                    else {\n                        alphaSliderInner.css(\"background\", \"-webkit-\" + gradient);\n                        alphaSliderInner.css(\"background\", \"-moz-\" + gradient);\n                        alphaSliderInner.css(\"background\", \"-ms-\" + gradient);\n                        // Use current syntax gradient on unprefixed property.\n                        alphaSliderInner.css(\"background\",\n                            \"linear-gradient(to right, \" + realAlpha + \", \" + realHex + \")\");\n                    }\n                }\n\n                displayColor = realColor.toString(format);\n            }\n\n            // Update the text entry input as it changes happen\n            if (opts.showInput) {\n                textInput.val(displayColor);\n            }\n\n            if (opts.showPalette) {\n                drawPalette();\n            }\n\n            drawInitial();\n        }\n\n        function updateHelperLocations() {\n            var s = currentSaturation;\n            var v = currentValue;\n\n            if(allowEmpty && isEmpty) {\n                //if selected color is empty, hide the helpers\n                alphaSlideHelper.hide();\n                slideHelper.hide();\n                dragHelper.hide();\n            }\n            else {\n                //make sure helpers are visible\n                alphaSlideHelper.show();\n                slideHelper.show();\n                dragHelper.show();\n\n                // Where to show the little circle in that displays your current selected color\n                var dragX = s * dragWidth;\n                var dragY = dragHeight - (v * dragHeight);\n                dragX = Math.max(\n                    -dragHelperHeight,\n                    Math.min(dragWidth - dragHelperHeight, dragX - dragHelperHeight)\n                );\n                dragY = Math.max(\n                    -dragHelperHeight,\n                    Math.min(dragHeight - dragHelperHeight, dragY - dragHelperHeight)\n                );\n                dragHelper.css({\n                    \"top\": dragY + \"px\",\n                    \"left\": dragX + \"px\"\n                });\n\n                var alphaX = currentAlpha * alphaWidth;\n                alphaSlideHelper.css({\n                    \"left\": (alphaX - (alphaSlideHelperWidth / 2)) + \"px\"\n                });\n\n                // Where to show the bar that displays your current selected hue\n                var slideY = (currentHue) * slideHeight;\n                slideHelper.css({\n                    \"top\": (slideY - slideHelperHeight) + \"px\"\n                });\n            }\n        }\n\n        function updateOriginalInput(fireCallback) {\n            var color = get(),\n                displayColor = '',\n                hasChanged = !tinycolor.equals(color, colorOnShow);\n\n            if (color) {\n                displayColor = color.toString(currentPreferredFormat);\n                // Update the selection palette with the current color\n                addColorToSelectionPalette(color);\n            }\n\n            if (isInput) {\n                boundElement.val(displayColor);\n            }\n\n            if (fireCallback && hasChanged) {\n                callbacks.change(color);\n                boundElement.trigger('change', [ color ]);\n            }\n        }\n\n        function reflow() {\n            if (!visible) {\n                return; // Calculations would be useless and wouldn't be reliable anyways\n            }\n            dragWidth = dragger.width();\n            dragHeight = dragger.height();\n            dragHelperHeight = dragHelper.height();\n            slideWidth = slider.width();\n            slideHeight = slider.height();\n            slideHelperHeight = slideHelper.height();\n            alphaWidth = alphaSlider.width();\n            alphaSlideHelperWidth = alphaSlideHelper.width();\n\n            if (!flat) {\n                container.css(\"position\", \"absolute\");\n                if (opts.offset) {\n                    container.offset(opts.offset);\n                } else {\n                    container.offset(getOffset(container, offsetElement));\n                }\n            }\n\n            updateHelperLocations();\n\n            if (opts.showPalette) {\n                drawPalette();\n            }\n\n            boundElement.trigger('reflow.spectrum');\n        }\n\n        function destroy() {\n            boundElement.show();\n            offsetElement.unbind(\"click.spectrum touchstart.spectrum\");\n            container.remove();\n            replacer.remove();\n            spectrums[spect.id] = null;\n        }\n\n        function option(optionName, optionValue) {\n            if (optionName === undefined) {\n                return $.extend({}, opts);\n            }\n            if (optionValue === undefined) {\n                return opts[optionName];\n            }\n\n            opts[optionName] = optionValue;\n\n            if (optionName === \"preferredFormat\") {\n                currentPreferredFormat = opts.preferredFormat;\n            }\n            applyOptions();\n        }\n\n        function enable() {\n            disabled = false;\n            boundElement.attr(\"disabled\", false);\n            offsetElement.removeClass(\"sp-disabled\");\n        }\n\n        function disable() {\n            hide();\n            disabled = true;\n            boundElement.attr(\"disabled\", true);\n            offsetElement.addClass(\"sp-disabled\");\n        }\n\n        function setOffset(coord) {\n            opts.offset = coord;\n            reflow();\n        }\n\n        initialize();\n\n        var spect = {\n            show: show,\n            hide: hide,\n            toggle: toggle,\n            reflow: reflow,\n            option: option,\n            enable: enable,\n            disable: disable,\n            offset: setOffset,\n            set: function (c) {\n                set(c);\n                updateOriginalInput();\n            },\n            get: get,\n            destroy: destroy,\n            container: container\n        };\n\n        spect.id = spectrums.push(spect) - 1;\n\n        return spect;\n    }\n\n    /**\n     * checkOffset - get the offset below/above and left/right element depending on screen position\n     * Thanks https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.datepicker.js\n     */\n    function getOffset(picker, input) {\n        var extraY = 0;\n        var dpWidth = picker.outerWidth();\n        var dpHeight = picker.outerHeight();\n        var inputHeight = input.outerHeight();\n        var doc = picker[0].ownerDocument;\n        var docElem = doc.documentElement;\n        var viewWidth = docElem.clientWidth + $(doc).scrollLeft();\n        var viewHeight = docElem.clientHeight + $(doc).scrollTop();\n        var offset = input.offset();\n        offset.top += inputHeight;\n\n        offset.left -=\n            Math.min(offset.left, (offset.left + dpWidth > viewWidth && viewWidth > dpWidth) ?\n                Math.abs(offset.left + dpWidth - viewWidth) : 0);\n\n        offset.top -=\n            Math.min(offset.top, ((offset.top + dpHeight > viewHeight && viewHeight > dpHeight) ?\n                Math.abs(dpHeight + inputHeight - extraY) : extraY));\n\n        return offset;\n    }\n\n    /**\n     * noop - do nothing\n     */\n    function noop() {\n\n    }\n\n    /**\n     * stopPropagation - makes the code only doing this a little easier to read in line\n     */\n    function stopPropagation(e) {\n        e.stopPropagation();\n    }\n\n    /**\n     * Create a function bound to a given object\n     * Thanks to underscore.js\n     */\n    function bind(func, obj) {\n        var slice = Array.prototype.slice;\n        var args = slice.call(arguments, 2);\n        return function () {\n            return func.apply(obj, args.concat(slice.call(arguments)));\n        };\n    }\n\n    /**\n     * Lightweight drag helper.  Handles containment within the element, so that\n     * when dragging, the x is within [0,element.width] and y is within [0,element.height]\n     */\n    function draggable(element, onmove, onstart, onstop) {\n        onmove = onmove || function () { };\n        onstart = onstart || function () { };\n        onstop = onstop || function () { };\n        var doc = document;\n        var dragging = false;\n        var offset = {};\n        var maxHeight = 0;\n        var maxWidth = 0;\n        var hasTouch = ('ontouchstart' in window);\n\n        var duringDragEvents = {};\n        duringDragEvents[\"selectstart\"] = prevent;\n        duringDragEvents[\"dragstart\"] = prevent;\n        duringDragEvents[\"touchmove mousemove\"] = move;\n        duringDragEvents[\"touchend mouseup\"] = stop;\n\n        function prevent(e) {\n            if (e.stopPropagation) {\n                e.stopPropagation();\n            }\n            if (e.preventDefault) {\n                e.preventDefault();\n            }\n            e.returnValue = false;\n        }\n\n        function move(e) {\n            if (dragging) {\n                // Mouseup happened outside of window\n                if (IE && doc.documentMode < 9 && !e.button) {\n                    return stop();\n                }\n\n                var t0 = e.originalEvent && e.originalEvent.touches && e.originalEvent.touches[0];\n                var pageX = t0 && t0.pageX || e.pageX;\n                var pageY = t0 && t0.pageY || e.pageY;\n\n                var dragX = Math.max(0, Math.min(pageX - offset.left, maxWidth));\n                var dragY = Math.max(0, Math.min(pageY - offset.top, maxHeight));\n\n                if (hasTouch) {\n                    // Stop scrolling in iOS\n                    prevent(e);\n                }\n\n                onmove.apply(element, [dragX, dragY, e]);\n            }\n        }\n\n        function start(e) {\n            var rightclick = (e.which) ? (e.which == 3) : (e.button == 2);\n\n            if (!rightclick && !dragging) {\n                if (onstart.apply(element, arguments) !== false) {\n                    dragging = true;\n                    maxHeight = $(element).height();\n                    maxWidth = $(element).width();\n                    offset = $(element).offset();\n\n                    $(doc).bind(duringDragEvents);\n                    $(doc.body).addClass(\"sp-dragging\");\n\n                    move(e);\n\n                    prevent(e);\n                }\n            }\n        }\n\n        function stop() {\n            if (dragging) {\n                $(doc).unbind(duringDragEvents);\n                $(doc.body).removeClass(\"sp-dragging\");\n\n                // Wait a tick before notifying observers to allow the click event\n                // to fire in Chrome.\n                setTimeout(function() {\n                    onstop.apply(element, arguments);\n                }, 0);\n            }\n            dragging = false;\n        }\n\n        $(element).bind(\"touchstart mousedown\", start);\n    }\n\n    function throttle(func, wait, debounce) {\n        var timeout;\n        return function () {\n            var context = this, args = arguments;\n            var throttler = function () {\n                timeout = null;\n                func.apply(context, args);\n            };\n            if (debounce) clearTimeout(timeout);\n            if (debounce || !timeout) timeout = setTimeout(throttler, wait);\n        };\n    }\n\n    function inputTypeColorSupport() {\n        return $.fn.spectrum.inputTypeColorSupport();\n    }\n\n    /**\n     * Define a jQuery plugin\n     */\n    var dataID = \"spectrum.id\";\n    $.fn.spectrum = function (opts, extra) {\n\n        if (typeof opts == \"string\") {\n\n            var returnValue = this;\n            var args = Array.prototype.slice.call( arguments, 1 );\n\n            this.each(function () {\n                var spect = spectrums[$(this).data(dataID)];\n                if (spect) {\n                    var method = spect[opts];\n                    if (!method) {\n                        throw new Error( \"Spectrum: no such method: '\" + opts + \"'\" );\n                    }\n\n                    if (opts == \"get\") {\n                        returnValue = spect.get();\n                    }\n                    else if (opts == \"container\") {\n                        returnValue = spect.container;\n                    }\n                    else if (opts == \"option\") {\n                        returnValue = spect.option.apply(spect, args);\n                    }\n                    else if (opts == \"destroy\") {\n                        spect.destroy();\n                        $(this).removeData(dataID);\n                    }\n                    else {\n                        method.apply(spect, args);\n                    }\n                }\n            });\n\n            return returnValue;\n        }\n\n        // Initializing a new instance of spectrum\n        return this.spectrum(\"destroy\").each(function () {\n            var options = $.extend({}, opts, $(this).data());\n            var spect = spectrum(this, options);\n            $(this).data(dataID, spect.id);\n        });\n    };\n\n    $.fn.spectrum.load = true;\n    $.fn.spectrum.loadOpts = {};\n    $.fn.spectrum.draggable = draggable;\n    $.fn.spectrum.defaults = defaultOpts;\n    $.fn.spectrum.inputTypeColorSupport = function inputTypeColorSupport() {\n        if (typeof inputTypeColorSupport._cachedResult === \"undefined\") {\n            var colorInput = $(\"<input type='color'/>\")[0]; // if color element is supported, value will default to not null\n            inputTypeColorSupport._cachedResult = colorInput.type === \"color\" && colorInput.value !== \"\";\n        }\n        return inputTypeColorSupport._cachedResult;\n    };\n\n    $.spectrum = { };\n    $.spectrum.localization = { };\n    $.spectrum.palettes = { };\n\n    $.fn.spectrum.processNativeColorInputs = function () {\n        var colorInputs = $(\"input[type=color]\");\n        if (colorInputs.length && !inputTypeColorSupport()) {\n            colorInputs.spectrum({\n                preferredFormat: \"hex6\"\n            });\n        }\n    };\n\n    // TinyColor v1.1.2\n    // https://github.com/bgrins/TinyColor\n    // Brian Grinstead, MIT License\n\n    (function() {\n\n        var trimLeft = /^[\\s,#]+/,\n            trimRight = /\\s+$/,\n            tinyCounter = 0,\n            math = Math,\n            mathRound = math.round,\n            mathMin = math.min,\n            mathMax = math.max,\n            mathRandom = math.random;\n\n        var tinycolor = function(color, opts) {\n\n            color = (color) ? color : '';\n            opts = opts || { };\n\n            // If input is already a tinycolor, return itself\n            if (color instanceof tinycolor) {\n                return color;\n            }\n            // If we are called as a function, call using new instead\n            if (!(this instanceof tinycolor)) {\n                return new tinycolor(color, opts);\n            }\n\n            var rgb = inputToRGB(color);\n            this._originalInput = color,\n                this._r = rgb.r,\n                this._g = rgb.g,\n                this._b = rgb.b,\n                this._a = rgb.a,\n                this._roundA = mathRound(100*this._a) / 100,\n                this._format = opts.format || rgb.format;\n            this._gradientType = opts.gradientType;\n\n            // Don't let the range of [0,255] come back in [0,1].\n            // Potentially lose a little bit of precision here, but will fix issues where\n            // .5 gets interpreted as half of the total, instead of half of 1\n            // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n            if (this._r < 1) { this._r = mathRound(this._r); }\n            if (this._g < 1) { this._g = mathRound(this._g); }\n            if (this._b < 1) { this._b = mathRound(this._b); }\n\n            this._ok = rgb.ok;\n            this._tc_id = tinyCounter++;\n        };\n\n        tinycolor.prototype = {\n            isDark: function() {\n                return this.getBrightness() < 128;\n            },\n            isLight: function() {\n                return !this.isDark();\n            },\n            isValid: function() {\n                return this._ok;\n            },\n            getOriginalInput: function() {\n                return this._originalInput;\n            },\n            getFormat: function() {\n                return this._format;\n            },\n            getAlpha: function() {\n                return this._a;\n            },\n            getBrightness: function() {\n                var rgb = this.toRgb();\n                return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n            },\n            setAlpha: function(value) {\n                this._a = boundAlpha(value);\n                this._roundA = mathRound(100*this._a) / 100;\n                return this;\n            },\n            toHsv: function() {\n                var hsv = rgbToHsv(this._r, this._g, this._b);\n                return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n            },\n            toHsvString: function() {\n                var hsv = rgbToHsv(this._r, this._g, this._b);\n                var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n                return (this._a == 1) ?\n                    \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n                    \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n            },\n            toHsl: function() {\n                var hsl = rgbToHsl(this._r, this._g, this._b);\n                return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n            },\n            toHslString: function() {\n                var hsl = rgbToHsl(this._r, this._g, this._b);\n                var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n                return (this._a == 1) ?\n                    \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n                    \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n            },\n            toHex: function(allow3Char) {\n                return rgbToHex(this._r, this._g, this._b, allow3Char);\n            },\n            toHexString: function(allow3Char) {\n                return '#' + this.toHex(allow3Char);\n            },\n            toHex8: function() {\n                return rgbaToHex(this._r, this._g, this._b, this._a);\n            },\n            toHex8String: function() {\n                return '#' + this.toHex8();\n            },\n            toRgb: function() {\n                return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n            },\n            toRgbString: function() {\n                return (this._a == 1) ?\n                    \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n                    \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n            },\n            toPercentageRgb: function() {\n                return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n            },\n            toPercentageRgbString: function() {\n                return (this._a == 1) ?\n                    \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n                    \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n            },\n            toName: function() {\n                if (this._a === 0) {\n                    return \"transparent\";\n                }\n\n                if (this._a < 1) {\n                    return false;\n                }\n\n                return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n            },\n            toFilter: function(secondColor) {\n                var hex8String = '#' + rgbaToHex(this._r, this._g, this._b, this._a);\n                var secondHex8String = hex8String;\n                var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n                if (secondColor) {\n                    var s = tinycolor(secondColor);\n                    secondHex8String = s.toHex8String();\n                }\n\n                return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n            },\n            toString: function(format) {\n                var formatSet = !!format;\n                format = format || this._format;\n\n                var formattedString = false;\n                var hasAlpha = this._a < 1 && this._a >= 0;\n                var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"name\");\n\n                if (needsAlphaFormat) {\n                    // Special case for \"transparent\", all other non-alpha formats\n                    // will return rgba when there is transparency.\n                    if (format === \"name\" && this._a === 0) {\n                        return this.toName();\n                    }\n                    return this.toRgbString();\n                }\n                if (format === \"rgb\") {\n                    formattedString = this.toRgbString();\n                }\n                if (format === \"prgb\") {\n                    formattedString = this.toPercentageRgbString();\n                }\n                if (format === \"hex\" || format === \"hex6\") {\n                    formattedString = this.toHexString();\n                }\n                if (format === \"hex3\") {\n                    formattedString = this.toHexString(true);\n                }\n                if (format === \"hex8\") {\n                    formattedString = this.toHex8String();\n                }\n                if (format === \"name\") {\n                    formattedString = this.toName();\n                }\n                if (format === \"hsl\") {\n                    formattedString = this.toHslString();\n                }\n                if (format === \"hsv\") {\n                    formattedString = this.toHsvString();\n                }\n\n                return formattedString || this.toHexString();\n            },\n\n            _applyModification: function(fn, args) {\n                var color = fn.apply(null, [this].concat([].slice.call(args)));\n                this._r = color._r;\n                this._g = color._g;\n                this._b = color._b;\n                this.setAlpha(color._a);\n                return this;\n            },\n            lighten: function() {\n                return this._applyModification(lighten, arguments);\n            },\n            brighten: function() {\n                return this._applyModification(brighten, arguments);\n            },\n            darken: function() {\n                return this._applyModification(darken, arguments);\n            },\n            desaturate: function() {\n                return this._applyModification(desaturate, arguments);\n            },\n            saturate: function() {\n                return this._applyModification(saturate, arguments);\n            },\n            greyscale: function() {\n                return this._applyModification(greyscale, arguments);\n            },\n            spin: function() {\n                return this._applyModification(spin, arguments);\n            },\n\n            _applyCombination: function(fn, args) {\n                return fn.apply(null, [this].concat([].slice.call(args)));\n            },\n            analogous: function() {\n                return this._applyCombination(analogous, arguments);\n            },\n            complement: function() {\n                return this._applyCombination(complement, arguments);\n            },\n            monochromatic: function() {\n                return this._applyCombination(monochromatic, arguments);\n            },\n            splitcomplement: function() {\n                return this._applyCombination(splitcomplement, arguments);\n            },\n            triad: function() {\n                return this._applyCombination(triad, arguments);\n            },\n            tetrad: function() {\n                return this._applyCombination(tetrad, arguments);\n            }\n        };\n\n        // If input is an object, force 1 into \"1.0\" to handle ratios properly\n        // String input requires \"1.0\" as input, so 1 will be treated as 1\n        tinycolor.fromRatio = function(color, opts) {\n            if (typeof color == \"object\") {\n                var newColor = {};\n                for (var i in color) {\n                    if (color.hasOwnProperty(i)) {\n                        if (i === \"a\") {\n                            newColor[i] = color[i];\n                        }\n                        else {\n                            newColor[i] = convertToPercentage(color[i]);\n                        }\n                    }\n                }\n                color = newColor;\n            }\n\n            return tinycolor(color, opts);\n        };\n\n        // Given a string or object, convert that input to RGB\n        // Possible string inputs:\n        //\n        //     \"red\"\n        //     \"#f00\" or \"f00\"\n        //     \"#ff0000\" or \"ff0000\"\n        //     \"#ff000000\" or \"ff000000\"\n        //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n        //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n        //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n        //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n        //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n        //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n        //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n        //\n        function inputToRGB(color) {\n\n            var rgb = { r: 0, g: 0, b: 0 };\n            var a = 1;\n            var ok = false;\n            var format = false;\n\n            if (typeof color == \"string\") {\n                color = stringInputToObject(color);\n            }\n\n            if (typeof color == \"object\") {\n                if (color.hasOwnProperty(\"r\") && color.hasOwnProperty(\"g\") && color.hasOwnProperty(\"b\")) {\n                    rgb = rgbToRgb(color.r, color.g, color.b);\n                    ok = true;\n                    format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n                }\n                else if (color.hasOwnProperty(\"h\") && color.hasOwnProperty(\"s\") && color.hasOwnProperty(\"v\")) {\n                    color.s = convertToPercentage(color.s);\n                    color.v = convertToPercentage(color.v);\n                    rgb = hsvToRgb(color.h, color.s, color.v);\n                    ok = true;\n                    format = \"hsv\";\n                }\n                else if (color.hasOwnProperty(\"h\") && color.hasOwnProperty(\"s\") && color.hasOwnProperty(\"l\")) {\n                    color.s = convertToPercentage(color.s);\n                    color.l = convertToPercentage(color.l);\n                    rgb = hslToRgb(color.h, color.s, color.l);\n                    ok = true;\n                    format = \"hsl\";\n                }\n\n                if (color.hasOwnProperty(\"a\")) {\n                    a = color.a;\n                }\n            }\n\n            a = boundAlpha(a);\n\n            return {\n                ok: ok,\n                format: color.format || format,\n                r: mathMin(255, mathMax(rgb.r, 0)),\n                g: mathMin(255, mathMax(rgb.g, 0)),\n                b: mathMin(255, mathMax(rgb.b, 0)),\n                a: a\n            };\n        }\n\n\n        // Conversion Functions\n        // --------------------\n\n        // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n        // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n        // `rgbToRgb`\n        // Handle bounds / percentage checking to conform to CSS color spec\n        // <http://www.w3.org/TR/css3-color/>\n        // *Assumes:* r, g, b in [0, 255] or [0, 1]\n        // *Returns:* { r, g, b } in [0, 255]\n        function rgbToRgb(r, g, b){\n            return {\n                r: bound01(r, 255) * 255,\n                g: bound01(g, 255) * 255,\n                b: bound01(b, 255) * 255\n            };\n        }\n\n        // `rgbToHsl`\n        // Converts an RGB color value to HSL.\n        // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n        // *Returns:* { h, s, l } in [0,1]\n        function rgbToHsl(r, g, b) {\n\n            r = bound01(r, 255);\n            g = bound01(g, 255);\n            b = bound01(b, 255);\n\n            var max = mathMax(r, g, b), min = mathMin(r, g, b);\n            var h, s, l = (max + min) / 2;\n\n            if(max == min) {\n                h = s = 0; // achromatic\n            }\n            else {\n                var d = max - min;\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n                switch(max) {\n                    case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n                    case g: h = (b - r) / d + 2; break;\n                    case b: h = (r - g) / d + 4; break;\n                }\n\n                h /= 6;\n            }\n\n            return { h: h, s: s, l: l };\n        }\n\n        // `hslToRgb`\n        // Converts an HSL color value to RGB.\n        // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n        // *Returns:* { r, g, b } in the set [0, 255]\n        function hslToRgb(h, s, l) {\n            var r, g, b;\n\n            h = bound01(h, 360);\n            s = bound01(s, 100);\n            l = bound01(l, 100);\n\n            function hue2rgb(p, q, t) {\n                if(t < 0) t += 1;\n                if(t > 1) t -= 1;\n                if(t < 1/6) return p + (q - p) * 6 * t;\n                if(t < 1/2) return q;\n                if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n                return p;\n            }\n\n            if(s === 0) {\n                r = g = b = l; // achromatic\n            }\n            else {\n                var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n                var p = 2 * l - q;\n                r = hue2rgb(p, q, h + 1/3);\n                g = hue2rgb(p, q, h);\n                b = hue2rgb(p, q, h - 1/3);\n            }\n\n            return { r: r * 255, g: g * 255, b: b * 255 };\n        }\n\n        // `rgbToHsv`\n        // Converts an RGB color value to HSV\n        // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n        // *Returns:* { h, s, v } in [0,1]\n        function rgbToHsv(r, g, b) {\n\n            r = bound01(r, 255);\n            g = bound01(g, 255);\n            b = bound01(b, 255);\n\n            var max = mathMax(r, g, b), min = mathMin(r, g, b);\n            var h, s, v = max;\n\n            var d = max - min;\n            s = max === 0 ? 0 : d / max;\n\n            if(max == min) {\n                h = 0; // achromatic\n            }\n            else {\n                switch(max) {\n                    case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n                    case g: h = (b - r) / d + 2; break;\n                    case b: h = (r - g) / d + 4; break;\n                }\n                h /= 6;\n            }\n            return { h: h, s: s, v: v };\n        }\n\n        // `hsvToRgb`\n        // Converts an HSV color value to RGB.\n        // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n        // *Returns:* { r, g, b } in the set [0, 255]\n        function hsvToRgb(h, s, v) {\n\n            h = bound01(h, 360) * 6;\n            s = bound01(s, 100);\n            v = bound01(v, 100);\n\n            var i = math.floor(h),\n                f = h - i,\n                p = v * (1 - s),\n                q = v * (1 - f * s),\n                t = v * (1 - (1 - f) * s),\n                mod = i % 6,\n                r = [v, q, p, p, t, v][mod],\n                g = [t, v, v, q, p, p][mod],\n                b = [p, p, t, v, v, q][mod];\n\n            return { r: r * 255, g: g * 255, b: b * 255 };\n        }\n\n        // `rgbToHex`\n        // Converts an RGB color to hex\n        // Assumes r, g, and b are contained in the set [0, 255]\n        // Returns a 3 or 6 character hex\n        function rgbToHex(r, g, b, allow3Char) {\n\n            var hex = [\n                pad2(mathRound(r).toString(16)),\n                pad2(mathRound(g).toString(16)),\n                pad2(mathRound(b).toString(16))\n            ];\n\n            // Return a 3 character hex if possible\n            if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n                return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n            }\n\n            return hex.join(\"\");\n        }\n        // `rgbaToHex`\n        // Converts an RGBA color plus alpha transparency to hex\n        // Assumes r, g, b and a are contained in the set [0, 255]\n        // Returns an 8 character hex\n        function rgbaToHex(r, g, b, a) {\n\n            var hex = [\n                pad2(convertDecimalToHex(a)),\n                pad2(mathRound(r).toString(16)),\n                pad2(mathRound(g).toString(16)),\n                pad2(mathRound(b).toString(16))\n            ];\n\n            return hex.join(\"\");\n        }\n\n        // `equals`\n        // Can be called with any tinycolor input\n        tinycolor.equals = function (color1, color2) {\n            if (!color1 || !color2) { return false; }\n            return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n        };\n        tinycolor.random = function() {\n            return tinycolor.fromRatio({\n                r: mathRandom(),\n                g: mathRandom(),\n                b: mathRandom()\n            });\n        };\n\n\n        // Modification Functions\n        // ----------------------\n        // Thanks to less.js for some of the basics here\n        // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\n        function desaturate(color, amount) {\n            amount = (amount === 0) ? 0 : (amount || 10);\n            var hsl = tinycolor(color).toHsl();\n            hsl.s -= amount / 100;\n            hsl.s = clamp01(hsl.s);\n            return tinycolor(hsl);\n        }\n\n        function saturate(color, amount) {\n            amount = (amount === 0) ? 0 : (amount || 10);\n            var hsl = tinycolor(color).toHsl();\n            hsl.s += amount / 100;\n            hsl.s = clamp01(hsl.s);\n            return tinycolor(hsl);\n        }\n\n        function greyscale(color) {\n            return tinycolor(color).desaturate(100);\n        }\n\n        function lighten (color, amount) {\n            amount = (amount === 0) ? 0 : (amount || 10);\n            var hsl = tinycolor(color).toHsl();\n            hsl.l += amount / 100;\n            hsl.l = clamp01(hsl.l);\n            return tinycolor(hsl);\n        }\n\n        function brighten(color, amount) {\n            amount = (amount === 0) ? 0 : (amount || 10);\n            var rgb = tinycolor(color).toRgb();\n            rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n            rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n            rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n            return tinycolor(rgb);\n        }\n\n        function darken (color, amount) {\n            amount = (amount === 0) ? 0 : (amount || 10);\n            var hsl = tinycolor(color).toHsl();\n            hsl.l -= amount / 100;\n            hsl.l = clamp01(hsl.l);\n            return tinycolor(hsl);\n        }\n\n        // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n        // Values outside of this range will be wrapped into this range.\n        function spin(color, amount) {\n            var hsl = tinycolor(color).toHsl();\n            var hue = (mathRound(hsl.h) + amount) % 360;\n            hsl.h = hue < 0 ? 360 + hue : hue;\n            return tinycolor(hsl);\n        }\n\n        // Combination Functions\n        // ---------------------\n        // Thanks to jQuery xColor for some of the ideas behind these\n        // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\n        function complement(color) {\n            var hsl = tinycolor(color).toHsl();\n            hsl.h = (hsl.h + 180) % 360;\n            return tinycolor(hsl);\n        }\n\n        function triad(color) {\n            var hsl = tinycolor(color).toHsl();\n            var h = hsl.h;\n            return [\n                tinycolor(color),\n                tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n                tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n            ];\n        }\n\n        function tetrad(color) {\n            var hsl = tinycolor(color).toHsl();\n            var h = hsl.h;\n            return [\n                tinycolor(color),\n                tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n                tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n                tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n            ];\n        }\n\n        function splitcomplement(color) {\n            var hsl = tinycolor(color).toHsl();\n            var h = hsl.h;\n            return [\n                tinycolor(color),\n                tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n                tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n            ];\n        }\n\n        function analogous(color, results, slices) {\n            results = results || 6;\n            slices = slices || 30;\n\n            var hsl = tinycolor(color).toHsl();\n            var part = 360 / slices;\n            var ret = [tinycolor(color)];\n\n            for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n                hsl.h = (hsl.h + part) % 360;\n                ret.push(tinycolor(hsl));\n            }\n            return ret;\n        }\n\n        function monochromatic(color, results) {\n            results = results || 6;\n            var hsv = tinycolor(color).toHsv();\n            var h = hsv.h, s = hsv.s, v = hsv.v;\n            var ret = [];\n            var modification = 1 / results;\n\n            while (results--) {\n                ret.push(tinycolor({ h: h, s: s, v: v}));\n                v = (v + modification) % 1;\n            }\n\n            return ret;\n        }\n\n        // Utility Functions\n        // ---------------------\n\n        tinycolor.mix = function(color1, color2, amount) {\n            amount = (amount === 0) ? 0 : (amount || 50);\n\n            var rgb1 = tinycolor(color1).toRgb();\n            var rgb2 = tinycolor(color2).toRgb();\n\n            var p = amount / 100;\n            var w = p * 2 - 1;\n            var a = rgb2.a - rgb1.a;\n\n            var w1;\n\n            if (w * a == -1) {\n                w1 = w;\n            } else {\n                w1 = (w + a) / (1 + w * a);\n            }\n\n            w1 = (w1 + 1) / 2;\n\n            var w2 = 1 - w1;\n\n            var rgba = {\n                r: rgb2.r * w1 + rgb1.r * w2,\n                g: rgb2.g * w1 + rgb1.g * w2,\n                b: rgb2.b * w1 + rgb1.b * w2,\n                a: rgb2.a * p  + rgb1.a * (1 - p)\n            };\n\n            return tinycolor(rgba);\n        };\n\n\n        // Readability Functions\n        // ---------------------\n        // <http://www.w3.org/TR/AERT#color-contrast>\n\n        // `readability`\n        // Analyze the 2 colors and returns an object with the following properties:\n        //    `brightness`: difference in brightness between the two colors\n        //    `color`: difference in color/hue between the two colors\n        tinycolor.readability = function(color1, color2) {\n            var c1 = tinycolor(color1);\n            var c2 = tinycolor(color2);\n            var rgb1 = c1.toRgb();\n            var rgb2 = c2.toRgb();\n            var brightnessA = c1.getBrightness();\n            var brightnessB = c2.getBrightness();\n            var colorDiff = (\n                Math.max(rgb1.r, rgb2.r) - Math.min(rgb1.r, rgb2.r) +\n                Math.max(rgb1.g, rgb2.g) - Math.min(rgb1.g, rgb2.g) +\n                Math.max(rgb1.b, rgb2.b) - Math.min(rgb1.b, rgb2.b)\n            );\n\n            return {\n                brightness: Math.abs(brightnessA - brightnessB),\n                color: colorDiff\n            };\n        };\n\n        // `readable`\n        // http://www.w3.org/TR/AERT#color-contrast\n        // Ensure that foreground and background color combinations provide sufficient contrast.\n        // *Example*\n        //    tinycolor.isReadable(\"#000\", \"#111\") => false\n        tinycolor.isReadable = function(color1, color2) {\n            var readability = tinycolor.readability(color1, color2);\n            return readability.brightness > 125 && readability.color > 500;\n        };\n\n        // `mostReadable`\n        // Given a base color and a list of possible foreground or background\n        // colors for that base, returns the most readable color.\n        // *Example*\n        //    tinycolor.mostReadable(\"#123\", [\"#fff\", \"#000\"]) => \"#000\"\n        tinycolor.mostReadable = function(baseColor, colorList) {\n            var bestColor = null;\n            var bestScore = 0;\n            var bestIsReadable = false;\n            for (var i=0; i < colorList.length; i++) {\n\n                // We normalize both around the \"acceptable\" breaking point,\n                // but rank brightness constrast higher than hue.\n\n                var readability = tinycolor.readability(baseColor, colorList[i]);\n                var readable = readability.brightness > 125 && readability.color > 500;\n                var score = 3 * (readability.brightness / 125) + (readability.color / 500);\n\n                if ((readable && ! bestIsReadable) ||\n                    (readable && bestIsReadable && score > bestScore) ||\n                    ((! readable) && (! bestIsReadable) && score > bestScore)) {\n                    bestIsReadable = readable;\n                    bestScore = score;\n                    bestColor = tinycolor(colorList[i]);\n                }\n            }\n            return bestColor;\n        };\n\n\n        // Big List of Colors\n        // ------------------\n        // <http://www.w3.org/TR/css3-color/#svg-color>\n        var names = tinycolor.names = {\n            aliceblue: \"f0f8ff\",\n            antiquewhite: \"faebd7\",\n            aqua: \"0ff\",\n            aquamarine: \"7fffd4\",\n            azure: \"f0ffff\",\n            beige: \"f5f5dc\",\n            bisque: \"ffe4c4\",\n            black: \"000\",\n            blanchedalmond: \"ffebcd\",\n            blue: \"00f\",\n            blueviolet: \"8a2be2\",\n            brown: \"a52a2a\",\n            burlywood: \"deb887\",\n            burntsienna: \"ea7e5d\",\n            cadetblue: \"5f9ea0\",\n            chartreuse: \"7fff00\",\n            chocolate: \"d2691e\",\n            coral: \"ff7f50\",\n            cornflowerblue: \"6495ed\",\n            cornsilk: \"fff8dc\",\n            crimson: \"dc143c\",\n            cyan: \"0ff\",\n            darkblue: \"00008b\",\n            darkcyan: \"008b8b\",\n            darkgoldenrod: \"b8860b\",\n            darkgray: \"a9a9a9\",\n            darkgreen: \"006400\",\n            darkgrey: \"a9a9a9\",\n            darkkhaki: \"bdb76b\",\n            darkmagenta: \"8b008b\",\n            darkolivegreen: \"556b2f\",\n            darkorange: \"ff8c00\",\n            darkorchid: \"9932cc\",\n            darkred: \"8b0000\",\n            darksalmon: \"e9967a\",\n            darkseagreen: \"8fbc8f\",\n            darkslateblue: \"483d8b\",\n            darkslategray: \"2f4f4f\",\n            darkslategrey: \"2f4f4f\",\n            darkturquoise: \"00ced1\",\n            darkviolet: \"9400d3\",\n            deeppink: \"ff1493\",\n            deepskyblue: \"00bfff\",\n            dimgray: \"696969\",\n            dimgrey: \"696969\",\n            dodgerblue: \"1e90ff\",\n            firebrick: \"b22222\",\n            floralwhite: \"fffaf0\",\n            forestgreen: \"228b22\",\n            fuchsia: \"f0f\",\n            gainsboro: \"dcdcdc\",\n            ghostwhite: \"f8f8ff\",\n            gold: \"ffd700\",\n            goldenrod: \"daa520\",\n            gray: \"808080\",\n            green: \"008000\",\n            greenyellow: \"adff2f\",\n            grey: \"808080\",\n            honeydew: \"f0fff0\",\n            hotpink: \"ff69b4\",\n            indianred: \"cd5c5c\",\n            indigo: \"4b0082\",\n            ivory: \"fffff0\",\n            khaki: \"f0e68c\",\n            lavender: \"e6e6fa\",\n            lavenderblush: \"fff0f5\",\n            lawngreen: \"7cfc00\",\n            lemonchiffon: \"fffacd\",\n            lightblue: \"add8e6\",\n            lightcoral: \"f08080\",\n            lightcyan: \"e0ffff\",\n            lightgoldenrodyellow: \"fafad2\",\n            lightgray: \"d3d3d3\",\n            lightgreen: \"90ee90\",\n            lightgrey: \"d3d3d3\",\n            lightpink: \"ffb6c1\",\n            lightsalmon: \"ffa07a\",\n            lightseagreen: \"20b2aa\",\n            lightskyblue: \"87cefa\",\n            lightslategray: \"789\",\n            lightslategrey: \"789\",\n            lightsteelblue: \"b0c4de\",\n            lightyellow: \"ffffe0\",\n            lime: \"0f0\",\n            limegreen: \"32cd32\",\n            linen: \"faf0e6\",\n            magenta: \"f0f\",\n            maroon: \"800000\",\n            mediumaquamarine: \"66cdaa\",\n            mediumblue: \"0000cd\",\n            mediumorchid: \"ba55d3\",\n            mediumpurple: \"9370db\",\n            mediumseagreen: \"3cb371\",\n            mediumslateblue: \"7b68ee\",\n            mediumspringgreen: \"00fa9a\",\n            mediumturquoise: \"48d1cc\",\n            mediumvioletred: \"c71585\",\n            midnightblue: \"191970\",\n            mintcream: \"f5fffa\",\n            mistyrose: \"ffe4e1\",\n            moccasin: \"ffe4b5\",\n            navajowhite: \"ffdead\",\n            navy: \"000080\",\n            oldlace: \"fdf5e6\",\n            olive: \"808000\",\n            olivedrab: \"6b8e23\",\n            orange: \"ffa500\",\n            orangered: \"ff4500\",\n            orchid: \"da70d6\",\n            palegoldenrod: \"eee8aa\",\n            palegreen: \"98fb98\",\n            paleturquoise: \"afeeee\",\n            palevioletred: \"db7093\",\n            papayawhip: \"ffefd5\",\n            peachpuff: \"ffdab9\",\n            peru: \"cd853f\",\n            pink: \"ffc0cb\",\n            plum: \"dda0dd\",\n            powderblue: \"b0e0e6\",\n            purple: \"800080\",\n            rebeccapurple: \"663399\",\n            red: \"f00\",\n            rosybrown: \"bc8f8f\",\n            royalblue: \"4169e1\",\n            saddlebrown: \"8b4513\",\n            salmon: \"fa8072\",\n            sandybrown: \"f4a460\",\n            seagreen: \"2e8b57\",\n            seashell: \"fff5ee\",\n            sienna: \"a0522d\",\n            silver: \"c0c0c0\",\n            skyblue: \"87ceeb\",\n            slateblue: \"6a5acd\",\n            slategray: \"708090\",\n            slategrey: \"708090\",\n            snow: \"fffafa\",\n            springgreen: \"00ff7f\",\n            steelblue: \"4682b4\",\n            tan: \"d2b48c\",\n            teal: \"008080\",\n            thistle: \"d8bfd8\",\n            tomato: \"ff6347\",\n            turquoise: \"40e0d0\",\n            violet: \"ee82ee\",\n            wheat: \"f5deb3\",\n            white: \"fff\",\n            whitesmoke: \"f5f5f5\",\n            yellow: \"ff0\",\n            yellowgreen: \"9acd32\"\n        };\n\n        // Make it easy to access colors via `hexNames[hex]`\n        var hexNames = tinycolor.hexNames = flip(names);\n\n\n        // Utilities\n        // ---------\n\n        // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\n        function flip(o) {\n            var flipped = { };\n            for (var i in o) {\n                if (o.hasOwnProperty(i)) {\n                    flipped[o[i]] = i;\n                }\n            }\n            return flipped;\n        }\n\n        // Return a valid alpha value [0,1] with all invalid values being set to 1\n        function boundAlpha(a) {\n            a = parseFloat(a);\n\n            if (isNaN(a) || a < 0 || a > 1) {\n                a = 1;\n            }\n\n            return a;\n        }\n\n        // Take input from [0, n] and return it as [0, 1]\n        function bound01(n, max) {\n            if (isOnePointZero(n)) { n = \"100%\"; }\n\n            var processPercent = isPercentage(n);\n            n = mathMin(max, mathMax(0, parseFloat(n)));\n\n            // Automatically convert percentage into number\n            if (processPercent) {\n                n = parseInt(n * max, 10) / 100;\n            }\n\n            // Handle floating point rounding errors\n            if ((math.abs(n - max) < 0.000001)) {\n                return 1;\n            }\n\n            // Convert into [0, 1] range if it isn't already\n            return (n % max) / parseFloat(max);\n        }\n\n        // Force a number between 0 and 1\n        function clamp01(val) {\n            return mathMin(1, mathMax(0, val));\n        }\n\n        // Parse a base-16 hex value into a base-10 integer\n        function parseIntFromHex(val) {\n            return parseInt(val, 16);\n        }\n\n        // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n        // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n        function isOnePointZero(n) {\n            return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n        }\n\n        // Check to see if string passed in is a percentage\n        function isPercentage(n) {\n            return typeof n === \"string\" && n.indexOf('%') != -1;\n        }\n\n        // Force a hex value to have 2 characters\n        function pad2(c) {\n            return c.length == 1 ? '0' + c : '' + c;\n        }\n\n        // Replace a decimal with it's percentage value\n        function convertToPercentage(n) {\n            if (n <= 1) {\n                n = (n * 100) + \"%\";\n            }\n\n            return n;\n        }\n\n        // Converts a decimal to a hex value\n        function convertDecimalToHex(d) {\n            return Math.round(parseFloat(d) * 255).toString(16);\n        }\n        // Converts a hex value to a decimal\n        function convertHexToDecimal(h) {\n            return (parseIntFromHex(h) / 255);\n        }\n\n        var matchers = (function() {\n\n            // <http://www.w3.org/TR/css3-values/#integers>\n            var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n            // <http://www.w3.org/TR/css3-values/#number-value>\n            var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n            // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n            var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n            // Actual matching.\n            // Parentheses and commas are optional, but not required.\n            // Whitespace can take the place of commas or opening paren\n            var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n            var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n            return {\n                rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n                rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n                hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n                hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n                hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n                hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n                hex3: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n                hex6: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n                hex8: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n            };\n        })();\n\n        // `stringInputToObject`\n        // Permissive string parsing.  Take in a number of formats, and output an object\n        // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n        function stringInputToObject(color) {\n\n            color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n            var named = false;\n            if (names[color]) {\n                color = names[color];\n                named = true;\n            }\n            else if (color == 'transparent') {\n                return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n            }\n\n            // Try to match string input using regular expressions.\n            // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n            // Just return an object and let the conversion functions handle that.\n            // This way the result will be the same whether the tinycolor is initialized with string or object.\n            var match;\n            if ((match = matchers.rgb.exec(color))) {\n                return { r: match[1], g: match[2], b: match[3] };\n            }\n            if ((match = matchers.rgba.exec(color))) {\n                return { r: match[1], g: match[2], b: match[3], a: match[4] };\n            }\n            if ((match = matchers.hsl.exec(color))) {\n                return { h: match[1], s: match[2], l: match[3] };\n            }\n            if ((match = matchers.hsla.exec(color))) {\n                return { h: match[1], s: match[2], l: match[3], a: match[4] };\n            }\n            if ((match = matchers.hsv.exec(color))) {\n                return { h: match[1], s: match[2], v: match[3] };\n            }\n            if ((match = matchers.hsva.exec(color))) {\n                return { h: match[1], s: match[2], v: match[3], a: match[4] };\n            }\n            if ((match = matchers.hex8.exec(color))) {\n                return {\n                    a: convertHexToDecimal(match[1]),\n                    r: parseIntFromHex(match[2]),\n                    g: parseIntFromHex(match[3]),\n                    b: parseIntFromHex(match[4]),\n                    format: named ? \"name\" : \"hex8\"\n                };\n            }\n            if ((match = matchers.hex6.exec(color))) {\n                return {\n                    r: parseIntFromHex(match[1]),\n                    g: parseIntFromHex(match[2]),\n                    b: parseIntFromHex(match[3]),\n                    format: named ? \"name\" : \"hex\"\n                };\n            }\n            if ((match = matchers.hex3.exec(color))) {\n                return {\n                    r: parseIntFromHex(match[1] + '' + match[1]),\n                    g: parseIntFromHex(match[2] + '' + match[2]),\n                    b: parseIntFromHex(match[3] + '' + match[3]),\n                    format: named ? \"name\" : \"hex\"\n                };\n            }\n\n            return false;\n        }\n\n        window.tinycolor = tinycolor;\n    })();\n\n    $(function () {\n        if ($.fn.spectrum.load) {\n            $.fn.spectrum.processNativeColorInputs();\n        }\n    });\n\n});\n","jquery/spectrum/tinycolor.js":"// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\n    var trimLeft = /^\\s+/,\n        trimRight = /\\s+$/,\n        tinyCounter = 0,\n        mathRound = Math.round,\n        mathMin = Math.min,\n        mathMax = Math.max,\n        mathRandom = Math.random;\n\n    function tinycolor (color, opts) {\n\n        color = (color) ? color : '';\n        opts = opts || { };\n\n        // If input is already a tinycolor, return itself\n        if (color instanceof tinycolor) {\n            return color;\n        }\n        // If we are called as a function, call using new instead\n        if (!(this instanceof tinycolor)) {\n            return new tinycolor(color, opts);\n        }\n\n        var rgb = inputToRGB(color);\n        this._originalInput = color,\n            this._r = rgb.r,\n            this._g = rgb.g,\n            this._b = rgb.b,\n            this._a = rgb.a,\n            this._roundA = mathRound(100*this._a) / 100,\n            this._format = opts.format || rgb.format;\n        this._gradientType = opts.gradientType;\n\n        // Don't let the range of [0,255] come back in [0,1].\n        // Potentially lose a little bit of precision here, but will fix issues where\n        // .5 gets interpreted as half of the total, instead of half of 1\n        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n        if (this._r < 1) { this._r = mathRound(this._r); }\n        if (this._g < 1) { this._g = mathRound(this._g); }\n        if (this._b < 1) { this._b = mathRound(this._b); }\n\n        this._ok = rgb.ok;\n        this._tc_id = tinyCounter++;\n    }\n\n    tinycolor.prototype = {\n        isDark: function() {\n            return this.getBrightness() < 128;\n        },\n        isLight: function() {\n            return !this.isDark();\n        },\n        isValid: function() {\n            return this._ok;\n        },\n        getOriginalInput: function() {\n            return this._originalInput;\n        },\n        getFormat: function() {\n            return this._format;\n        },\n        getAlpha: function() {\n            return this._a;\n        },\n        getBrightness: function() {\n            //http://www.w3.org/TR/AERT#color-contrast\n            var rgb = this.toRgb();\n            return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n        },\n        getLuminance: function() {\n            //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n            var rgb = this.toRgb();\n            var RsRGB, GsRGB, BsRGB, R, G, B;\n            RsRGB = rgb.r/255;\n            GsRGB = rgb.g/255;\n            BsRGB = rgb.b/255;\n\n            if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n            if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n            if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n            return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n        },\n        setAlpha: function(value) {\n            this._a = boundAlpha(value);\n            this._roundA = mathRound(100*this._a) / 100;\n            return this;\n        },\n        toHsv: function() {\n            var hsv = rgbToHsv(this._r, this._g, this._b);\n            return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n        },\n        toHsvString: function() {\n            var hsv = rgbToHsv(this._r, this._g, this._b);\n            var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n            return (this._a == 1) ?\n                \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n                \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n        },\n        toHsl: function() {\n            var hsl = rgbToHsl(this._r, this._g, this._b);\n            return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n        },\n        toHslString: function() {\n            var hsl = rgbToHsl(this._r, this._g, this._b);\n            var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n            return (this._a == 1) ?\n                \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n                \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n        },\n        toHex: function(allow3Char) {\n            return rgbToHex(this._r, this._g, this._b, allow3Char);\n        },\n        toHexString: function(allow3Char) {\n            return '#' + this.toHex(allow3Char);\n        },\n        toHex8: function(allow4Char) {\n            return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n        },\n        toHex8String: function(allow4Char) {\n            return '#' + this.toHex8(allow4Char);\n        },\n        toRgb: function() {\n            return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n        },\n        toRgbString: function() {\n            return (this._a == 1) ?\n                \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n                \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n        },\n        toPercentageRgb: function() {\n            return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n        },\n        toPercentageRgbString: function() {\n            return (this._a == 1) ?\n                \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n                \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n        },\n        toName: function() {\n            if (this._a === 0) {\n                return \"transparent\";\n            }\n\n            if (this._a < 1) {\n                return false;\n            }\n\n            return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n        },\n        toFilter: function(secondColor) {\n            var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n            var secondHex8String = hex8String;\n            var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n            if (secondColor) {\n                var s = tinycolor(secondColor);\n                secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n            }\n\n            return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n        },\n        toString: function(format) {\n            var formatSet = !!format;\n            format = format || this._format;\n\n            var formattedString = false;\n            var hasAlpha = this._a < 1 && this._a >= 0;\n            var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n            if (needsAlphaFormat) {\n                // Special case for \"transparent\", all other non-alpha formats\n                // will return rgba when there is transparency.\n                if (format === \"name\" && this._a === 0) {\n                    return this.toName();\n                }\n                return this.toRgbString();\n            }\n            if (format === \"rgb\") {\n                formattedString = this.toRgbString();\n            }\n            if (format === \"prgb\") {\n                formattedString = this.toPercentageRgbString();\n            }\n            if (format === \"hex\" || format === \"hex6\") {\n                formattedString = this.toHexString();\n            }\n            if (format === \"hex3\") {\n                formattedString = this.toHexString(true);\n            }\n            if (format === \"hex4\") {\n                formattedString = this.toHex8String(true);\n            }\n            if (format === \"hex8\") {\n                formattedString = this.toHex8String();\n            }\n            if (format === \"name\") {\n                formattedString = this.toName();\n            }\n            if (format === \"hsl\") {\n                formattedString = this.toHslString();\n            }\n            if (format === \"hsv\") {\n                formattedString = this.toHsvString();\n            }\n\n            return formattedString || this.toHexString();\n        },\n        clone: function() {\n            return tinycolor(this.toString());\n        },\n\n        _applyModification: function(fn, args) {\n            var color = fn.apply(null, [this].concat([].slice.call(args)));\n            this._r = color._r;\n            this._g = color._g;\n            this._b = color._b;\n            this.setAlpha(color._a);\n            return this;\n        },\n        lighten: function() {\n            return this._applyModification(lighten, arguments);\n        },\n        brighten: function() {\n            return this._applyModification(brighten, arguments);\n        },\n        darken: function() {\n            return this._applyModification(darken, arguments);\n        },\n        desaturate: function() {\n            return this._applyModification(desaturate, arguments);\n        },\n        saturate: function() {\n            return this._applyModification(saturate, arguments);\n        },\n        greyscale: function() {\n            return this._applyModification(greyscale, arguments);\n        },\n        spin: function() {\n            return this._applyModification(spin, arguments);\n        },\n\n        _applyCombination: function(fn, args) {\n            return fn.apply(null, [this].concat([].slice.call(args)));\n        },\n        analogous: function() {\n            return this._applyCombination(analogous, arguments);\n        },\n        complement: function() {\n            return this._applyCombination(complement, arguments);\n        },\n        monochromatic: function() {\n            return this._applyCombination(monochromatic, arguments);\n        },\n        splitcomplement: function() {\n            return this._applyCombination(splitcomplement, arguments);\n        },\n        triad: function() {\n            return this._applyCombination(triad, arguments);\n        },\n        tetrad: function() {\n            return this._applyCombination(tetrad, arguments);\n        }\n    };\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\n    tinycolor.fromRatio = function(color, opts) {\n        if (typeof color == \"object\") {\n            var newColor = {};\n            for (var i in color) {\n                if (color.hasOwnProperty(i)) {\n                    if (i === \"a\") {\n                        newColor[i] = color[i];\n                    }\n                    else {\n                        newColor[i] = convertToPercentage(color[i]);\n                    }\n                }\n            }\n            color = newColor;\n        }\n\n        return tinycolor(color, opts);\n    };\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\n    function inputToRGB(color) {\n\n        var rgb = { r: 0, g: 0, b: 0 };\n        var a = 1;\n        var s = null;\n        var v = null;\n        var l = null;\n        var ok = false;\n        var format = false;\n\n        if (typeof color == \"string\") {\n            color = stringInputToObject(color);\n        }\n\n        if (typeof color == \"object\") {\n            if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n                rgb = rgbToRgb(color.r, color.g, color.b);\n                ok = true;\n                format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n            }\n            else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n                s = convertToPercentage(color.s);\n                v = convertToPercentage(color.v);\n                rgb = hsvToRgb(color.h, s, v);\n                ok = true;\n                format = \"hsv\";\n            }\n            else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n                s = convertToPercentage(color.s);\n                l = convertToPercentage(color.l);\n                rgb = hslToRgb(color.h, s, l);\n                ok = true;\n                format = \"hsl\";\n            }\n\n            if (color.hasOwnProperty(\"a\")) {\n                a = color.a;\n            }\n        }\n\n        a = boundAlpha(a);\n\n        return {\n            ok: ok,\n            format: color.format || format,\n            r: mathMin(255, mathMax(rgb.r, 0)),\n            g: mathMin(255, mathMax(rgb.g, 0)),\n            b: mathMin(255, mathMax(rgb.b, 0)),\n            a: a\n        };\n    }\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\n    function rgbToRgb(r, g, b){\n        return {\n            r: bound01(r, 255) * 255,\n            g: bound01(g, 255) * 255,\n            b: bound01(b, 255) * 255\n        };\n    }\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\n    function rgbToHsl(r, g, b) {\n\n        r = bound01(r, 255);\n        g = bound01(g, 255);\n        b = bound01(b, 255);\n\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\n        var h, s, l = (max + min) / 2;\n\n        if(max == min) {\n            h = s = 0; // achromatic\n        }\n        else {\n            var d = max - min;\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n            switch(max) {\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n                case g: h = (b - r) / d + 2; break;\n                case b: h = (r - g) / d + 4; break;\n            }\n\n            h /= 6;\n        }\n\n        return { h: h, s: s, l: l };\n    }\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n    function hslToRgb(h, s, l) {\n        var r, g, b;\n\n        h = bound01(h, 360);\n        s = bound01(s, 100);\n        l = bound01(l, 100);\n\n        function hue2rgb(p, q, t) {\n            if(t < 0) t += 1;\n            if(t > 1) t -= 1;\n            if(t < 1/6) return p + (q - p) * 6 * t;\n            if(t < 1/2) return q;\n            if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n            return p;\n        }\n\n        if(s === 0) {\n            r = g = b = l; // achromatic\n        }\n        else {\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            var p = 2 * l - q;\n            r = hue2rgb(p, q, h + 1/3);\n            g = hue2rgb(p, q, h);\n            b = hue2rgb(p, q, h - 1/3);\n        }\n\n        return { r: r * 255, g: g * 255, b: b * 255 };\n    }\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\n    function rgbToHsv(r, g, b) {\n\n        r = bound01(r, 255);\n        g = bound01(g, 255);\n        b = bound01(b, 255);\n\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\n        var h, s, v = max;\n\n        var d = max - min;\n        s = max === 0 ? 0 : d / max;\n\n        if(max == min) {\n            h = 0; // achromatic\n        }\n        else {\n            switch(max) {\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n                case g: h = (b - r) / d + 2; break;\n                case b: h = (r - g) / d + 4; break;\n            }\n            h /= 6;\n        }\n        return { h: h, s: s, v: v };\n    }\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n    function hsvToRgb(h, s, v) {\n\n        h = bound01(h, 360) * 6;\n        s = bound01(s, 100);\n        v = bound01(v, 100);\n\n        var i = Math.floor(h),\n            f = h - i,\n            p = v * (1 - s),\n            q = v * (1 - f * s),\n            t = v * (1 - (1 - f) * s),\n            mod = i % 6,\n            r = [v, q, p, p, t, v][mod],\n            g = [t, v, v, q, p, p][mod],\n            b = [p, p, t, v, v, q][mod];\n\n        return { r: r * 255, g: g * 255, b: b * 255 };\n    }\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\n    function rgbToHex(r, g, b, allow3Char) {\n\n        var hex = [\n            pad2(mathRound(r).toString(16)),\n            pad2(mathRound(g).toString(16)),\n            pad2(mathRound(b).toString(16))\n        ];\n\n        // Return a 3 character hex if possible\n        if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n            return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n        }\n\n        return hex.join(\"\");\n    }\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\n    function rgbaToHex(r, g, b, a, allow4Char) {\n\n        var hex = [\n            pad2(mathRound(r).toString(16)),\n            pad2(mathRound(g).toString(16)),\n            pad2(mathRound(b).toString(16)),\n            pad2(convertDecimalToHex(a))\n        ];\n\n        // Return a 4 character hex if possible\n        if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n            return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n        }\n\n        return hex.join(\"\");\n    }\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\n    function rgbaToArgbHex(r, g, b, a) {\n\n        var hex = [\n            pad2(convertDecimalToHex(a)),\n            pad2(mathRound(r).toString(16)),\n            pad2(mathRound(g).toString(16)),\n            pad2(mathRound(b).toString(16))\n        ];\n\n        return hex.join(\"\");\n    }\n\n// `equals`\n// Can be called with any tinycolor input\n    tinycolor.equals = function (color1, color2) {\n        if (!color1 || !color2) { return false; }\n        return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n    };\n\n    tinycolor.random = function() {\n        return tinycolor.fromRatio({\n            r: mathRandom(),\n            g: mathRandom(),\n            b: mathRandom()\n        });\n    };\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\n    function desaturate(color, amount) {\n        amount = (amount === 0) ? 0 : (amount || 10);\n        var hsl = tinycolor(color).toHsl();\n        hsl.s -= amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return tinycolor(hsl);\n    }\n\n    function saturate(color, amount) {\n        amount = (amount === 0) ? 0 : (amount || 10);\n        var hsl = tinycolor(color).toHsl();\n        hsl.s += amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return tinycolor(hsl);\n    }\n\n    function greyscale(color) {\n        return tinycolor(color).desaturate(100);\n    }\n\n    function lighten (color, amount) {\n        amount = (amount === 0) ? 0 : (amount || 10);\n        var hsl = tinycolor(color).toHsl();\n        hsl.l += amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return tinycolor(hsl);\n    }\n\n    function brighten(color, amount) {\n        amount = (amount === 0) ? 0 : (amount || 10);\n        var rgb = tinycolor(color).toRgb();\n        rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n        rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n        rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n        return tinycolor(rgb);\n    }\n\n    function darken (color, amount) {\n        amount = (amount === 0) ? 0 : (amount || 10);\n        var hsl = tinycolor(color).toHsl();\n        hsl.l -= amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return tinycolor(hsl);\n    }\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\n    function spin(color, amount) {\n        var hsl = tinycolor(color).toHsl();\n        var hue = (hsl.h + amount) % 360;\n        hsl.h = hue < 0 ? 360 + hue : hue;\n        return tinycolor(hsl);\n    }\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\n    function complement(color) {\n        var hsl = tinycolor(color).toHsl();\n        hsl.h = (hsl.h + 180) % 360;\n        return tinycolor(hsl);\n    }\n\n    function triad(color) {\n        var hsl = tinycolor(color).toHsl();\n        var h = hsl.h;\n        return [\n            tinycolor(color),\n            tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n            tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n        ];\n    }\n\n    function tetrad(color) {\n        var hsl = tinycolor(color).toHsl();\n        var h = hsl.h;\n        return [\n            tinycolor(color),\n            tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n            tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n            tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n        ];\n    }\n\n    function splitcomplement(color) {\n        var hsl = tinycolor(color).toHsl();\n        var h = hsl.h;\n        return [\n            tinycolor(color),\n            tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n            tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n        ];\n    }\n\n    function analogous(color, results, slices) {\n        results = results || 6;\n        slices = slices || 30;\n\n        var hsl = tinycolor(color).toHsl();\n        var part = 360 / slices;\n        var ret = [tinycolor(color)];\n\n        for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n            hsl.h = (hsl.h + part) % 360;\n            ret.push(tinycolor(hsl));\n        }\n        return ret;\n    }\n\n    function monochromatic(color, results) {\n        results = results || 6;\n        var hsv = tinycolor(color).toHsv();\n        var h = hsv.h, s = hsv.s, v = hsv.v;\n        var ret = [];\n        var modification = 1 / results;\n\n        while (results--) {\n            ret.push(tinycolor({ h: h, s: s, v: v}));\n            v = (v + modification) % 1;\n        }\n\n        return ret;\n    }\n\n// Utility Functions\n// ---------------------\n\n    tinycolor.mix = function(color1, color2, amount) {\n        amount = (amount === 0) ? 0 : (amount || 50);\n\n        var rgb1 = tinycolor(color1).toRgb();\n        var rgb2 = tinycolor(color2).toRgb();\n\n        var p = amount / 100;\n\n        var rgba = {\n            r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n            g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n            b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n            a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n        };\n\n        return tinycolor(rgba);\n    };\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\n    tinycolor.readability = function(color1, color2) {\n        var c1 = tinycolor(color1);\n        var c2 = tinycolor(color2);\n        return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n    };\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\n    tinycolor.isReadable = function(color1, color2, wcag2) {\n        var readability = tinycolor.readability(color1, color2);\n        var wcag2Parms, out;\n\n        out = false;\n\n        wcag2Parms = validateWCAG2Parms(wcag2);\n        switch (wcag2Parms.level + wcag2Parms.size) {\n            case \"AAsmall\":\n            case \"AAAlarge\":\n                out = readability >= 4.5;\n                break;\n            case \"AAlarge\":\n                out = readability >= 3;\n                break;\n            case \"AAAsmall\":\n                out = readability >= 7;\n                break;\n        }\n        return out;\n\n    };\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\n    tinycolor.mostReadable = function(baseColor, colorList, args) {\n        var bestColor = null;\n        var bestScore = 0;\n        var readability;\n        var includeFallbackColors, level, size ;\n        args = args || {};\n        includeFallbackColors = args.includeFallbackColors ;\n        level = args.level;\n        size = args.size;\n\n        for (var i= 0; i < colorList.length ; i++) {\n            readability = tinycolor.readability(baseColor, colorList[i]);\n            if (readability > bestScore) {\n                bestScore = readability;\n                bestColor = tinycolor(colorList[i]);\n            }\n        }\n\n        if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n            return bestColor;\n        }\n        else {\n            args.includeFallbackColors=false;\n            return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n        }\n    };\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\n    var names = tinycolor.names = {\n        aliceblue: \"f0f8ff\",\n        antiquewhite: \"faebd7\",\n        aqua: \"0ff\",\n        aquamarine: \"7fffd4\",\n        azure: \"f0ffff\",\n        beige: \"f5f5dc\",\n        bisque: \"ffe4c4\",\n        black: \"000\",\n        blanchedalmond: \"ffebcd\",\n        blue: \"00f\",\n        blueviolet: \"8a2be2\",\n        brown: \"a52a2a\",\n        burlywood: \"deb887\",\n        burntsienna: \"ea7e5d\",\n        cadetblue: \"5f9ea0\",\n        chartreuse: \"7fff00\",\n        chocolate: \"d2691e\",\n        coral: \"ff7f50\",\n        cornflowerblue: \"6495ed\",\n        cornsilk: \"fff8dc\",\n        crimson: \"dc143c\",\n        cyan: \"0ff\",\n        darkblue: \"00008b\",\n        darkcyan: \"008b8b\",\n        darkgoldenrod: \"b8860b\",\n        darkgray: \"a9a9a9\",\n        darkgreen: \"006400\",\n        darkgrey: \"a9a9a9\",\n        darkkhaki: \"bdb76b\",\n        darkmagenta: \"8b008b\",\n        darkolivegreen: \"556b2f\",\n        darkorange: \"ff8c00\",\n        darkorchid: \"9932cc\",\n        darkred: \"8b0000\",\n        darksalmon: \"e9967a\",\n        darkseagreen: \"8fbc8f\",\n        darkslateblue: \"483d8b\",\n        darkslategray: \"2f4f4f\",\n        darkslategrey: \"2f4f4f\",\n        darkturquoise: \"00ced1\",\n        darkviolet: \"9400d3\",\n        deeppink: \"ff1493\",\n        deepskyblue: \"00bfff\",\n        dimgray: \"696969\",\n        dimgrey: \"696969\",\n        dodgerblue: \"1e90ff\",\n        firebrick: \"b22222\",\n        floralwhite: \"fffaf0\",\n        forestgreen: \"228b22\",\n        fuchsia: \"f0f\",\n        gainsboro: \"dcdcdc\",\n        ghostwhite: \"f8f8ff\",\n        gold: \"ffd700\",\n        goldenrod: \"daa520\",\n        gray: \"808080\",\n        green: \"008000\",\n        greenyellow: \"adff2f\",\n        grey: \"808080\",\n        honeydew: \"f0fff0\",\n        hotpink: \"ff69b4\",\n        indianred: \"cd5c5c\",\n        indigo: \"4b0082\",\n        ivory: \"fffff0\",\n        khaki: \"f0e68c\",\n        lavender: \"e6e6fa\",\n        lavenderblush: \"fff0f5\",\n        lawngreen: \"7cfc00\",\n        lemonchiffon: \"fffacd\",\n        lightblue: \"add8e6\",\n        lightcoral: \"f08080\",\n        lightcyan: \"e0ffff\",\n        lightgoldenrodyellow: \"fafad2\",\n        lightgray: \"d3d3d3\",\n        lightgreen: \"90ee90\",\n        lightgrey: \"d3d3d3\",\n        lightpink: \"ffb6c1\",\n        lightsalmon: \"ffa07a\",\n        lightseagreen: \"20b2aa\",\n        lightskyblue: \"87cefa\",\n        lightslategray: \"789\",\n        lightslategrey: \"789\",\n        lightsteelblue: \"b0c4de\",\n        lightyellow: \"ffffe0\",\n        lime: \"0f0\",\n        limegreen: \"32cd32\",\n        linen: \"faf0e6\",\n        magenta: \"f0f\",\n        maroon: \"800000\",\n        mediumaquamarine: \"66cdaa\",\n        mediumblue: \"0000cd\",\n        mediumorchid: \"ba55d3\",\n        mediumpurple: \"9370db\",\n        mediumseagreen: \"3cb371\",\n        mediumslateblue: \"7b68ee\",\n        mediumspringgreen: \"00fa9a\",\n        mediumturquoise: \"48d1cc\",\n        mediumvioletred: \"c71585\",\n        midnightblue: \"191970\",\n        mintcream: \"f5fffa\",\n        mistyrose: \"ffe4e1\",\n        moccasin: \"ffe4b5\",\n        navajowhite: \"ffdead\",\n        navy: \"000080\",\n        oldlace: \"fdf5e6\",\n        olive: \"808000\",\n        olivedrab: \"6b8e23\",\n        orange: \"ffa500\",\n        orangered: \"ff4500\",\n        orchid: \"da70d6\",\n        palegoldenrod: \"eee8aa\",\n        palegreen: \"98fb98\",\n        paleturquoise: \"afeeee\",\n        palevioletred: \"db7093\",\n        papayawhip: \"ffefd5\",\n        peachpuff: \"ffdab9\",\n        peru: \"cd853f\",\n        pink: \"ffc0cb\",\n        plum: \"dda0dd\",\n        powderblue: \"b0e0e6\",\n        purple: \"800080\",\n        rebeccapurple: \"663399\",\n        red: \"f00\",\n        rosybrown: \"bc8f8f\",\n        royalblue: \"4169e1\",\n        saddlebrown: \"8b4513\",\n        salmon: \"fa8072\",\n        sandybrown: \"f4a460\",\n        seagreen: \"2e8b57\",\n        seashell: \"fff5ee\",\n        sienna: \"a0522d\",\n        silver: \"c0c0c0\",\n        skyblue: \"87ceeb\",\n        slateblue: \"6a5acd\",\n        slategray: \"708090\",\n        slategrey: \"708090\",\n        snow: \"fffafa\",\n        springgreen: \"00ff7f\",\n        steelblue: \"4682b4\",\n        tan: \"d2b48c\",\n        teal: \"008080\",\n        thistle: \"d8bfd8\",\n        tomato: \"ff6347\",\n        turquoise: \"40e0d0\",\n        violet: \"ee82ee\",\n        wheat: \"f5deb3\",\n        white: \"fff\",\n        whitesmoke: \"f5f5f5\",\n        yellow: \"ff0\",\n        yellowgreen: \"9acd32\"\n    };\n\n// Make it easy to access colors via `hexNames[hex]`\n    var hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\n    function flip(o) {\n        var flipped = { };\n        for (var i in o) {\n            if (o.hasOwnProperty(i)) {\n                flipped[o[i]] = i;\n            }\n        }\n        return flipped;\n    }\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\n    function boundAlpha(a) {\n        a = parseFloat(a);\n\n        if (isNaN(a) || a < 0 || a > 1) {\n            a = 1;\n        }\n\n        return a;\n    }\n\n// Take input from [0, n] and return it as [0, 1]\n    function bound01(n, max) {\n        if (isOnePointZero(n)) { n = \"100%\"; }\n\n        var processPercent = isPercentage(n);\n        n = mathMin(max, mathMax(0, parseFloat(n)));\n\n        // Automatically convert percentage into number\n        if (processPercent) {\n            n = parseInt(n * max, 10) / 100;\n        }\n\n        // Handle floating point rounding errors\n        if ((Math.abs(n - max) < 0.000001)) {\n            return 1;\n        }\n\n        // Convert into [0, 1] range if it isn't already\n        return (n % max) / parseFloat(max);\n    }\n\n// Force a number between 0 and 1\n    function clamp01(val) {\n        return mathMin(1, mathMax(0, val));\n    }\n\n// Parse a base-16 hex value into a base-10 integer\n    function parseIntFromHex(val) {\n        return parseInt(val, 16);\n    }\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n    function isOnePointZero(n) {\n        return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n    }\n\n// Check to see if string passed in is a percentage\n    function isPercentage(n) {\n        return typeof n === \"string\" && n.indexOf('%') != -1;\n    }\n\n// Force a hex value to have 2 characters\n    function pad2(c) {\n        return c.length == 1 ? '0' + c : '' + c;\n    }\n\n// Replace a decimal with it's percentage value\n    function convertToPercentage(n) {\n        if (n <= 1) {\n            n = (n * 100) + \"%\";\n        }\n\n        return n;\n    }\n\n// Converts a decimal to a hex value\n    function convertDecimalToHex(d) {\n        return Math.round(parseFloat(d) * 255).toString(16);\n    }\n// Converts a hex value to a decimal\n    function convertHexToDecimal(h) {\n        return (parseIntFromHex(h) / 255);\n    }\n\n    var matchers = (function() {\n\n        // <http://www.w3.org/TR/css3-values/#integers>\n        var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n        // <http://www.w3.org/TR/css3-values/#number-value>\n        var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n        // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n        var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n        // Actual matching.\n        // Parentheses and commas are optional, but not required.\n        // Whitespace can take the place of commas or opening paren\n        var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n        var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n        return {\n            CSS_UNIT: new RegExp(CSS_UNIT),\n            rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n            rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n            hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n            hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n            hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n            hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n            hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n            hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n            hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n            hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n        };\n    })();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\n    function isValidCSSUnit(color) {\n        return !!matchers.CSS_UNIT.exec(color);\n    }\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n    function stringInputToObject(color) {\n\n        color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n        var named = false;\n        if (names[color]) {\n            color = names[color];\n            named = true;\n        }\n        else if (color == 'transparent') {\n            return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n        }\n\n        // Try to match string input using regular expressions.\n        // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n        // Just return an object and let the conversion functions handle that.\n        // This way the result will be the same whether the tinycolor is initialized with string or object.\n        var match;\n        if ((match = matchers.rgb.exec(color))) {\n            return { r: match[1], g: match[2], b: match[3] };\n        }\n        if ((match = matchers.rgba.exec(color))) {\n            return { r: match[1], g: match[2], b: match[3], a: match[4] };\n        }\n        if ((match = matchers.hsl.exec(color))) {\n            return { h: match[1], s: match[2], l: match[3] };\n        }\n        if ((match = matchers.hsla.exec(color))) {\n            return { h: match[1], s: match[2], l: match[3], a: match[4] };\n        }\n        if ((match = matchers.hsv.exec(color))) {\n            return { h: match[1], s: match[2], v: match[3] };\n        }\n        if ((match = matchers.hsva.exec(color))) {\n            return { h: match[1], s: match[2], v: match[3], a: match[4] };\n        }\n        if ((match = matchers.hex8.exec(color))) {\n            return {\n                r: parseIntFromHex(match[1]),\n                g: parseIntFromHex(match[2]),\n                b: parseIntFromHex(match[3]),\n                a: convertHexToDecimal(match[4]),\n                format: named ? \"name\" : \"hex8\"\n            };\n        }\n        if ((match = matchers.hex6.exec(color))) {\n            return {\n                r: parseIntFromHex(match[1]),\n                g: parseIntFromHex(match[2]),\n                b: parseIntFromHex(match[3]),\n                format: named ? \"name\" : \"hex\"\n            };\n        }\n        if ((match = matchers.hex4.exec(color))) {\n            return {\n                r: parseIntFromHex(match[1] + '' + match[1]),\n                g: parseIntFromHex(match[2] + '' + match[2]),\n                b: parseIntFromHex(match[3] + '' + match[3]),\n                a: convertHexToDecimal(match[4] + '' + match[4]),\n                format: named ? \"name\" : \"hex8\"\n            };\n        }\n        if ((match = matchers.hex3.exec(color))) {\n            return {\n                r: parseIntFromHex(match[1] + '' + match[1]),\n                g: parseIntFromHex(match[2] + '' + match[2]),\n                b: parseIntFromHex(match[3] + '' + match[3]),\n                format: named ? \"name\" : \"hex\"\n            };\n        }\n\n        return false;\n    }\n\n    function validateWCAG2Parms(parms) {\n        // return valid WCAG2 parms for isReadable.\n        // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n        var level, size;\n        parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n        level = (parms.level || \"AA\").toUpperCase();\n        size = (parms.size || \"small\").toLowerCase();\n        if (level !== \"AA\" && level !== \"AAA\") {\n            level = \"AA\";\n        }\n        if (size !== \"small\" && size !== \"large\") {\n            size = \"small\";\n        }\n        return {\"level\":level, \"size\":size};\n    }\n\n// Node: Export function\n    if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = tinycolor;\n    }\n// AMD/requirejs: Define the module\n    else if (typeof define === 'function' && define.amd) {\n        define(function () {return tinycolor;});\n    }\n// Browser: Expose to window\n    else {\n        window.tinycolor = tinycolor;\n    }\n\n})(Math);\n","jquery/ui-modules/tabs.js":"/*!\n * jQuery UI Tabs - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/tabs/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/core',\n    'jquery-ui-modules/widget'\n], function ($, undefined) {\n\n    var tabId = 0,\n        rhash = /#.*$/;\n\n    function getNextTabId() {\n        return ++tabId;\n    }\n\n    function isLocal(anchor) {\n        // support: IE7\n        // IE7 doesn't normalize the href property when set via script (#9317)\n        anchor = anchor.cloneNode(false);\n\n        return anchor.hash.length > 1 &&\n            decodeURIComponent(anchor.href.replace(rhash, \"\")) ===\n            decodeURIComponent(location.href.replace(rhash, \"\"));\n    }\n\n    $.widget(\"ui.tabs\", {\n        version: \"1.10.4\",\n        delay: 300,\n        options: {\n            active: null,\n            collapsible: false,\n            event: \"click\",\n            heightStyle: \"content\",\n            hide: null,\n            show: null,\n\n            // callbacks\n            activate: null,\n            beforeActivate: null,\n            beforeLoad: null,\n            load: null\n        },\n\n        _create: function () {\n            var that = this,\n                options = this.options;\n\n            this.running = false;\n\n            this.element\n                .addClass(\"ui-tabs ui-widget ui-widget-content ui-corner-all\")\n                .toggleClass(\"ui-tabs-collapsible\", options.collapsible)\n                // Prevent users from focusing disabled tabs via click\n                .delegate(\".ui-tabs-nav > li\", \"mousedown\" + this.eventNamespace, function (event) {\n                    if ($(this).is(\".ui-state-disabled\")) {\n                        event.preventDefault();\n                    }\n                })\n                // support: IE <9\n                // Preventing the default action in mousedown doesn't prevent IE\n                // from focusing the element, so if the anchor gets focused, blur.\n                // We don't have to worry about focusing the previously focused\n                // element since clicking on a non-focusable element should focus\n                // the body anyway.\n                .delegate(\".ui-tabs-anchor\", \"focus\" + this.eventNamespace, function () {\n                    if ($(this).closest(\"li\").is(\".ui-state-disabled\")) {\n                        this.blur();\n                    }\n                });\n\n            this._processTabs();\n            options.active = this._initialActive();\n\n            // Take disabling tabs via class attribute from HTML\n            // into account and update option properly.\n            if ($.isArray(options.disabled)) {\n                options.disabled = $.unique(options.disabled.concat(\n                    $.map(this.tabs.filter(\".ui-state-disabled\"), function (li) {\n                        return that.tabs.index(li);\n                    })\n                )).sort();\n            }\n\n            // check for length avoids error when initializing empty list\n            if (this.options.active !== false && this.anchors.length) {\n                this.active = this._findActive(options.active);\n            } else {\n                this.active = $();\n            }\n\n            this._refresh();\n\n            if (this.active.length) {\n                this.load(options.active);\n            }\n        },\n\n        _initialActive: function () {\n            var active = this.options.active,\n                collapsible = this.options.collapsible,\n                locationHash = location.hash.substring(1);\n\n            if (active === null) {\n                // check the fragment identifier in the URL\n                if (locationHash) {\n                    this.tabs.each(function (i, tab) {\n                        if ($(tab).attr(\"aria-controls\") === locationHash) {\n                            active = i;\n                            return false;\n                        }\n                    });\n                }\n\n                // check for a tab marked active via a class\n                if (active === null) {\n                    active = this.tabs.index(this.tabs.filter(\".ui-tabs-active\"));\n                }\n\n                // no active tab, set to false\n                if (active === null || active === -1) {\n                    active = this.tabs.length ? 0 : false;\n                }\n            }\n\n            // handle numbers: negative, out of range\n            if (active !== false) {\n                active = this.tabs.index(this.tabs.eq(active));\n                if (active === -1) {\n                    active = collapsible ? false : 0;\n                }\n            }\n\n            // don't allow collapsible: false and active: false\n            if (!collapsible && active === false && this.anchors.length) {\n                active = 0;\n            }\n\n            return active;\n        },\n\n        _getCreateEventData: function () {\n            return {\n                tab: this.active,\n                panel: !this.active.length ? $() : this._getPanelForTab(this.active)\n            };\n        },\n\n        _tabKeydown: function (event) {\n            var focusedTab = $(this.document[0].activeElement).closest(\"li\"),\n                selectedIndex = this.tabs.index(focusedTab),\n                goingForward = true;\n\n            if (this._handlePageNav(event)) {\n                return;\n            }\n\n            switch (event.keyCode) {\n                case $.ui.keyCode.RIGHT:\n                case $.ui.keyCode.DOWN:\n                    selectedIndex++;\n                    break;\n                case $.ui.keyCode.UP:\n                case $.ui.keyCode.LEFT:\n                    goingForward = false;\n                    selectedIndex--;\n                    break;\n                case $.ui.keyCode.END:\n                    selectedIndex = this.anchors.length - 1;\n                    break;\n                case $.ui.keyCode.HOME:\n                    selectedIndex = 0;\n                    break;\n                case $.ui.keyCode.SPACE:\n                    // Activate only, no collapsing\n                    event.preventDefault();\n                    clearTimeout(this.activating);\n                    this._activate(selectedIndex);\n                    return;\n                case $.ui.keyCode.ENTER:\n                    // Toggle (cancel delayed activation, allow collapsing)\n                    event.preventDefault();\n                    clearTimeout(this.activating);\n                    // Determine if we should collapse or activate\n                    this._activate(selectedIndex === this.options.active ? false : selectedIndex);\n                    return;\n                default:\n                    return;\n            }\n\n            // Focus the appropriate tab, based on which key was pressed\n            event.preventDefault();\n            clearTimeout(this.activating);\n            selectedIndex = this._focusNextTab(selectedIndex, goingForward);\n\n            // Navigating with control key will prevent automatic activation\n            if (!event.ctrlKey) {\n                // Update aria-selected immediately so that AT think the tab is already selected.\n                // Otherwise AT may confuse the user by stating that they need to activate the tab,\n                // but the tab will already be activated by the time the announcement finishes.\n                focusedTab.attr(\"aria-selected\", \"false\");\n                this.tabs.eq(selectedIndex).attr(\"aria-selected\", \"true\");\n\n                this.activating = this._delay(function () {\n                    this.option(\"active\", selectedIndex);\n                }, this.delay);\n            }\n        },\n\n        _panelKeydown: function (event) {\n            if (this._handlePageNav(event)) {\n                return;\n            }\n\n            // Ctrl+up moves focus to the current tab\n            if (event.ctrlKey && event.keyCode === $.ui.keyCode.UP) {\n                event.preventDefault();\n                this.active.focus();\n            }\n        },\n\n        // Alt+page up/down moves focus to the previous/next tab (and activates)\n        _handlePageNav: function (event) {\n            if (event.altKey && event.keyCode === $.ui.keyCode.PAGE_UP) {\n                this._activate(this._focusNextTab(this.options.active - 1, false));\n                return true;\n            }\n            if (event.altKey && event.keyCode === $.ui.keyCode.PAGE_DOWN) {\n                this._activate(this._focusNextTab(this.options.active + 1, true));\n                return true;\n            }\n        },\n\n        _findNextTab: function (index, goingForward) {\n            var lastTabIndex = this.tabs.length - 1;\n\n            function constrain() {\n                if (index > lastTabIndex) {\n                    index = 0;\n                }\n                if (index < 0) {\n                    index = lastTabIndex;\n                }\n                return index;\n            }\n\n            while ($.inArray(constrain(), this.options.disabled) !== -1) {\n                index = goingForward ? index + 1 : index - 1;\n            }\n\n            return index;\n        },\n\n        _focusNextTab: function (index, goingForward) {\n            index = this._findNextTab(index, goingForward);\n            this.tabs.eq(index).focus();\n            return index;\n        },\n\n        _setOption: function (key, value) {\n            if (key === \"active\") {\n                // _activate() will handle invalid values and update this.options\n                this._activate(value);\n                return;\n            }\n\n            if (key === \"disabled\") {\n                // don't use the widget factory's disabled handling\n                this._setupDisabled(value);\n                return;\n            }\n\n            this._super(key, value);\n\n            if (key === \"collapsible\") {\n                this.element.toggleClass(\"ui-tabs-collapsible\", value);\n                // Setting collapsible: false while collapsed; open first panel\n                if (!value && this.options.active === false) {\n                    this._activate(0);\n                }\n            }\n\n            if (key === \"event\") {\n                this._setupEvents(value);\n            }\n\n            if (key === \"heightStyle\") {\n                this._setupHeightStyle(value);\n            }\n        },\n\n        _tabId: function (tab) {\n            return tab.attr(\"aria-controls\") || \"ui-tabs-\" + getNextTabId();\n        },\n\n        _sanitizeSelector: function (hash) {\n            return hash ? hash.replace(/[!\"$%&'()*+,.\\/:;<=>?@\\[\\]\\^`{|}~]/g, \"\\\\$&\") : \"\";\n        },\n\n        refresh: function () {\n            var options = this.options,\n                lis = this.tablist.children(\":has(a[href])\");\n\n            // get disabled tabs from class attribute from HTML\n            // this will get converted to a boolean if needed in _refresh()\n            options.disabled = $.map(lis.filter(\".ui-state-disabled\"), function (tab) {\n                return lis.index(tab);\n            });\n\n            this._processTabs();\n\n            // was collapsed or no tabs\n            if (options.active === false || !this.anchors.length) {\n                options.active = false;\n                this.active = $();\n                // was active, but active tab is gone\n            } else if (this.active.length && !$.contains(this.tablist[0], this.active[0])) {\n                // all remaining tabs are disabled\n                if (this.tabs.length === options.disabled.length) {\n                    options.active = false;\n                    this.active = $();\n                    // activate previous tab\n                } else {\n                    this._activate(this._findNextTab(Math.max(0, options.active - 1), false));\n                }\n                // was active, active tab still exists\n            } else {\n                // make sure active index is correct\n                options.active = this.tabs.index(this.active);\n            }\n\n            this._refresh();\n        },\n\n        _refresh: function () {\n            this._setupDisabled(this.options.disabled);\n            this._setupEvents(this.options.event);\n            this._setupHeightStyle(this.options.heightStyle);\n\n            this.tabs.not(this.active).attr({\n                \"aria-selected\": \"false\",\n                tabIndex: -1\n            });\n            this.panels.not(this._getPanelForTab(this.active))\n                .hide()\n                .attr({\n                    \"aria-expanded\": \"false\",\n                    \"aria-hidden\": \"true\"\n                });\n\n            // Make sure one tab is in the tab order\n            if (!this.active.length) {\n                this.tabs.eq(0).attr(\"tabIndex\", 0);\n            } else {\n                this.active\n                    .addClass(\"ui-tabs-active ui-state-active\")\n                    .attr({\n                        \"aria-selected\": \"true\",\n                        tabIndex: 0\n                    });\n                this._getPanelForTab(this.active)\n                    .show()\n                    .attr({\n                        \"aria-expanded\": \"true\",\n                        \"aria-hidden\": \"false\"\n                    });\n            }\n        },\n\n        _processTabs: function () {\n            var that = this;\n\n            this.tablist = this._getList()\n                .addClass(\"ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\")\n                .attr(\"role\", \"tablist\");\n\n            this.tabs = this.tablist.find(\"> li:has(a[href])\")\n                .addClass(\"ui-state-default ui-corner-top\")\n                .attr({\n                    role: \"tab\",\n                    tabIndex: -1\n                });\n\n            this.anchors = this.tabs.map(function () {\n                return $(\"a\", this)[0];\n            })\n                .addClass(\"ui-tabs-anchor\")\n                .attr({\n                    role: \"presentation\",\n                    tabIndex: -1\n                });\n\n            this.panels = $();\n\n            this.anchors.each(function (i, anchor) {\n                var selector, panel, panelId,\n                    anchorId = $(anchor).uniqueId().attr(\"id\"),\n                    tab = $(anchor).closest(\"li\"),\n                    originalAriaControls = tab.attr(\"aria-controls\");\n\n                // inline tab\n                if (isLocal(anchor)) {\n                    selector = anchor.hash;\n                    panel = that.element.find(that._sanitizeSelector(selector));\n                    // remote tab\n                } else {\n                    panelId = that._tabId(tab);\n                    selector = \"#\" + panelId;\n                    panel = that.element.find(selector);\n                    if (!panel.length) {\n                        panel = that._createPanel(panelId);\n                        panel.insertAfter(that.panels[i - 1] || that.tablist);\n                    }\n                    panel.attr(\"aria-live\", \"polite\");\n                }\n\n                if (panel.length) {\n                    that.panels = that.panels.add(panel);\n                }\n                if (originalAriaControls) {\n                    tab.data(\"ui-tabs-aria-controls\", originalAriaControls);\n                }\n                tab.attr({\n                    \"aria-controls\": selector.substring(1),\n                    \"aria-labelledby\": anchorId\n                });\n                panel.attr(\"aria-labelledby\", anchorId);\n            });\n\n            this.panels\n                .addClass(\"ui-tabs-panel ui-widget-content ui-corner-bottom\")\n                .attr(\"role\", \"tabpanel\");\n        },\n\n        // allow overriding how to find the list for rare usage scenarios (#7715)\n        _getList: function () {\n            return this.tablist || this.element.find(\"ol,ul\").eq(0);\n        },\n\n        _createPanel: function (id) {\n            return $(\"<div>\")\n                .attr(\"id\", id)\n                .addClass(\"ui-tabs-panel ui-widget-content ui-corner-bottom\")\n                .data(\"ui-tabs-destroy\", true);\n        },\n\n        _setupDisabled: function (disabled) {\n            if ($.isArray(disabled)) {\n                if (!disabled.length) {\n                    disabled = false;\n                } else if (disabled.length === this.anchors.length) {\n                    disabled = true;\n                }\n            }\n\n            // disable tabs\n            for (var i = 0, li; (li = this.tabs[i]); i++) {\n                if (disabled === true || $.inArray(i, disabled) !== -1) {\n                    $(li)\n                        .addClass(\"ui-state-disabled\")\n                        .attr(\"aria-disabled\", \"true\");\n                } else {\n                    $(li)\n                        .removeClass(\"ui-state-disabled\")\n                        .removeAttr(\"aria-disabled\");\n                }\n            }\n\n            this.options.disabled = disabled;\n        },\n\n        _setupEvents: function (event) {\n            var events = {\n                click: function (event) {\n                    event.preventDefault();\n                }\n            };\n            if (event) {\n                $.each(event.split(\" \"), function (index, eventName) {\n                    events[eventName] = \"_eventHandler\";\n                });\n            }\n\n            this._off(this.anchors.add(this.tabs).add(this.panels));\n            this._on(this.anchors, events);\n            this._on(this.tabs, {keydown: \"_tabKeydown\"});\n            this._on(this.panels, {keydown: \"_panelKeydown\"});\n\n            this._focusable(this.tabs);\n            this._hoverable(this.tabs);\n        },\n\n        _setupHeightStyle: function (heightStyle) {\n            var maxHeight,\n                parent = this.element.parent();\n\n            if (heightStyle === \"fill\") {\n                maxHeight = parent.height();\n                maxHeight -= this.element.outerHeight() - this.element.height();\n\n                this.element.siblings(\":visible\").each(function () {\n                    var elem = $(this),\n                        position = elem.css(\"position\");\n\n                    if (position === \"absolute\" || position === \"fixed\") {\n                        return;\n                    }\n                    maxHeight -= elem.outerHeight(true);\n                });\n\n                this.element.children().not(this.panels).each(function () {\n                    maxHeight -= $(this).outerHeight(true);\n                });\n\n                this.panels.each(function () {\n                    $(this).height(Math.max(0, maxHeight -\n                        $(this).innerHeight() + $(this).height()));\n                })\n                    .css(\"overflow\", \"auto\");\n            } else if (heightStyle === \"auto\") {\n                maxHeight = 0;\n                this.panels.each(function () {\n                    maxHeight = Math.max(maxHeight, $(this).height(\"\").height());\n                }).height(maxHeight);\n            }\n        },\n\n        _eventHandler: function (event) {\n            var options = this.options,\n                active = this.active,\n                anchor = $(event.currentTarget),\n                tab = anchor.closest(\"li\"),\n                clickedIsActive = tab[0] === active[0],\n                collapsing = clickedIsActive && options.collapsible,\n                toShow = collapsing ? $() : this._getPanelForTab(tab),\n                toHide = !active.length ? $() : this._getPanelForTab(active),\n                eventData = {\n                    oldTab: active,\n                    oldPanel: toHide,\n                    newTab: collapsing ? $() : tab,\n                    newPanel: toShow\n                };\n\n            event.preventDefault();\n\n            if (tab.hasClass(\"ui-state-disabled\") ||\n                // tab is already loading\n                tab.hasClass(\"ui-tabs-loading\") ||\n                // can't switch durning an animation\n                this.running ||\n                // click on active header, but not collapsible\n                (clickedIsActive && !options.collapsible) ||\n                // allow canceling activation\n                (this._trigger(\"beforeActivate\", event, eventData) === false)) {\n                return;\n            }\n\n            options.active = collapsing ? false : this.tabs.index(tab);\n\n            this.active = clickedIsActive ? $() : tab;\n            if (this.xhr) {\n                this.xhr.abort();\n            }\n\n            if (!toHide.length && !toShow.length) {\n                $.error(\"jQuery UI Tabs: Mismatching fragment identifier.\");\n            }\n\n            if (toShow.length) {\n                this.load(this.tabs.index(tab), event);\n            }\n            this._toggle(event, eventData);\n        },\n\n        // handles show/hide for selecting tabs\n        _toggle: function (event, eventData) {\n            var that = this,\n                toShow = eventData.newPanel,\n                toHide = eventData.oldPanel;\n\n            this.running = true;\n\n            function complete() {\n                that.running = false;\n                that._trigger(\"activate\", event, eventData);\n            }\n\n            function show() {\n                eventData.newTab.closest(\"li\").addClass(\"ui-tabs-active ui-state-active\");\n\n                if (toShow.length && that.options.show) {\n                    that._show(toShow, that.options.show, complete);\n                } else {\n                    toShow.show();\n                    complete();\n                }\n            }\n\n            // start out by hiding, then showing, then completing\n            if (toHide.length && this.options.hide) {\n                this._hide(toHide, this.options.hide, function () {\n                    eventData.oldTab.closest(\"li\").removeClass(\"ui-tabs-active ui-state-active\");\n                    show();\n                });\n            } else {\n                eventData.oldTab.closest(\"li\").removeClass(\"ui-tabs-active ui-state-active\");\n                toHide.hide();\n                show();\n            }\n\n            toHide.attr({\n                \"aria-expanded\": \"false\",\n                \"aria-hidden\": \"true\"\n            });\n            eventData.oldTab.attr(\"aria-selected\", \"false\");\n            // If we're switching tabs, remove the old tab from the tab order.\n            // If we're opening from collapsed state, remove the previous tab from the tab order.\n            // If we're collapsing, then keep the collapsing tab in the tab order.\n            if (toShow.length && toHide.length) {\n                eventData.oldTab.attr(\"tabIndex\", -1);\n            } else if (toShow.length) {\n                this.tabs.filter(function () {\n                    return $(this).attr(\"tabIndex\") === 0;\n                })\n                    .attr(\"tabIndex\", -1);\n            }\n\n            toShow.attr({\n                \"aria-expanded\": \"true\",\n                \"aria-hidden\": \"false\"\n            });\n            eventData.newTab.attr({\n                \"aria-selected\": \"true\",\n                tabIndex: 0\n            });\n        },\n\n        _activate: function (index) {\n            var anchor,\n                active = this._findActive(index);\n\n            // trying to activate the already active panel\n            if (active[0] === this.active[0]) {\n                return;\n            }\n\n            // trying to collapse, simulate a click on the current active header\n            if (!active.length) {\n                active = this.active;\n            }\n\n            anchor = active.find(\".ui-tabs-anchor\")[0];\n            this._eventHandler({\n                target: anchor,\n                currentTarget: anchor,\n                preventDefault: $.noop\n            });\n        },\n\n        _findActive: function (index) {\n            return index === false ? $() : this.tabs.eq(index);\n        },\n\n        _getIndex: function (index) {\n            // meta-function to give users option to provide a href string instead of a numerical index.\n            if (typeof index === \"string\") {\n                index = this.anchors.index(this.anchors.filter(\"[href$='\" + index + \"']\"));\n            }\n\n            return index;\n        },\n\n        _destroy: function () {\n            if (this.xhr) {\n                this.xhr.abort();\n            }\n\n            this.element.removeClass(\"ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible\");\n\n            this.tablist\n                .removeClass(\"ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\")\n                .removeAttr(\"role\");\n\n            this.anchors\n                .removeClass(\"ui-tabs-anchor\")\n                .removeAttr(\"role\")\n                .removeAttr(\"tabIndex\")\n                .removeUniqueId();\n\n            this.tabs.add(this.panels).each(function () {\n                if ($.data(this, \"ui-tabs-destroy\")) {\n                    $(this).remove();\n                } else {\n                    $(this)\n                        .removeClass(\"ui-state-default ui-state-active ui-state-disabled \" +\n                            \"ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel\")\n                        .removeAttr(\"tabIndex\")\n                        .removeAttr(\"aria-live\")\n                        .removeAttr(\"aria-busy\")\n                        .removeAttr(\"aria-selected\")\n                        .removeAttr(\"aria-labelledby\")\n                        .removeAttr(\"aria-hidden\")\n                        .removeAttr(\"aria-expanded\")\n                        .removeAttr(\"role\");\n                }\n            });\n\n            this.tabs.each(function () {\n                var li = $(this),\n                    prev = li.data(\"ui-tabs-aria-controls\");\n                if (prev) {\n                    li\n                        .attr(\"aria-controls\", prev)\n                        .removeData(\"ui-tabs-aria-controls\");\n                } else {\n                    li.removeAttr(\"aria-controls\");\n                }\n            });\n\n            this.panels.show();\n\n            if (this.options.heightStyle !== \"content\") {\n                this.panels.css(\"height\", \"\");\n            }\n        },\n\n        enable: function (index) {\n            var disabled = this.options.disabled;\n            if (disabled === false) {\n                return;\n            }\n\n            if (index === undefined) {\n                disabled = false;\n            } else {\n                index = this._getIndex(index);\n                if ($.isArray(disabled)) {\n                    disabled = $.map(disabled, function (num) {\n                        return num !== index ? num : null;\n                    });\n                } else {\n                    disabled = $.map(this.tabs, function (li, num) {\n                        return num !== index ? num : null;\n                    });\n                }\n            }\n            this._setupDisabled(disabled);\n        },\n\n        disable: function (index) {\n            var disabled = this.options.disabled;\n            if (disabled === true) {\n                return;\n            }\n\n            if (index === undefined) {\n                disabled = true;\n            } else {\n                index = this._getIndex(index);\n                if ($.inArray(index, disabled) !== -1) {\n                    return;\n                }\n                if ($.isArray(disabled)) {\n                    disabled = $.merge([index], disabled).sort();\n                } else {\n                    disabled = [index];\n                }\n            }\n            this._setupDisabled(disabled);\n        },\n\n        load: function (index, event) {\n            index = this._getIndex(index);\n            var that = this,\n                tab = this.tabs.eq(index),\n                anchor = tab.find(\".ui-tabs-anchor\"),\n                panel = this._getPanelForTab(tab),\n                eventData = {\n                    tab: tab,\n                    panel: panel\n                };\n\n            // not remote\n            if (isLocal(anchor[0])) {\n                return;\n            }\n\n            this.xhr = $.ajax(this._ajaxSettings(anchor, event, eventData));\n\n            // support: jQuery <1.8\n            // jQuery <1.8 returns false if the request is canceled in beforeSend,\n            // but as of 1.8, $.ajax() always returns a jqXHR object.\n            if (this.xhr && this.xhr.statusText !== \"canceled\") {\n                tab.addClass(\"ui-tabs-loading\");\n                panel.attr(\"aria-busy\", \"true\");\n\n                this.xhr\n                    .success(function (response) {\n                        // support: jQuery <1.8\n                        // http://bugs.jquery.com/ticket/11778\n                        setTimeout(function () {\n                            panel.html(response);\n                            that._trigger(\"load\", event, eventData);\n                        }, 1);\n                    })\n                    .complete(function (jqXHR, status) {\n                        // support: jQuery <1.8\n                        // http://bugs.jquery.com/ticket/11778\n                        setTimeout(function () {\n                            if (status === \"abort\") {\n                                that.panels.stop(false, true);\n                            }\n\n                            tab.removeClass(\"ui-tabs-loading\");\n                            panel.removeAttr(\"aria-busy\");\n\n                            if (jqXHR === that.xhr) {\n                                delete that.xhr;\n                            }\n                        }, 1);\n                    });\n            }\n        },\n\n        _ajaxSettings: function (anchor, event, eventData) {\n            var that = this;\n            return {\n                url: anchor.attr(\"href\"),\n                beforeSend: function (jqXHR, settings) {\n                    return that._trigger(\"beforeLoad\", event,\n                        $.extend({jqXHR: jqXHR, ajaxSettings: settings}, eventData));\n                }\n            };\n        },\n\n        _getPanelForTab: function (tab) {\n            var id = $(tab).attr(\"aria-controls\");\n            return this.element.find(this._sanitizeSelector(\"#\" + id));\n        }\n    });\n\n});\n","jquery/ui-modules/dialog.js":"/*!\n * jQuery UI Dialog - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/dialog/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/button',\n    'jquery-ui-modules/draggable',\n    'jquery-ui-modules/position',\n    'jquery-ui-modules/resizable'\n], function ($, undefined) {\n\n    var sizeRelatedOptions = {\n            buttons: true,\n            height: true,\n            maxHeight: true,\n            maxWidth: true,\n            minHeight: true,\n            minWidth: true,\n            width: true\n        },\n        resizableRelatedOptions = {\n            maxHeight: true,\n            maxWidth: true,\n            minHeight: true,\n            minWidth: true\n        };\n\n    $.widget(\"ui.dialog\", {\n        version: \"1.10.4\",\n        options: {\n            appendTo: \"body\",\n            autoOpen: true,\n            buttons: [],\n            closeOnEscape: true,\n            closeText: \"close\",\n            dialogClass: \"\",\n            draggable: true,\n            hide: null,\n            height: \"auto\",\n            maxHeight: null,\n            maxWidth: null,\n            minHeight: 150,\n            minWidth: 150,\n            modal: false,\n            position: {\n                my: \"center\",\n                at: \"center\",\n                of: window,\n                collision: \"fit\",\n                // Ensure the titlebar is always visible\n                using: function (pos) {\n                    var topOffset = $(this).css(pos).offset().top;\n                    if (topOffset < 0) {\n                        $(this).css(\"top\", pos.top - topOffset);\n                    }\n                }\n            },\n            resizable: true,\n            show: null,\n            title: null,\n            width: 300,\n\n            // callbacks\n            beforeClose: null,\n            close: null,\n            drag: null,\n            dragStart: null,\n            dragStop: null,\n            focus: null,\n            open: null,\n            resize: null,\n            resizeStart: null,\n            resizeStop: null\n        },\n\n        _create: function () {\n            this.originalCss = {\n                display: this.element[0].style.display,\n                width: this.element[0].style.width,\n                minHeight: this.element[0].style.minHeight,\n                maxHeight: this.element[0].style.maxHeight,\n                height: this.element[0].style.height\n            };\n            this.originalPosition = {\n                parent: this.element.parent(),\n                index: this.element.parent().children().index(this.element)\n            };\n            this.originalTitle = this.element.attr(\"title\");\n            this.options.title = this.options.title || this.originalTitle;\n\n            this._createWrapper();\n\n            this.element\n                .show()\n                .removeAttr(\"title\")\n                .addClass(\"ui-dialog-content ui-widget-content\")\n                .appendTo(this.uiDialog);\n\n            this._createTitlebar();\n            this._createButtonPane();\n\n            if (this.options.draggable && $.fn.draggable) {\n                this._makeDraggable();\n            }\n            if (this.options.resizable && $.fn.resizable) {\n                this._makeResizable();\n            }\n\n            this._isOpen = false;\n        },\n\n        _init: function () {\n            if (this.options.autoOpen) {\n                this.open();\n            }\n        },\n\n        _appendTo: function () {\n            var element = this.options.appendTo;\n            if (element && (element.jquery || element.nodeType)) {\n                return $(element);\n            }\n            return this.document.find(element || \"body\").eq(0);\n        },\n\n        _destroy: function () {\n            var next,\n                originalPosition = this.originalPosition;\n\n            this._destroyOverlay();\n\n            this.element\n                .removeUniqueId()\n                .removeClass(\"ui-dialog-content ui-widget-content\")\n                .css(this.originalCss)\n                // Without detaching first, the following becomes really slow\n                .detach();\n\n            this.uiDialog.stop(true, true).remove();\n\n            if (this.originalTitle) {\n                this.element.attr(\"title\", this.originalTitle);\n            }\n\n            next = originalPosition.parent.children().eq(originalPosition.index);\n            // Don't try to place the dialog next to itself (#8613)\n            if (next.length && next[0] !== this.element[0]) {\n                next.before(this.element);\n            } else {\n                originalPosition.parent.append(this.element);\n            }\n        },\n\n        widget: function () {\n            return this.uiDialog;\n        },\n\n        disable: $.noop,\n        enable: $.noop,\n\n        close: function (event) {\n            var activeElement,\n                that = this;\n\n            if (!this._isOpen || this._trigger(\"beforeClose\", event) === false) {\n                return;\n            }\n\n            this._isOpen = false;\n            this._destroyOverlay();\n\n            if (!this.opener.filter(\":focusable\").focus().length) {\n\n                // support: IE9\n                // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n                try {\n                    activeElement = this.document[0].activeElement;\n\n                    // Support: IE9, IE10\n                    // If the <body> is blurred, IE will switch windows, see #4520\n                    if (activeElement && activeElement.nodeName.toLowerCase() !== \"body\") {\n\n                        // Hiding a focused element doesn't trigger blur in WebKit\n                        // so in case we have nothing to focus on, explicitly blur the active element\n                        // https://bugs.webkit.org/show_bug.cgi?id=47182\n                        $(activeElement).blur();\n                    }\n                } catch (error) {\n                }\n            }\n\n            this._hide(this.uiDialog, this.options.hide, function () {\n                that._trigger(\"close\", event);\n            });\n        },\n\n        isOpen: function () {\n            return this._isOpen;\n        },\n\n        moveToTop: function () {\n            this._moveToTop();\n        },\n\n        _moveToTop: function (event, silent) {\n            var moved = !!this.uiDialog.nextAll(\":visible\").insertBefore(this.uiDialog).length;\n            if (moved && !silent) {\n                this._trigger(\"focus\", event);\n            }\n            return moved;\n        },\n\n        open: function () {\n            var that = this;\n            if (this._isOpen) {\n                if (this._moveToTop()) {\n                    this._focusTabbable();\n                }\n                return;\n            }\n\n            this._isOpen = true;\n            this.opener = $(this.document[0].activeElement);\n\n            this._size();\n            this._position();\n            this._createOverlay();\n            this._moveToTop(null, true);\n            this._show(this.uiDialog, this.options.show, function () {\n                that._focusTabbable();\n                that._trigger(\"focus\");\n            });\n\n            this._trigger(\"open\");\n        },\n\n        _focusTabbable: function () {\n            // Set focus to the first match:\n            // 1. First element inside the dialog matching [autofocus]\n            // 2. Tabbable element inside the content element\n            // 3. Tabbable element inside the buttonpane\n            // 4. The close button\n            // 5. The dialog itself\n            var hasFocus = this.element.find(\"[autofocus]\");\n            if (!hasFocus.length) {\n                hasFocus = this.element.find(\":tabbable\");\n            }\n            if (!hasFocus.length) {\n                hasFocus = this.uiDialogButtonPane.find(\":tabbable\");\n            }\n            if (!hasFocus.length) {\n                hasFocus = this.uiDialogTitlebarClose.filter(\":tabbable\");\n            }\n            if (!hasFocus.length) {\n                hasFocus = this.uiDialog;\n            }\n            hasFocus.eq(0).focus();\n        },\n\n        _keepFocus: function (event) {\n            function checkFocus() {\n                var activeElement = this.document[0].activeElement,\n                    isActive = this.uiDialog[0] === activeElement ||\n                        $.contains(this.uiDialog[0], activeElement);\n                if (!isActive) {\n                    this._focusTabbable();\n                }\n            }\n\n            event.preventDefault();\n            checkFocus.call(this);\n            // support: IE\n            // IE <= 8 doesn't prevent moving focus even with event.preventDefault()\n            // so we check again later\n            this._delay(checkFocus);\n        },\n\n        _createWrapper: function () {\n            this.uiDialog = $(\"<div>\")\n                .addClass(\"ui-dialog ui-widget ui-widget-content ui-corner-all ui-front \" +\n                    this.options.dialogClass)\n                .hide()\n                .attr({\n                    // Setting tabIndex makes the div focusable\n                    tabIndex: -1,\n                    role: \"dialog\"\n                })\n                .appendTo(this._appendTo());\n\n            this._on(this.uiDialog, {\n                keydown: function (event) {\n                    if (this.options.closeOnEscape && !event.isDefaultPrevented() && event.keyCode &&\n                        event.keyCode === $.ui.keyCode.ESCAPE) {\n                        event.preventDefault();\n                        this.close(event);\n                        return;\n                    }\n\n                    // prevent tabbing out of dialogs\n                    if (event.keyCode !== $.ui.keyCode.TAB) {\n                        return;\n                    }\n                    var tabbables = this.uiDialog.find(\":tabbable\"),\n                        first = tabbables.filter(\":first\"),\n                        last = tabbables.filter(\":last\");\n\n                    if ((event.target === last[0] || event.target === this.uiDialog[0]) && !event.shiftKey) {\n                        first.focus(1);\n                        event.preventDefault();\n                    } else if ((event.target === first[0] || event.target === this.uiDialog[0]) && event.shiftKey) {\n                        last.focus(1);\n                        event.preventDefault();\n                    }\n                },\n                mousedown: function (event) {\n                    if (this._moveToTop(event)) {\n                        this._focusTabbable();\n                    }\n                }\n            });\n\n            // We assume that any existing aria-describedby attribute means\n            // that the dialog content is marked up properly\n            // otherwise we brute force the content as the description\n            if (!this.element.find(\"[aria-describedby]\").length) {\n                this.uiDialog.attr({\n                    \"aria-describedby\": this.element.uniqueId().attr(\"id\")\n                });\n            }\n        },\n\n        _createTitlebar: function () {\n            var uiDialogTitle;\n\n            this.uiDialogTitlebar = $(\"<div>\")\n                .addClass(\"ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix\")\n                .prependTo(this.uiDialog);\n            this._on(this.uiDialogTitlebar, {\n                mousedown: function (event) {\n                    // Don't prevent click on close button (#8838)\n                    // Focusing a dialog that is partially scrolled out of view\n                    // causes the browser to scroll it into view, preventing the click event\n                    if (!$(event.target).closest(\".ui-dialog-titlebar-close\")) {\n                        // Dialog isn't getting focus when dragging (#8063)\n                        this.uiDialog.focus();\n                    }\n                }\n            });\n\n            // support: IE\n            // Use type=\"button\" to prevent enter keypresses in textboxes from closing the\n            // dialog in IE (#9312)\n            this.uiDialogTitlebarClose = $(\"<button type='button'></button>\")\n                .button({\n                    label: this.options.closeText,\n                    icons: {\n                        primary: \"ui-icon-closethick\"\n                    },\n                    text: false\n                })\n                .addClass(\"ui-dialog-titlebar-close\")\n                .appendTo(this.uiDialogTitlebar);\n            this._on(this.uiDialogTitlebarClose, {\n                click: function (event) {\n                    event.preventDefault();\n                    this.close(event);\n                }\n            });\n\n            uiDialogTitle = $(\"<span>\")\n                .uniqueId()\n                .addClass(\"ui-dialog-title\")\n                .prependTo(this.uiDialogTitlebar);\n            this._title(uiDialogTitle);\n\n            this.uiDialog.attr({\n                \"aria-labelledby\": uiDialogTitle.attr(\"id\")\n            });\n        },\n\n        _title: function (title) {\n            if (!this.options.title) {\n                title.html(\"&#160;\");\n            }\n            title.text(this.options.title);\n        },\n\n        _createButtonPane: function () {\n            this.uiDialogButtonPane = $(\"<div>\")\n                .addClass(\"ui-dialog-buttonpane ui-widget-content ui-helper-clearfix\");\n\n            this.uiButtonSet = $(\"<div>\")\n                .addClass(\"ui-dialog-buttonset\")\n                .appendTo(this.uiDialogButtonPane);\n\n            this._createButtons();\n        },\n\n        _createButtons: function () {\n            var that = this,\n                buttons = this.options.buttons;\n\n            // if we already have a button pane, remove it\n            this.uiDialogButtonPane.remove();\n            this.uiButtonSet.empty();\n\n            if ($.isEmptyObject(buttons) || ($.isArray(buttons) && !buttons.length)) {\n                this.uiDialog.removeClass(\"ui-dialog-buttons\");\n                return;\n            }\n\n            $.each(buttons, function (name, props) {\n                var click, buttonOptions;\n                props = $.isFunction(props) ?\n                    {click: props, text: name} :\n                    props;\n                // Default to a non-submitting button\n                props = $.extend({type: \"button\"}, props);\n                // Change the context for the click callback to be the main element\n                click = props.click;\n                props.click = function () {\n                    click.apply(that.element[0], arguments);\n                };\n                buttonOptions = {\n                    icons: props.icons,\n                    text: props.showText\n                };\n                delete props.icons;\n                delete props.showText;\n                $(\"<button></button>\", props)\n                    .button(buttonOptions)\n                    .appendTo(that.uiButtonSet);\n            });\n            this.uiDialog.addClass(\"ui-dialog-buttons\");\n            this.uiDialogButtonPane.appendTo(this.uiDialog);\n        },\n\n        _makeDraggable: function () {\n            var that = this,\n                options = this.options;\n\n            function filteredUi(ui) {\n                return {\n                    position: ui.position,\n                    offset: ui.offset\n                };\n            }\n\n            this.uiDialog.draggable({\n                cancel: \".ui-dialog-content, .ui-dialog-titlebar-close\",\n                handle: \".ui-dialog-titlebar\",\n                containment: \"document\",\n                start: function (event, ui) {\n                    $(this).addClass(\"ui-dialog-dragging\");\n                    that._blockFrames();\n                    that._trigger(\"dragStart\", event, filteredUi(ui));\n                },\n                drag: function (event, ui) {\n                    that._trigger(\"drag\", event, filteredUi(ui));\n                },\n                stop: function (event, ui) {\n                    options.position = [\n                        ui.position.left - that.document.scrollLeft(),\n                        ui.position.top - that.document.scrollTop()\n                    ];\n                    $(this).removeClass(\"ui-dialog-dragging\");\n                    that._unblockFrames();\n                    that._trigger(\"dragStop\", event, filteredUi(ui));\n                }\n            });\n        },\n\n        _makeResizable: function () {\n            var that = this,\n                options = this.options,\n                handles = options.resizable,\n                // .ui-resizable has position: relative defined in the stylesheet\n                // but dialogs have to use absolute or fixed positioning\n                position = this.uiDialog.css(\"position\"),\n                resizeHandles = typeof handles === \"string\" ?\n                    handles :\n                    \"n,e,s,w,se,sw,ne,nw\";\n\n            function filteredUi(ui) {\n                return {\n                    originalPosition: ui.originalPosition,\n                    originalSize: ui.originalSize,\n                    position: ui.position,\n                    size: ui.size\n                };\n            }\n\n            this.uiDialog.resizable({\n                cancel: \".ui-dialog-content\",\n                containment: \"document\",\n                alsoResize: this.element,\n                maxWidth: options.maxWidth,\n                maxHeight: options.maxHeight,\n                minWidth: options.minWidth,\n                minHeight: this._minHeight(),\n                handles: resizeHandles,\n                start: function (event, ui) {\n                    $(this).addClass(\"ui-dialog-resizing\");\n                    that._blockFrames();\n                    that._trigger(\"resizeStart\", event, filteredUi(ui));\n                },\n                resize: function (event, ui) {\n                    that._trigger(\"resize\", event, filteredUi(ui));\n                },\n                stop: function (event, ui) {\n                    options.height = $(this).height();\n                    options.width = $(this).width();\n                    $(this).removeClass(\"ui-dialog-resizing\");\n                    that._unblockFrames();\n                    that._trigger(\"resizeStop\", event, filteredUi(ui));\n                }\n            })\n                .css(\"position\", position);\n        },\n\n        _minHeight: function () {\n            var options = this.options;\n\n            return options.height === \"auto\" ?\n                options.minHeight :\n                Math.min(options.minHeight, options.height);\n        },\n\n        _position: function () {\n            // Need to show the dialog to get the actual offset in the position plugin\n            var isVisible = this.uiDialog.is(\":visible\");\n            if (!isVisible) {\n                this.uiDialog.show();\n            }\n            this.uiDialog.position(this.options.position);\n            if (!isVisible) {\n                this.uiDialog.hide();\n            }\n        },\n\n        _setOptions: function (options) {\n            var that = this,\n                resize = false,\n                resizableOptions = {};\n\n            $.each(options, function (key, value) {\n                that._setOption(key, value);\n\n                if (key in sizeRelatedOptions) {\n                    resize = true;\n                }\n                if (key in resizableRelatedOptions) {\n                    resizableOptions[key] = value;\n                }\n            });\n\n            if (resize) {\n                this._size();\n                this._position();\n            }\n            if (this.uiDialog.is(\":data(ui-resizable)\")) {\n                this.uiDialog.resizable(\"option\", resizableOptions);\n            }\n        },\n\n        _setOption: function (key, value) {\n            var isDraggable, isResizable,\n                uiDialog = this.uiDialog;\n\n            if (key === \"dialogClass\") {\n                uiDialog\n                    .removeClass(this.options.dialogClass)\n                    .addClass(value);\n            }\n\n            if (key === \"disabled\") {\n                return;\n            }\n\n            this._super(key, value);\n\n            if (key === \"appendTo\") {\n                this.uiDialog.appendTo(this._appendTo());\n            }\n\n            if (key === \"buttons\") {\n                this._createButtons();\n            }\n\n            if (key === \"closeText\") {\n                this.uiDialogTitlebarClose.button({\n                    // Ensure that we always pass a string\n                    label: \"\" + value\n                });\n            }\n\n            if (key === \"draggable\") {\n                isDraggable = uiDialog.is(\":data(ui-draggable)\");\n                if (isDraggable && !value) {\n                    uiDialog.draggable(\"destroy\");\n                }\n\n                if (!isDraggable && value) {\n                    this._makeDraggable();\n                }\n            }\n\n            if (key === \"position\") {\n                this._position();\n            }\n\n            if (key === \"resizable\") {\n                // currently resizable, becoming non-resizable\n                isResizable = uiDialog.is(\":data(ui-resizable)\");\n                if (isResizable && !value) {\n                    uiDialog.resizable(\"destroy\");\n                }\n\n                // currently resizable, changing handles\n                if (isResizable && typeof value === \"string\") {\n                    uiDialog.resizable(\"option\", \"handles\", value);\n                }\n\n                // currently non-resizable, becoming resizable\n                if (!isResizable && value !== false) {\n                    this._makeResizable();\n                }\n            }\n\n            if (key === \"title\") {\n                this._title(this.uiDialogTitlebar.find(\".ui-dialog-title\"));\n            }\n        },\n\n        _size: function () {\n            // If the user has resized the dialog, the .ui-dialog and .ui-dialog-content\n            // divs will both have width and height set, so we need to reset them\n            var nonContentHeight, minContentHeight, maxContentHeight,\n                options = this.options;\n\n            // Reset content sizing\n            this.element.show().css({\n                width: \"auto\",\n                minHeight: 0,\n                maxHeight: \"none\",\n                height: 0\n            });\n\n            if (options.minWidth > options.width) {\n                options.width = options.minWidth;\n            }\n\n            // reset wrapper sizing\n            // determine the height of all the non-content elements\n            nonContentHeight = this.uiDialog.css({\n                height: \"auto\",\n                width: options.width\n            })\n                .outerHeight();\n            minContentHeight = Math.max(0, options.minHeight - nonContentHeight);\n            maxContentHeight = typeof options.maxHeight === \"number\" ?\n                Math.max(0, options.maxHeight - nonContentHeight) :\n                \"none\";\n\n            if (options.height === \"auto\") {\n                this.element.css({\n                    minHeight: minContentHeight,\n                    maxHeight: maxContentHeight,\n                    height: \"auto\"\n                });\n            } else {\n                this.element.height(Math.max(0, options.height - nonContentHeight));\n            }\n\n            if (this.uiDialog.is(\":data(ui-resizable)\")) {\n                this.uiDialog.resizable(\"option\", \"minHeight\", this._minHeight());\n            }\n        },\n\n        _blockFrames: function () {\n            this.iframeBlocks = this.document.find(\"iframe\").map(function () {\n                var iframe = $(this);\n\n                return $(\"<div>\")\n                    .css({\n                        position: \"absolute\",\n                        width: iframe.outerWidth(),\n                        height: iframe.outerHeight()\n                    })\n                    .appendTo(iframe.parent())\n                    .offset(iframe.offset())[0];\n            });\n        },\n\n        _unblockFrames: function () {\n            if (this.iframeBlocks) {\n                this.iframeBlocks.remove();\n                delete this.iframeBlocks;\n            }\n        },\n\n        _allowInteraction: function (event) {\n            if ($(event.target).closest(\".ui-dialog\").length) {\n                return true;\n            }\n\n            // TODO: Remove hack when datepicker implements\n            // the .ui-front logic (#8989)\n            return !!$(event.target).closest(\".ui-datepicker\").length;\n        },\n\n        _createOverlay: function () {\n            if (!this.options.modal) {\n                return;\n            }\n\n            var that = this,\n                widgetFullName = this.widgetFullName;\n            if (!$.ui.dialog.overlayInstances) {\n                // Prevent use of anchors and inputs.\n                // We use a delay in case the overlay is created from an\n                // event that we're going to be cancelling. (#2804)\n                this._delay(function () {\n                    // Handle .dialog().dialog(\"close\") (#4065)\n                    if ($.ui.dialog.overlayInstances) {\n                        this.document.bind(\"focusin.dialog\", function (event) {\n                            if (!that._allowInteraction(event)) {\n                                event.preventDefault();\n                                $(\".ui-dialog:visible:last .ui-dialog-content\")\n                                    .data(widgetFullName)._focusTabbable();\n                            }\n                        });\n                    }\n                });\n            }\n\n            this.overlay = $(\"<div>\")\n                .addClass(\"ui-widget-overlay ui-front\")\n                .appendTo(this._appendTo());\n            this._on(this.overlay, {\n                mousedown: \"_keepFocus\"\n            });\n            $.ui.dialog.overlayInstances++;\n        },\n\n        _destroyOverlay: function () {\n            if (!this.options.modal) {\n                return;\n            }\n\n            if (this.overlay) {\n                $.ui.dialog.overlayInstances--;\n\n                if (!$.ui.dialog.overlayInstances) {\n                    this.document.unbind(\"focusin.dialog\");\n                }\n                this.overlay.remove();\n                this.overlay = null;\n            }\n        }\n    });\n\n    $.ui.dialog.overlayInstances = 0;\n\n// DEPRECATED\n    if ($.uiBackCompat !== false) {\n        // position option with array notation\n        // just override with old implementation\n        $.widget(\"ui.dialog\", $.ui.dialog, {\n            _position: function () {\n                var position = this.options.position,\n                    myAt = [],\n                    offset = [0, 0],\n                    isVisible;\n\n                if (position) {\n                    if (typeof position === \"string\" || (typeof position === \"object\" && \"0\" in position)) {\n                        myAt = position.split ? position.split(\" \") : [position[0], position[1]];\n                        if (myAt.length === 1) {\n                            myAt[1] = myAt[0];\n                        }\n\n                        $.each([\"left\", \"top\"], function (i, offsetPosition) {\n                            if (+myAt[i] === myAt[i]) {\n                                offset[i] = myAt[i];\n                                myAt[i] = offsetPosition;\n                            }\n                        });\n\n                        position = {\n                            my: myAt[0] + (offset[0] < 0 ? offset[0] : \"+\" + offset[0]) + \" \" +\n                                myAt[1] + (offset[1] < 0 ? offset[1] : \"+\" + offset[1]),\n                            at: myAt.join(\" \")\n                        };\n                    }\n\n                    position = $.extend({}, $.ui.dialog.prototype.options.position, position);\n                } else {\n                    position = $.ui.dialog.prototype.options.position;\n                }\n\n                // need to show the dialog to get the actual offset in the position plugin\n                isVisible = this.uiDialog.is(\":visible\");\n                if (!isVisible) {\n                    this.uiDialog.show();\n                }\n                this.uiDialog.position(position);\n                if (!isVisible) {\n                    this.uiDialog.hide();\n                }\n            }\n        });\n    }\n\n});\n","jquery/ui-modules/spinner.js":"/*!\n * jQuery UI Spinner - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/spinner/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/button'\n], function ($) {\n\n    function modifier(fn) {\n        return function () {\n            var previous = this.element.val();\n            fn.apply(this, arguments);\n            this._refresh();\n            if (previous !== this.element.val()) {\n                this._trigger(\"change\");\n            }\n        };\n    }\n\n    $.widget(\"ui.spinner\", {\n        version: \"1.10.4\",\n        defaultElement: \"<input>\",\n        widgetEventPrefix: \"spin\",\n        options: {\n            culture: null,\n            icons: {\n                down: \"ui-icon-triangle-1-s\",\n                up: \"ui-icon-triangle-1-n\"\n            },\n            incremental: true,\n            max: null,\n            min: null,\n            numberFormat: null,\n            page: 10,\n            step: 1,\n\n            change: null,\n            spin: null,\n            start: null,\n            stop: null\n        },\n\n        _create: function () {\n            // handle string values that need to be parsed\n            this._setOption(\"max\", this.options.max);\n            this._setOption(\"min\", this.options.min);\n            this._setOption(\"step\", this.options.step);\n\n            // Only format if there is a value, prevents the field from being marked\n            // as invalid in Firefox, see #9573.\n            if (this.value() !== \"\") {\n                // Format the value, but don't constrain.\n                this._value(this.element.val(), true);\n            }\n\n            this._draw();\n            this._on(this._events);\n            this._refresh();\n\n            // turning off autocomplete prevents the browser from remembering the\n            // value when navigating through history, so we re-enable autocomplete\n            // if the page is unloaded before the widget is destroyed. #7790\n            this._on(this.window, {\n                beforeunload: function () {\n                    this.element.removeAttr(\"autocomplete\");\n                }\n            });\n        },\n\n        _getCreateOptions: function () {\n            var options = {},\n                element = this.element;\n\n            $.each([\"min\", \"max\", \"step\"], function (i, option) {\n                var value = element.attr(option);\n                if (value !== undefined && value.length) {\n                    options[option] = value;\n                }\n            });\n\n            return options;\n        },\n\n        _events: {\n            keydown: function (event) {\n                if (this._start(event) && this._keydown(event)) {\n                    event.preventDefault();\n                }\n            },\n            keyup: \"_stop\",\n            focus: function () {\n                this.previous = this.element.val();\n            },\n            blur: function (event) {\n                if (this.cancelBlur) {\n                    delete this.cancelBlur;\n                    return;\n                }\n\n                this._stop();\n                this._refresh();\n                if (this.previous !== this.element.val()) {\n                    this._trigger(\"change\", event);\n                }\n            },\n            mousewheel: function (event, delta) {\n                if (!delta) {\n                    return;\n                }\n                if (!this.spinning && !this._start(event)) {\n                    return false;\n                }\n\n                this._spin((delta > 0 ? 1 : -1) * this.options.step, event);\n                clearTimeout(this.mousewheelTimer);\n                this.mousewheelTimer = this._delay(function () {\n                    if (this.spinning) {\n                        this._stop(event);\n                    }\n                }, 100);\n                event.preventDefault();\n            },\n            \"mousedown .ui-spinner-button\": function (event) {\n                var previous;\n\n                // We never want the buttons to have focus; whenever the user is\n                // interacting with the spinner, the focus should be on the input.\n                // If the input is focused then this.previous is properly set from\n                // when the input first received focus. If the input is not focused\n                // then we need to set this.previous based on the value before spinning.\n                previous = this.element[0] === this.document[0].activeElement ?\n                    this.previous : this.element.val();\n\n                function checkFocus() {\n                    var isActive = this.element[0] === this.document[0].activeElement;\n                    if (!isActive) {\n                        this.element.focus();\n                        this.previous = previous;\n                        // support: IE\n                        // IE sets focus asynchronously, so we need to check if focus\n                        // moved off of the input because the user clicked on the button.\n                        this._delay(function () {\n                            this.previous = previous;\n                        });\n                    }\n                }\n\n                // ensure focus is on (or stays on) the text field\n                event.preventDefault();\n                checkFocus.call(this);\n\n                // support: IE\n                // IE doesn't prevent moving focus even with event.preventDefault()\n                // so we set a flag to know when we should ignore the blur event\n                // and check (again) if focus moved off of the input.\n                this.cancelBlur = true;\n                this._delay(function () {\n                    delete this.cancelBlur;\n                    checkFocus.call(this);\n                });\n\n                if (this._start(event) === false) {\n                    return;\n                }\n\n                this._repeat(null, $(event.currentTarget).hasClass(\"ui-spinner-up\") ? 1 : -1, event);\n            },\n            \"mouseup .ui-spinner-button\": \"_stop\",\n            \"mouseenter .ui-spinner-button\": function (event) {\n                // button will add ui-state-active if mouse was down while mouseleave and kept down\n                if (!$(event.currentTarget).hasClass(\"ui-state-active\")) {\n                    return;\n                }\n\n                if (this._start(event) === false) {\n                    return false;\n                }\n                this._repeat(null, $(event.currentTarget).hasClass(\"ui-spinner-up\") ? 1 : -1, event);\n            },\n            // TODO: do we really want to consider this a stop?\n            // shouldn't we just stop the repeater and wait until mouseup before\n            // we trigger the stop event?\n            \"mouseleave .ui-spinner-button\": \"_stop\"\n        },\n\n        _draw: function () {\n            var uiSpinner = this.uiSpinner = this.element\n                .addClass(\"ui-spinner-input\")\n                .attr(\"autocomplete\", \"off\")\n                .wrap(this._uiSpinnerHtml())\n                .parent()\n                // add buttons\n                .append(this._buttonHtml());\n\n            this.element.attr(\"role\", \"spinbutton\");\n\n            // button bindings\n            this.buttons = uiSpinner.find(\".ui-spinner-button\")\n                .attr(\"tabIndex\", -1)\n                .button()\n                .removeClass(\"ui-corner-all\");\n\n            // IE 6 doesn't understand height: 50% for the buttons\n            // unless the wrapper has an explicit height\n            if (this.buttons.height() > Math.ceil(uiSpinner.height() * 0.5) &&\n                uiSpinner.height() > 0) {\n                uiSpinner.height(uiSpinner.height());\n            }\n\n            // disable spinner if element was already disabled\n            if (this.options.disabled) {\n                this.disable();\n            }\n        },\n\n        _keydown: function (event) {\n            var options = this.options,\n                keyCode = $.ui.keyCode;\n\n            switch (event.keyCode) {\n                case keyCode.UP:\n                    this._repeat(null, 1, event);\n                    return true;\n                case keyCode.DOWN:\n                    this._repeat(null, -1, event);\n                    return true;\n                case keyCode.PAGE_UP:\n                    this._repeat(null, options.page, event);\n                    return true;\n                case keyCode.PAGE_DOWN:\n                    this._repeat(null, -options.page, event);\n                    return true;\n            }\n\n            return false;\n        },\n\n        _uiSpinnerHtml: function () {\n            return \"<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>\";\n        },\n\n        _buttonHtml: function () {\n            return \"\" +\n                \"<a class='ui-spinner-button ui-spinner-up ui-corner-tr'>\" +\n                \"<span class='ui-icon \" + this.options.icons.up + \"'>&#9650;</span>\" +\n                \"</a>\" +\n                \"<a class='ui-spinner-button ui-spinner-down ui-corner-br'>\" +\n                \"<span class='ui-icon \" + this.options.icons.down + \"'>&#9660;</span>\" +\n                \"</a>\";\n        },\n\n        _start: function (event) {\n            if (!this.spinning && this._trigger(\"start\", event) === false) {\n                return false;\n            }\n\n            if (!this.counter) {\n                this.counter = 1;\n            }\n            this.spinning = true;\n            return true;\n        },\n\n        _repeat: function (i, steps, event) {\n            i = i || 500;\n\n            clearTimeout(this.timer);\n            this.timer = this._delay(function () {\n                this._repeat(40, steps, event);\n            }, i);\n\n            this._spin(steps * this.options.step, event);\n        },\n\n        _spin: function (step, event) {\n            var value = this.value() || 0;\n\n            if (!this.counter) {\n                this.counter = 1;\n            }\n\n            value = this._adjustValue(value + step * this._increment(this.counter));\n\n            if (!this.spinning || this._trigger(\"spin\", event, {value: value}) !== false) {\n                this._value(value);\n                this.counter++;\n            }\n        },\n\n        _increment: function (i) {\n            var incremental = this.options.incremental;\n\n            if (incremental) {\n                return $.isFunction(incremental) ?\n                    incremental(i) :\n                    Math.floor(i * i * i / 50000 - i * i / 500 + 17 * i / 200 + 1);\n            }\n\n            return 1;\n        },\n\n        _precision: function () {\n            var precision = this._precisionOf(this.options.step);\n            if (this.options.min !== null) {\n                precision = Math.max(precision, this._precisionOf(this.options.min));\n            }\n            return precision;\n        },\n\n        _precisionOf: function (num) {\n            var str = num.toString(),\n                decimal = str.indexOf(\".\");\n            return decimal === -1 ? 0 : str.length - decimal - 1;\n        },\n\n        _adjustValue: function (value) {\n            var base, aboveMin,\n                options = this.options;\n\n            // make sure we're at a valid step\n            // - find out where we are relative to the base (min or 0)\n            base = options.min !== null ? options.min : 0;\n            aboveMin = value - base;\n            // - round to the nearest step\n            aboveMin = Math.round(aboveMin / options.step) * options.step;\n            // - rounding is based on 0, so adjust back to our base\n            value = base + aboveMin;\n\n            // fix precision from bad JS floating point math\n            value = parseFloat(value.toFixed(this._precision()));\n\n            // clamp the value\n            if (options.max !== null && value > options.max) {\n                return options.max;\n            }\n            if (options.min !== null && value < options.min) {\n                return options.min;\n            }\n\n            return value;\n        },\n\n        _stop: function (event) {\n            if (!this.spinning) {\n                return;\n            }\n\n            clearTimeout(this.timer);\n            clearTimeout(this.mousewheelTimer);\n            this.counter = 0;\n            this.spinning = false;\n            this._trigger(\"stop\", event);\n        },\n\n        _setOption: function (key, value) {\n            if (key === \"culture\" || key === \"numberFormat\") {\n                var prevValue = this._parse(this.element.val());\n                this.options[key] = value;\n                this.element.val(this._format(prevValue));\n                return;\n            }\n\n            if (key === \"max\" || key === \"min\" || key === \"step\") {\n                if (typeof value === \"string\") {\n                    value = this._parse(value);\n                }\n            }\n            if (key === \"icons\") {\n                this.buttons.first().find(\".ui-icon\")\n                    .removeClass(this.options.icons.up)\n                    .addClass(value.up);\n                this.buttons.last().find(\".ui-icon\")\n                    .removeClass(this.options.icons.down)\n                    .addClass(value.down);\n            }\n\n            this._super(key, value);\n\n            if (key === \"disabled\") {\n                if (value) {\n                    this.element.prop(\"disabled\", true);\n                    this.buttons.button(\"disable\");\n                } else {\n                    this.element.prop(\"disabled\", false);\n                    this.buttons.button(\"enable\");\n                }\n            }\n        },\n\n        _setOptions: modifier(function (options) {\n            this._super(options);\n            this._value(this.element.val());\n        }),\n\n        _parse: function (val) {\n            if (typeof val === \"string\" && val !== \"\") {\n                val = window.Globalize && this.options.numberFormat ?\n                    Globalize.parseFloat(val, 10, this.options.culture) : +val;\n            }\n            return val === \"\" || isNaN(val) ? null : val;\n        },\n\n        _format: function (value) {\n            if (value === \"\") {\n                return \"\";\n            }\n            return window.Globalize && this.options.numberFormat ?\n                Globalize.format(value, this.options.numberFormat, this.options.culture) :\n                value;\n        },\n\n        _refresh: function () {\n            this.element.attr({\n                \"aria-valuemin\": this.options.min,\n                \"aria-valuemax\": this.options.max,\n                // TODO: what should we do with values that can't be parsed?\n                \"aria-valuenow\": this._parse(this.element.val())\n            });\n        },\n\n        // update the value without triggering change\n        _value: function (value, allowAny) {\n            var parsed;\n            if (value !== \"\") {\n                parsed = this._parse(value);\n                if (parsed !== null) {\n                    if (!allowAny) {\n                        parsed = this._adjustValue(parsed);\n                    }\n                    value = this._format(parsed);\n                }\n            }\n            this.element.val(value);\n            this._refresh();\n        },\n\n        _destroy: function () {\n            this.element\n                .removeClass(\"ui-spinner-input\")\n                .prop(\"disabled\", false)\n                .removeAttr(\"autocomplete\")\n                .removeAttr(\"role\")\n                .removeAttr(\"aria-valuemin\")\n                .removeAttr(\"aria-valuemax\")\n                .removeAttr(\"aria-valuenow\");\n            this.uiSpinner.replaceWith(this.element);\n        },\n\n        stepUp: modifier(function (steps) {\n            this._stepUp(steps);\n        }),\n        _stepUp: function (steps) {\n            if (this._start()) {\n                this._spin((steps || 1) * this.options.step);\n                this._stop();\n            }\n        },\n\n        stepDown: modifier(function (steps) {\n            this._stepDown(steps);\n        }),\n        _stepDown: function (steps) {\n            if (this._start()) {\n                this._spin((steps || 1) * -this.options.step);\n                this._stop();\n            }\n        },\n\n        pageUp: modifier(function (pages) {\n            this._stepUp((pages || 1) * this.options.page);\n        }),\n\n        pageDown: modifier(function (pages) {\n            this._stepDown((pages || 1) * this.options.page);\n        }),\n\n        value: function (newVal) {\n            if (!arguments.length) {\n                return this._parse(this.element.val());\n            }\n            modifier(this._value).call(this, newVal);\n        },\n\n        widget: function () {\n            return this.uiSpinner;\n        }\n    });\n\n});\n","jquery/ui-modules/effect.js":"/*!\n * jQuery UI Effects - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/category/effects-core/\n */\n\ndefine([\n    'jquery'\n], function ($, undefined) {\n\n    var dataSpace = \"ui-effects-\";\n\n    $.effects = {\n        effect: {}\n    };\n\n    /*!\n     * jQuery Color Animations v2.1.2\n     * https://github.com/jquery/jquery-color\n     *\n     * Copyright 2013 jQuery Foundation and other contributors\n     * Released under the MIT license.\n     * http://jquery.org/license\n     *\n     * Date: Wed Jan 16 08:47:09 2013 -0600\n     */\n    (function (jQuery, undefined) {\n\n        var stepHooks = \"backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor\",\n\n            // plusequals test for += 100 -= 100\n            rplusequals = /^([\\-+])=\\s*(\\d+\\.?\\d*)/,\n            // a set of RE's that can match strings and generate color tuples.\n            stringParsers = [{\n                re: /rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,\n                parse: function (execResult) {\n                    return [\n                        execResult[1],\n                        execResult[2],\n                        execResult[3],\n                        execResult[4]\n                    ];\n                }\n            }, {\n                re: /rgba?\\(\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,\n                parse: function (execResult) {\n                    return [\n                        execResult[1] * 2.55,\n                        execResult[2] * 2.55,\n                        execResult[3] * 2.55,\n                        execResult[4]\n                    ];\n                }\n            }, {\n                // this regex ignores A-F because it's compared against an already lowercased string\n                re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,\n                parse: function (execResult) {\n                    return [\n                        parseInt(execResult[1], 16),\n                        parseInt(execResult[2], 16),\n                        parseInt(execResult[3], 16)\n                    ];\n                }\n            }, {\n                // this regex ignores A-F because it's compared against an already lowercased string\n                re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,\n                parse: function (execResult) {\n                    return [\n                        parseInt(execResult[1] + execResult[1], 16),\n                        parseInt(execResult[2] + execResult[2], 16),\n                        parseInt(execResult[3] + execResult[3], 16)\n                    ];\n                }\n            }, {\n                re: /hsla?\\(\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,\n                space: \"hsla\",\n                parse: function (execResult) {\n                    return [\n                        execResult[1],\n                        execResult[2] / 100,\n                        execResult[3] / 100,\n                        execResult[4]\n                    ];\n                }\n            }],\n\n            // jQuery.Color( )\n            color = jQuery.Color = function (color, green, blue, alpha) {\n                return new jQuery.Color.fn.parse(color, green, blue, alpha);\n            },\n            spaces = {\n                rgba: {\n                    props: {\n                        red: {\n                            idx: 0,\n                            type: \"byte\"\n                        },\n                        green: {\n                            idx: 1,\n                            type: \"byte\"\n                        },\n                        blue: {\n                            idx: 2,\n                            type: \"byte\"\n                        }\n                    }\n                },\n\n                hsla: {\n                    props: {\n                        hue: {\n                            idx: 0,\n                            type: \"degrees\"\n                        },\n                        saturation: {\n                            idx: 1,\n                            type: \"percent\"\n                        },\n                        lightness: {\n                            idx: 2,\n                            type: \"percent\"\n                        }\n                    }\n                }\n            },\n            propTypes = {\n                \"byte\": {\n                    floor: true,\n                    max: 255\n                },\n                \"percent\": {\n                    max: 1\n                },\n                \"degrees\": {\n                    mod: 360,\n                    floor: true\n                }\n            },\n            support = color.support = {},\n\n            // element for support tests\n            supportElem = jQuery(\"<p>\")[0],\n\n            // colors = jQuery.Color.names\n            colors,\n\n            // local aliases of functions called often\n            each = jQuery.each;\n\n// determine rgba support immediately\n        supportElem.style.cssText = \"background-color:rgba(1,1,1,.5)\";\n        support.rgba = supportElem.style.backgroundColor.indexOf(\"rgba\") > -1;\n\n// define cache name and alpha properties\n// for rgba and hsla spaces\n        each(spaces, function (spaceName, space) {\n            space.cache = \"_\" + spaceName;\n            space.props.alpha = {\n                idx: 3,\n                type: \"percent\",\n                def: 1\n            };\n        });\n\n        function clamp(value, prop, allowEmpty) {\n            var type = propTypes[prop.type] || {};\n\n            if (value == null) {\n                return (allowEmpty || !prop.def) ? null : prop.def;\n            }\n\n            // ~~ is an short way of doing floor for positive numbers\n            value = type.floor ? ~~value : parseFloat(value);\n\n            // IE will pass in empty strings as value for alpha,\n            // which will hit this case\n            if (isNaN(value)) {\n                return prop.def;\n            }\n\n            if (type.mod) {\n                // we add mod before modding to make sure that negatives values\n                // get converted properly: -10 -> 350\n                return (value + type.mod) % type.mod;\n            }\n\n            // for now all property types without mod have min and max\n            return 0 > value ? 0 : type.max < value ? type.max : value;\n        }\n\n        function stringParse(string) {\n            var inst = color(),\n                rgba = inst._rgba = [];\n\n            string = string.toLowerCase();\n\n            each(stringParsers, function (i, parser) {\n                var parsed,\n                    match = parser.re.exec(string),\n                    values = match && parser.parse(match),\n                    spaceName = parser.space || \"rgba\";\n\n                if (values) {\n                    parsed = inst[spaceName](values);\n\n                    // if this was an rgba parse the assignment might happen twice\n                    // oh well....\n                    inst[spaces[spaceName].cache] = parsed[spaces[spaceName].cache];\n                    rgba = inst._rgba = parsed._rgba;\n\n                    // exit each( stringParsers ) here because we matched\n                    return false;\n                }\n            });\n\n            // Found a stringParser that handled it\n            if (rgba.length) {\n\n                // if this came from a parsed string, force \"transparent\" when alpha is 0\n                // chrome, (and maybe others) return \"transparent\" as rgba(0,0,0,0)\n                if (rgba.join() === \"0,0,0,0\") {\n                    jQuery.extend(rgba, colors.transparent);\n                }\n                return inst;\n            }\n\n            // named colors\n            return colors[string];\n        }\n\n        color.fn = jQuery.extend(color.prototype, {\n            parse: function (red, green, blue, alpha) {\n                if (red === undefined) {\n                    this._rgba = [null, null, null, null];\n                    return this;\n                }\n                if (red.jquery || red.nodeType) {\n                    red = jQuery(red).css(green);\n                    green = undefined;\n                }\n\n                var inst = this,\n                    type = jQuery.type(red),\n                    rgba = this._rgba = [];\n\n                // more than 1 argument specified - assume ( red, green, blue, alpha )\n                if (green !== undefined) {\n                    red = [red, green, blue, alpha];\n                    type = \"array\";\n                }\n\n                if (type === \"string\") {\n                    return this.parse(stringParse(red) || colors._default);\n                }\n\n                if (type === \"array\") {\n                    each(spaces.rgba.props, function (key, prop) {\n                        rgba[prop.idx] = clamp(red[prop.idx], prop);\n                    });\n                    return this;\n                }\n\n                if (type === \"object\") {\n                    if (red instanceof color) {\n                        each(spaces, function (spaceName, space) {\n                            if (red[space.cache]) {\n                                inst[space.cache] = red[space.cache].slice();\n                            }\n                        });\n                    } else {\n                        each(spaces, function (spaceName, space) {\n                            var cache = space.cache;\n                            each(space.props, function (key, prop) {\n\n                                // if the cache doesn't exist, and we know how to convert\n                                if (!inst[cache] && space.to) {\n\n                                    // if the value was null, we don't need to copy it\n                                    // if the key was alpha, we don't need to copy it either\n                                    if (key === \"alpha\" || red[key] == null) {\n                                        return;\n                                    }\n                                    inst[cache] = space.to(inst._rgba);\n                                }\n\n                                // this is the only case where we allow nulls for ALL properties.\n                                // call clamp with alwaysAllowEmpty\n                                inst[cache][prop.idx] = clamp(red[key], prop, true);\n                            });\n\n                            // everything defined but alpha?\n                            if (inst[cache] && jQuery.inArray(null, inst[cache].slice(0, 3)) < 0) {\n                                // use the default of 1\n                                inst[cache][3] = 1;\n                                if (space.from) {\n                                    inst._rgba = space.from(inst[cache]);\n                                }\n                            }\n                        });\n                    }\n                    return this;\n                }\n            },\n            is: function (compare) {\n                var is = color(compare),\n                    same = true,\n                    inst = this;\n\n                each(spaces, function (_, space) {\n                    var localCache,\n                        isCache = is[space.cache];\n                    if (isCache) {\n                        localCache = inst[space.cache] || space.to && space.to(inst._rgba) || [];\n                        each(space.props, function (_, prop) {\n                            if (isCache[prop.idx] != null) {\n                                same = (isCache[prop.idx] === localCache[prop.idx]);\n                                return same;\n                            }\n                        });\n                    }\n                    return same;\n                });\n                return same;\n            },\n            _space: function () {\n                var used = [],\n                    inst = this;\n                each(spaces, function (spaceName, space) {\n                    if (inst[space.cache]) {\n                        used.push(spaceName);\n                    }\n                });\n                return used.pop();\n            },\n            transition: function (other, distance) {\n                var end = color(other),\n                    spaceName = end._space(),\n                    space = spaces[spaceName],\n                    startColor = this.alpha() === 0 ? color(\"transparent\") : this,\n                    start = startColor[space.cache] || space.to(startColor._rgba),\n                    result = start.slice();\n\n                end = end[space.cache];\n                each(space.props, function (key, prop) {\n                    var index = prop.idx,\n                        startValue = start[index],\n                        endValue = end[index],\n                        type = propTypes[prop.type] || {};\n\n                    // if null, don't override start value\n                    if (endValue === null) {\n                        return;\n                    }\n                    // if null - use end\n                    if (startValue === null) {\n                        result[index] = endValue;\n                    } else {\n                        if (type.mod) {\n                            if (endValue - startValue > type.mod / 2) {\n                                startValue += type.mod;\n                            } else if (startValue - endValue > type.mod / 2) {\n                                startValue -= type.mod;\n                            }\n                        }\n                        result[index] = clamp((endValue - startValue) * distance + startValue, prop);\n                    }\n                });\n                return this[spaceName](result);\n            },\n            blend: function (opaque) {\n                // if we are already opaque - return ourself\n                if (this._rgba[3] === 1) {\n                    return this;\n                }\n\n                var rgb = this._rgba.slice(),\n                    a = rgb.pop(),\n                    blend = color(opaque)._rgba;\n\n                return color(jQuery.map(rgb, function (v, i) {\n                    return (1 - a) * blend[i] + a * v;\n                }));\n            },\n            toRgbaString: function () {\n                var prefix = \"rgba(\",\n                    rgba = jQuery.map(this._rgba, function (v, i) {\n                        return v == null ? (i > 2 ? 1 : 0) : v;\n                    });\n\n                if (rgba[3] === 1) {\n                    rgba.pop();\n                    prefix = \"rgb(\";\n                }\n\n                return prefix + rgba.join() + \")\";\n            },\n            toHslaString: function () {\n                var prefix = \"hsla(\",\n                    hsla = jQuery.map(this.hsla(), function (v, i) {\n                        if (v == null) {\n                            v = i > 2 ? 1 : 0;\n                        }\n\n                        // catch 1 and 2\n                        if (i && i < 3) {\n                            v = Math.round(v * 100) + \"%\";\n                        }\n                        return v;\n                    });\n\n                if (hsla[3] === 1) {\n                    hsla.pop();\n                    prefix = \"hsl(\";\n                }\n                return prefix + hsla.join() + \")\";\n            },\n            toHexString: function (includeAlpha) {\n                var rgba = this._rgba.slice(),\n                    alpha = rgba.pop();\n\n                if (includeAlpha) {\n                    rgba.push(~~(alpha * 255));\n                }\n\n                return \"#\" + jQuery.map(rgba, function (v) {\n\n                    // default to 0 when nulls exist\n                    v = (v || 0).toString(16);\n                    return v.length === 1 ? \"0\" + v : v;\n                }).join(\"\");\n            },\n            toString: function () {\n                return this._rgba[3] === 0 ? \"transparent\" : this.toRgbaString();\n            }\n        });\n        color.fn.parse.prototype = color.fn;\n\n// hsla conversions adapted from:\n// https://code.google.com/p/maashaack/source/browse/packages/graphics/trunk/src/graphics/colors/HUE2RGB.as?r=5021\n\n        function hue2rgb(p, q, h) {\n            h = (h + 1) % 1;\n            if (h * 6 < 1) {\n                return p + (q - p) * h * 6;\n            }\n            if (h * 2 < 1) {\n                return q;\n            }\n            if (h * 3 < 2) {\n                return p + (q - p) * ((2 / 3) - h) * 6;\n            }\n            return p;\n        }\n\n        spaces.hsla.to = function (rgba) {\n            if (rgba[0] == null || rgba[1] == null || rgba[2] == null) {\n                return [null, null, null, rgba[3]];\n            }\n            var r = rgba[0] / 255,\n                g = rgba[1] / 255,\n                b = rgba[2] / 255,\n                a = rgba[3],\n                max = Math.max(r, g, b),\n                min = Math.min(r, g, b),\n                diff = max - min,\n                add = max + min,\n                l = add * 0.5,\n                h, s;\n\n            if (min === max) {\n                h = 0;\n            } else if (r === max) {\n                h = (60 * (g - b) / diff) + 360;\n            } else if (g === max) {\n                h = (60 * (b - r) / diff) + 120;\n            } else {\n                h = (60 * (r - g) / diff) + 240;\n            }\n\n            // chroma (diff) == 0 means greyscale which, by definition, saturation = 0%\n            // otherwise, saturation is based on the ratio of chroma (diff) to lightness (add)\n            if (diff === 0) {\n                s = 0;\n            } else if (l <= 0.5) {\n                s = diff / add;\n            } else {\n                s = diff / (2 - add);\n            }\n            return [Math.round(h) % 360, s, l, a == null ? 1 : a];\n        };\n\n        spaces.hsla.from = function (hsla) {\n            if (hsla[0] == null || hsla[1] == null || hsla[2] == null) {\n                return [null, null, null, hsla[3]];\n            }\n            var h = hsla[0] / 360,\n                s = hsla[1],\n                l = hsla[2],\n                a = hsla[3],\n                q = l <= 0.5 ? l * (1 + s) : l + s - l * s,\n                p = 2 * l - q;\n\n            return [\n                Math.round(hue2rgb(p, q, h + (1 / 3)) * 255),\n                Math.round(hue2rgb(p, q, h) * 255),\n                Math.round(hue2rgb(p, q, h - (1 / 3)) * 255),\n                a\n            ];\n        };\n\n\n        each(spaces, function (spaceName, space) {\n            var props = space.props,\n                cache = space.cache,\n                to = space.to,\n                from = space.from;\n\n            // makes rgba() and hsla()\n            color.fn[spaceName] = function (value) {\n\n                // generate a cache for this space if it doesn't exist\n                if (to && !this[cache]) {\n                    this[cache] = to(this._rgba);\n                }\n                if (value === undefined) {\n                    return this[cache].slice();\n                }\n\n                var ret,\n                    type = jQuery.type(value),\n                    arr = (type === \"array\" || type === \"object\") ? value : arguments,\n                    local = this[cache].slice();\n\n                each(props, function (key, prop) {\n                    var val = arr[type === \"object\" ? key : prop.idx];\n                    if (val == null) {\n                        val = local[prop.idx];\n                    }\n                    local[prop.idx] = clamp(val, prop);\n                });\n\n                if (from) {\n                    ret = color(from(local));\n                    ret[cache] = local;\n                    return ret;\n                } else {\n                    return color(local);\n                }\n            };\n\n            // makes red() green() blue() alpha() hue() saturation() lightness()\n            each(props, function (key, prop) {\n                // alpha is included in more than one space\n                if (color.fn[key]) {\n                    return;\n                }\n                color.fn[key] = function (value) {\n                    var vtype = jQuery.type(value),\n                        fn = (key === \"alpha\" ? (this._hsla ? \"hsla\" : \"rgba\") : spaceName),\n                        local = this[fn](),\n                        cur = local[prop.idx],\n                        match;\n\n                    if (vtype === \"undefined\") {\n                        return cur;\n                    }\n\n                    if (vtype === \"function\") {\n                        value = value.call(this, cur);\n                        vtype = jQuery.type(value);\n                    }\n                    if (value == null && prop.empty) {\n                        return this;\n                    }\n                    if (vtype === \"string\") {\n                        match = rplusequals.exec(value);\n                        if (match) {\n                            value = cur + parseFloat(match[2]) * (match[1] === \"+\" ? 1 : -1);\n                        }\n                    }\n                    local[prop.idx] = value;\n                    return this[fn](local);\n                };\n            });\n        });\n\n// add cssHook and .fx.step function for each named hook.\n// accept a space separated string of properties\n        color.hook = function (hook) {\n            var hooks = hook.split(\" \");\n            each(hooks, function (i, hook) {\n                jQuery.cssHooks[hook] = {\n                    set: function (elem, value) {\n                        var parsed, curElem,\n                            backgroundColor = \"\";\n\n                        if (value !== \"transparent\" && (jQuery.type(value) !== \"string\" || (parsed = stringParse(value)))) {\n                            value = color(parsed || value);\n                            if (!support.rgba && value._rgba[3] !== 1) {\n                                curElem = hook === \"backgroundColor\" ? elem.parentNode : elem;\n                                while (\n                                    (backgroundColor === \"\" || backgroundColor === \"transparent\") &&\n                                    curElem && curElem.style\n                                    ) {\n                                    try {\n                                        backgroundColor = jQuery.css(curElem, \"backgroundColor\");\n                                        curElem = curElem.parentNode;\n                                    } catch (e) {\n                                    }\n                                }\n\n                                value = value.blend(backgroundColor && backgroundColor !== \"transparent\" ?\n                                    backgroundColor :\n                                    \"_default\");\n                            }\n\n                            value = value.toRgbaString();\n                        }\n                        try {\n                            elem.style[hook] = value;\n                        } catch (e) {\n                            // wrapped to prevent IE from throwing errors on \"invalid\" values like 'auto' or 'inherit'\n                        }\n                    }\n                };\n                jQuery.fx.step[hook] = function (fx) {\n                    if (!fx.colorInit) {\n                        fx.start = color(fx.elem, hook);\n                        fx.end = color(fx.end);\n                        fx.colorInit = true;\n                    }\n                    jQuery.cssHooks[hook].set(fx.elem, fx.start.transition(fx.end, fx.pos));\n                };\n            });\n\n        };\n\n        color.hook(stepHooks);\n\n        jQuery.cssHooks.borderColor = {\n            expand: function (value) {\n                var expanded = {};\n\n                each([\"Top\", \"Right\", \"Bottom\", \"Left\"], function (i, part) {\n                    expanded[\"border\" + part + \"Color\"] = value;\n                });\n                return expanded;\n            }\n        };\n\n// Basic color names only.\n// Usage of any of the other color names requires adding yourself or including\n// jquery.color.svg-names.js.\n        colors = jQuery.Color.names = {\n            // 4.1. Basic color keywords\n            aqua: \"#00ffff\",\n            black: \"#000000\",\n            blue: \"#0000ff\",\n            fuchsia: \"#ff00ff\",\n            gray: \"#808080\",\n            green: \"#008000\",\n            lime: \"#00ff00\",\n            maroon: \"#800000\",\n            navy: \"#000080\",\n            olive: \"#808000\",\n            purple: \"#800080\",\n            red: \"#ff0000\",\n            silver: \"#c0c0c0\",\n            teal: \"#008080\",\n            white: \"#ffffff\",\n            yellow: \"#ffff00\",\n\n            // 4.2.3. \"transparent\" color keyword\n            transparent: [null, null, null, 0],\n\n            _default: \"#ffffff\"\n        };\n\n    })(jQuery);\n\n\n    /******************************************************************************/\n    /****************************** CLASS ANIMATIONS ******************************/\n    /******************************************************************************/\n    (function () {\n\n        var classAnimationActions = [\"add\", \"remove\", \"toggle\"],\n            shorthandStyles = {\n                border: 1,\n                borderBottom: 1,\n                borderColor: 1,\n                borderLeft: 1,\n                borderRight: 1,\n                borderTop: 1,\n                borderWidth: 1,\n                margin: 1,\n                padding: 1\n            };\n\n        $.each([\"borderLeftStyle\", \"borderRightStyle\", \"borderBottomStyle\", \"borderTopStyle\"], function (_, prop) {\n            $.fx.step[prop] = function (fx) {\n                if (fx.end !== \"none\" && !fx.setAttr || fx.pos === 1 && !fx.setAttr) {\n                    jQuery.style(fx.elem, prop, fx.end);\n                    fx.setAttr = true;\n                }\n            };\n        });\n\n        function getElementStyles(elem) {\n            var key, len,\n                style = elem.ownerDocument.defaultView ?\n                    elem.ownerDocument.defaultView.getComputedStyle(elem, null) :\n                    elem.currentStyle,\n                styles = {};\n\n            if (style && style.length && style[0] && style[style[0]]) {\n                len = style.length;\n                while (len--) {\n                    key = style[len];\n                    if (typeof style[key] === \"string\") {\n                        styles[$.camelCase(key)] = style[key];\n                    }\n                }\n                // support: Opera, IE <9\n            } else {\n                for (key in style) {\n                    if (typeof style[key] === \"string\") {\n                        styles[key] = style[key];\n                    }\n                }\n            }\n\n            return styles;\n        }\n\n\n        function styleDifference(oldStyle, newStyle) {\n            var diff = {},\n                name, value;\n\n            for (name in newStyle) {\n                value = newStyle[name];\n                if (oldStyle[name] !== value) {\n                    if (!shorthandStyles[name]) {\n                        if ($.fx.step[name] || !isNaN(parseFloat(value))) {\n                            diff[name] = value;\n                        }\n                    }\n                }\n            }\n\n            return diff;\n        }\n\n// support: jQuery <1.8\n        if (!$.fn.addBack) {\n            $.fn.addBack = function (selector) {\n                return this.add(selector == null ?\n                    this.prevObject : this.prevObject.filter(selector)\n                );\n            };\n        }\n\n        $.effects.animateClass = function (value, duration, easing, callback) {\n            var o = $.speed(duration, easing, callback);\n\n            return this.queue(function () {\n                var animated = $(this),\n                    baseClass = animated.attr(\"class\") || \"\",\n                    applyClassChange,\n                    allAnimations = o.children ? animated.find(\"*\").addBack() : animated;\n\n                // map the animated objects to store the original styles.\n                allAnimations = allAnimations.map(function () {\n                    var el = $(this);\n                    return {\n                        el: el,\n                        start: getElementStyles(this)\n                    };\n                });\n\n                // apply class change\n                applyClassChange = function () {\n                    $.each(classAnimationActions, function (i, action) {\n                        if (value[action]) {\n                            animated[action + \"Class\"](value[action]);\n                        }\n                    });\n                };\n                applyClassChange();\n\n                // map all animated objects again - calculate new styles and diff\n                allAnimations = allAnimations.map(function () {\n                    this.end = getElementStyles(this.el[0]);\n                    this.diff = styleDifference(this.start, this.end);\n                    return this;\n                });\n\n                // apply original class\n                animated.attr(\"class\", baseClass);\n\n                // map all animated objects again - this time collecting a promise\n                allAnimations = allAnimations.map(function () {\n                    var styleInfo = this,\n                        dfd = $.Deferred(),\n                        opts = $.extend({}, o, {\n                            queue: false,\n                            complete: function () {\n                                dfd.resolve(styleInfo);\n                            }\n                        });\n\n                    this.el.animate(this.diff, opts);\n                    return dfd.promise();\n                });\n\n                // once all animations have completed:\n                $.when.apply($, allAnimations.get()).done(function () {\n\n                    // set the final class\n                    applyClassChange();\n\n                    // for each animated element,\n                    // clear all css properties that were animated\n                    $.each(arguments, function () {\n                        var el = this.el;\n                        $.each(this.diff, function (key) {\n                            el.css(key, \"\");\n                        });\n                    });\n\n                    // this is guarnteed to be there if you use jQuery.speed()\n                    // it also handles dequeuing the next anim...\n                    o.complete.call(animated[0]);\n                });\n            });\n        };\n\n        $.fn.extend({\n            addClass: (function (orig) {\n                return function (classNames, speed, easing, callback) {\n                    return speed ?\n                        $.effects.animateClass.call(this,\n                            {add: classNames}, speed, easing, callback) :\n                        orig.apply(this, arguments);\n                };\n            })($.fn.addClass),\n\n            removeClass: (function (orig) {\n                return function (classNames, speed, easing, callback) {\n                    return arguments.length > 1 ?\n                        $.effects.animateClass.call(this,\n                            {remove: classNames}, speed, easing, callback) :\n                        orig.apply(this, arguments);\n                };\n            })($.fn.removeClass),\n\n            toggleClass: (function (orig) {\n                return function (classNames, force, speed, easing, callback) {\n                    if (typeof force === \"boolean\" || force === undefined) {\n                        if (!speed) {\n                            // without speed parameter\n                            return orig.apply(this, arguments);\n                        } else {\n                            return $.effects.animateClass.call(this,\n                                (force ? {add: classNames} : {remove: classNames}),\n                                speed, easing, callback);\n                        }\n                    } else {\n                        // without force parameter\n                        return $.effects.animateClass.call(this,\n                            {toggle: classNames}, force, speed, easing);\n                    }\n                };\n            })($.fn.toggleClass),\n\n            switchClass: function (remove, add, speed, easing, callback) {\n                return $.effects.animateClass.call(this, {\n                    add: add,\n                    remove: remove\n                }, speed, easing, callback);\n            }\n        });\n\n    })();\n\n    /******************************************************************************/\n    /*********************************** EFFECTS **********************************/\n    /******************************************************************************/\n\n    (function () {\n\n        $.extend($.effects, {\n            version: \"1.10.4\",\n\n            // Saves a set of properties in a data storage\n            save: function (element, set) {\n                for (var i = 0; i < set.length; i++) {\n                    if (set[i] !== null) {\n                        element.data(dataSpace + set[i], element[0].style[set[i]]);\n                    }\n                }\n            },\n\n            // Restores a set of previously saved properties from a data storage\n            restore: function (element, set) {\n                var val, i;\n                for (i = 0; i < set.length; i++) {\n                    if (set[i] !== null) {\n                        val = element.data(dataSpace + set[i]);\n                        // support: jQuery 1.6.2\n                        // http://bugs.jquery.com/ticket/9917\n                        // jQuery 1.6.2 incorrectly returns undefined for any falsy value.\n                        // We can't differentiate between \"\" and 0 here, so we just assume\n                        // empty string since it's likely to be a more common value...\n                        if (val === undefined) {\n                            val = \"\";\n                        }\n                        element.css(set[i], val);\n                    }\n                }\n            },\n\n            setMode: function (el, mode) {\n                if (mode === \"toggle\") {\n                    mode = el.is(\":hidden\") ? \"show\" : \"hide\";\n                }\n                return mode;\n            },\n\n            // Translates a [top,left] array into a baseline value\n            // this should be a little more flexible in the future to handle a string & hash\n            getBaseline: function (origin, original) {\n                var y, x;\n                switch (origin[0]) {\n                    case \"top\":\n                        y = 0;\n                        break;\n                    case \"middle\":\n                        y = 0.5;\n                        break;\n                    case \"bottom\":\n                        y = 1;\n                        break;\n                    default:\n                        y = origin[0] / original.height;\n                }\n                switch (origin[1]) {\n                    case \"left\":\n                        x = 0;\n                        break;\n                    case \"center\":\n                        x = 0.5;\n                        break;\n                    case \"right\":\n                        x = 1;\n                        break;\n                    default:\n                        x = origin[1] / original.width;\n                }\n                return {\n                    x: x,\n                    y: y\n                };\n            },\n\n            // Wraps the element around a wrapper that copies position properties\n            createWrapper: function (element) {\n\n                // if the element is already wrapped, return it\n                if (element.parent().is(\".ui-effects-wrapper\")) {\n                    return element.parent();\n                }\n\n                // wrap the element\n                var props = {\n                        width: element.outerWidth(true),\n                        height: element.outerHeight(true),\n                        \"float\": element.css(\"float\")\n                    },\n                    wrapper = $(\"<div></div>\")\n                        .addClass(\"ui-effects-wrapper\")\n                        .css({\n                            fontSize: \"100%\",\n                            background: \"transparent\",\n                            border: \"none\",\n                            margin: 0,\n                            padding: 0\n                        }),\n                    // Store the size in case width/height are defined in % - Fixes #5245\n                    size = {\n                        width: element.width(),\n                        height: element.height()\n                    },\n                    active = document.activeElement;\n\n                // support: Firefox\n                // Firefox incorrectly exposes anonymous content\n                // https://bugzilla.mozilla.org/show_bug.cgi?id=561664\n                try {\n                    active.id;\n                } catch (e) {\n                    active = document.body;\n                }\n\n                element.wrap(wrapper);\n\n                // Fixes #7595 - Elements lose focus when wrapped.\n                if (element[0] === active || $.contains(element[0], active)) {\n                    $(active).focus();\n                }\n\n                wrapper = element.parent(); //Hotfix for jQuery 1.4 since some change in wrap() seems to actually lose the reference to the wrapped element\n\n                // transfer positioning properties to the wrapper\n                if (element.css(\"position\") === \"static\") {\n                    wrapper.css({position: \"relative\"});\n                    element.css({position: \"relative\"});\n                } else {\n                    $.extend(props, {\n                        position: element.css(\"position\"),\n                        zIndex: element.css(\"z-index\")\n                    });\n                    $.each([\"top\", \"left\", \"bottom\", \"right\"], function (i, pos) {\n                        props[pos] = element.css(pos);\n                        if (isNaN(parseInt(props[pos], 10))) {\n                            props[pos] = \"auto\";\n                        }\n                    });\n                    element.css({\n                        position: \"relative\",\n                        top: 0,\n                        left: 0,\n                        right: \"auto\",\n                        bottom: \"auto\"\n                    });\n                }\n                element.css(size);\n\n                return wrapper.css(props).show();\n            },\n\n            removeWrapper: function (element) {\n                var active = document.activeElement;\n\n                if (element.parent().is(\".ui-effects-wrapper\")) {\n                    element.parent().replaceWith(element);\n\n                    // Fixes #7595 - Elements lose focus when wrapped.\n                    if (element[0] === active || $.contains(element[0], active)) {\n                        $(active).focus();\n                    }\n                }\n\n\n                return element;\n            },\n\n            setTransition: function (element, list, factor, value) {\n                value = value || {};\n                $.each(list, function (i, x) {\n                    var unit = element.cssUnit(x);\n                    if (unit[0] > 0) {\n                        value[x] = unit[0] * factor + unit[1];\n                    }\n                });\n                return value;\n            }\n        });\n\n// return an effect options object for the given parameters:\n        function _normalizeArguments(effect, options, speed, callback) {\n\n            // allow passing all options as the first parameter\n            if ($.isPlainObject(effect)) {\n                options = effect;\n                effect = effect.effect;\n            }\n\n            // convert to an object\n            effect = {effect: effect};\n\n            // catch (effect, null, ...)\n            if (options == null) {\n                options = {};\n            }\n\n            // catch (effect, callback)\n            if ($.isFunction(options)) {\n                callback = options;\n                speed = null;\n                options = {};\n            }\n\n            // catch (effect, speed, ?)\n            if (typeof options === \"number\" || $.fx.speeds[options]) {\n                callback = speed;\n                speed = options;\n                options = {};\n            }\n\n            // catch (effect, options, callback)\n            if ($.isFunction(speed)) {\n                callback = speed;\n                speed = null;\n            }\n\n            // add options to effect\n            if (options) {\n                $.extend(effect, options);\n            }\n\n            speed = speed || options.duration;\n            effect.duration = $.fx.off ? 0 :\n                typeof speed === \"number\" ? speed :\n                    speed in $.fx.speeds ? $.fx.speeds[speed] :\n                        $.fx.speeds._default;\n\n            effect.complete = callback || options.complete;\n\n            return effect;\n        }\n\n        function standardAnimationOption(option) {\n            // Valid standard speeds (nothing, number, named speed)\n            if (!option || typeof option === \"number\" || $.fx.speeds[option]) {\n                return true;\n            }\n\n            // Invalid strings - treat as \"normal\" speed\n            if (typeof option === \"string\" && !$.effects.effect[option]) {\n                return true;\n            }\n\n            // Complete callback\n            if ($.isFunction(option)) {\n                return true;\n            }\n\n            // Options hash (but not naming an effect)\n            if (typeof option === \"object\" && !option.effect) {\n                return true;\n            }\n\n            // Didn't match any standard API\n            return false;\n        }\n\n        $.fn.extend({\n            effect: function ( /* effect, options, speed, callback */) {\n                var args = _normalizeArguments.apply(this, arguments),\n                    mode = args.mode,\n                    queue = args.queue,\n                    effectMethod = $.effects.effect[args.effect];\n\n                if ($.fx.off || !effectMethod) {\n                    // delegate to the original method (e.g., .show()) if possible\n                    if (mode) {\n                        return this[mode](args.duration, args.complete);\n                    } else {\n                        return this.each(function () {\n                            if (args.complete) {\n                                args.complete.call(this);\n                            }\n                        });\n                    }\n                }\n\n                function run(next) {\n                    var elem = $(this),\n                        complete = args.complete,\n                        mode = args.mode;\n\n                    function done() {\n                        if ($.isFunction(complete)) {\n                            complete.call(elem[0]);\n                        }\n                        if ($.isFunction(next)) {\n                            next();\n                        }\n                    }\n\n                    // If the element already has the correct final state, delegate to\n                    // the core methods so the internal tracking of \"olddisplay\" works.\n                    if (elem.is(\":hidden\") ? mode === \"hide\" : mode === \"show\") {\n                        elem[mode]();\n                        done();\n                    } else {\n                        effectMethod.call(elem[0], args, done);\n                    }\n                }\n\n                return queue === false ? this.each(run) : this.queue(queue || \"fx\", run);\n            },\n\n            show: (function (orig) {\n                return function (option) {\n                    if (standardAnimationOption(option)) {\n                        return orig.apply(this, arguments);\n                    } else {\n                        var args = _normalizeArguments.apply(this, arguments);\n                        args.mode = \"show\";\n                        return this.effect.call(this, args);\n                    }\n                };\n            })($.fn.show),\n\n            hide: (function (orig) {\n                return function (option) {\n                    if (standardAnimationOption(option)) {\n                        return orig.apply(this, arguments);\n                    } else {\n                        var args = _normalizeArguments.apply(this, arguments);\n                        args.mode = \"hide\";\n                        return this.effect.call(this, args);\n                    }\n                };\n            })($.fn.hide),\n\n            toggle: (function (orig) {\n                return function (option) {\n                    if (standardAnimationOption(option) || typeof option === \"boolean\") {\n                        return orig.apply(this, arguments);\n                    } else {\n                        var args = _normalizeArguments.apply(this, arguments);\n                        args.mode = \"toggle\";\n                        return this.effect.call(this, args);\n                    }\n                };\n            })($.fn.toggle),\n\n            // helper functions\n            cssUnit: function (key) {\n                var style = this.css(key),\n                    val = [];\n\n                $.each([\"em\", \"px\", \"%\", \"pt\"], function (i, unit) {\n                    if (style.indexOf(unit) > 0) {\n                        val = [parseFloat(style), unit];\n                    }\n                });\n                return val;\n            }\n        });\n\n    })();\n\n    /******************************************************************************/\n    /*********************************** EASING ***********************************/\n    /******************************************************************************/\n\n    (function () {\n\n// based on easing equations from Robert Penner (http://www.robertpenner.com/easing)\n\n        var baseEasings = {};\n\n        $.each([\"Quad\", \"Cubic\", \"Quart\", \"Quint\", \"Expo\"], function (i, name) {\n            baseEasings[name] = function (p) {\n                return Math.pow(p, i + 2);\n            };\n        });\n\n        $.extend(baseEasings, {\n            Sine: function (p) {\n                return 1 - Math.cos(p * Math.PI / 2);\n            },\n            Circ: function (p) {\n                return 1 - Math.sqrt(1 - p * p);\n            },\n            Elastic: function (p) {\n                return p === 0 || p === 1 ? p :\n                    -Math.pow(2, 8 * (p - 1)) * Math.sin(((p - 1) * 80 - 7.5) * Math.PI / 15);\n            },\n            Back: function (p) {\n                return p * p * (3 * p - 2);\n            },\n            Bounce: function (p) {\n                var pow2,\n                    bounce = 4;\n\n                while (p < ((pow2 = Math.pow(2, --bounce)) - 1) / 11) {\n                }\n                return 1 / Math.pow(4, 3 - bounce) - 7.5625 * Math.pow((pow2 * 3 - 2) / 22 - p, 2);\n            }\n        });\n\n        $.each(baseEasings, function (name, easeIn) {\n            $.easing[\"easeIn\" + name] = easeIn;\n            $.easing[\"easeOut\" + name] = function (p) {\n                return 1 - easeIn(1 - p);\n            };\n            $.easing[\"easeInOut\" + name] = function (p) {\n                return p < 0.5 ?\n                    easeIn(p * 2) / 2 :\n                    1 - easeIn(p * -2 + 2) / 2;\n            };\n        });\n\n    })();\n\n});\n","jquery/ui-modules/effect-clip.js":"/*!\n * jQuery UI Effects Clip - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/clip-effect/\n */\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($, undefined) {\n\n    $.effects.effect.clip = function (o, done) {\n        // Create element\n        var el = $(this),\n            props = [\"position\", \"top\", \"bottom\", \"left\", \"right\", \"height\", \"width\"],\n            mode = $.effects.setMode(el, o.mode || \"hide\"),\n            show = mode === \"show\",\n            direction = o.direction || \"vertical\",\n            vert = direction === \"vertical\",\n            size = vert ? \"height\" : \"width\",\n            position = vert ? \"top\" : \"left\",\n            animation = {},\n            wrapper, animate, distance;\n\n        // Save & Show\n        $.effects.save(el, props);\n        el.show();\n\n        // Create Wrapper\n        wrapper = $.effects.createWrapper(el).css({\n            overflow: \"hidden\"\n        });\n        animate = (el[0].tagName === \"IMG\") ? wrapper : el;\n        distance = animate[size]();\n\n        // Shift\n        if (show) {\n            animate.css(size, 0);\n            animate.css(position, distance / 2);\n        }\n\n        // Create Animation Object:\n        animation[size] = show ? distance : 0;\n        animation[position] = show ? 0 : distance / 2;\n\n        // Animate\n        animate.animate(animation, {\n            queue: false,\n            duration: o.duration,\n            easing: o.easing,\n            complete: function () {\n                if (!show) {\n                    el.hide();\n                }\n                $.effects.restore(el, props);\n                $.effects.removeWrapper(el);\n                done();\n            }\n        });\n\n    };\n\n});\n","jquery/ui-modules/mouse.js":"/*!\n * jQuery UI Mouse - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/mouse/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/widget'\n], function ($, undefined) {\n\n    var mouseHandled = false;\n    $(document).mouseup(function () {\n        mouseHandled = false;\n    });\n\n    $.widget(\"ui.mouse\", {\n        version: \"1.10.4\",\n        options: {\n            cancel: \"input,textarea,button,select,option\",\n            distance: 1,\n            delay: 0\n        },\n        _mouseInit: function () {\n            var that = this;\n\n            this.element\n                .bind(\"mousedown.\" + this.widgetName, function (event) {\n                    return that._mouseDown(event);\n                })\n                .bind(\"click.\" + this.widgetName, function (event) {\n                    if (true === $.data(event.target, that.widgetName + \".preventClickEvent\")) {\n                        $.removeData(event.target, that.widgetName + \".preventClickEvent\");\n                        event.stopImmediatePropagation();\n                        return false;\n                    }\n                });\n\n            this.started = false;\n        },\n\n        // TODO: make sure destroying one instance of mouse doesn't mess with\n        // other instances of mouse\n        _mouseDestroy: function () {\n            this.element.unbind(\".\" + this.widgetName);\n            if (this._mouseMoveDelegate) {\n                $(document)\n                    .unbind(\"mousemove.\" + this.widgetName, this._mouseMoveDelegate)\n                    .unbind(\"mouseup.\" + this.widgetName, this._mouseUpDelegate);\n            }\n        },\n\n        _mouseDown: function (event) {\n            // don't let more than one widget handle mouseStart\n            if (mouseHandled) {\n                return;\n            }\n\n            // we may have missed mouseup (out of window)\n            (this._mouseStarted && this._mouseUp(event));\n\n            this._mouseDownEvent = event;\n\n            var that = this,\n                btnIsLeft = (event.which === 1),\n                // event.target.nodeName works around a bug in IE 8 with\n                // disabled inputs (#7620)\n                elIsCancel = (typeof this.options.cancel === \"string\" && event.target.nodeName ? $(event.target).closest(this.options.cancel).length : false);\n            if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) {\n                return true;\n            }\n\n            this.mouseDelayMet = !this.options.delay;\n            if (!this.mouseDelayMet) {\n                this._mouseDelayTimer = setTimeout(function () {\n                    that.mouseDelayMet = true;\n                }, this.options.delay);\n            }\n\n            if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {\n                this._mouseStarted = (this._mouseStart(event) !== false);\n                if (!this._mouseStarted) {\n                    event.preventDefault();\n                    return true;\n                }\n            }\n\n            // Click event may never have fired (Gecko & Opera)\n            if (true === $.data(event.target, this.widgetName + \".preventClickEvent\")) {\n                $.removeData(event.target, this.widgetName + \".preventClickEvent\");\n            }\n\n            // these delegates are required to keep context\n            this._mouseMoveDelegate = function (event) {\n                return that._mouseMove(event);\n            };\n            this._mouseUpDelegate = function (event) {\n                return that._mouseUp(event);\n            };\n            $(document)\n                .bind(\"mousemove.\" + this.widgetName, this._mouseMoveDelegate)\n                .bind(\"mouseup.\" + this.widgetName, this._mouseUpDelegate);\n\n            event.preventDefault();\n\n            mouseHandled = true;\n            return true;\n        },\n\n        _mouseMove: function (event) {\n            // IE mouseup check - mouseup happened when mouse was out of window\n            if ($.ui.ie && (!document.documentMode || document.documentMode < 9) && !event.button) {\n                return this._mouseUp(event);\n            }\n\n            if (this._mouseStarted) {\n                this._mouseDrag(event);\n                return event.preventDefault();\n            }\n\n            if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {\n                this._mouseStarted =\n                    (this._mouseStart(this._mouseDownEvent, event) !== false);\n                (this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event));\n            }\n\n            return !this._mouseStarted;\n        },\n\n        _mouseUp: function (event) {\n            $(document)\n                .unbind(\"mousemove.\" + this.widgetName, this._mouseMoveDelegate)\n                .unbind(\"mouseup.\" + this.widgetName, this._mouseUpDelegate);\n\n            if (this._mouseStarted) {\n                this._mouseStarted = false;\n\n                if (event.target === this._mouseDownEvent.target) {\n                    $.data(event.target, this.widgetName + \".preventClickEvent\", true);\n                }\n\n                this._mouseStop(event);\n            }\n\n            return false;\n        },\n\n        _mouseDistanceMet: function (event) {\n            return (Math.max(\n                    Math.abs(this._mouseDownEvent.pageX - event.pageX),\n                    Math.abs(this._mouseDownEvent.pageY - event.pageY)\n                ) >= this.options.distance\n            );\n        },\n\n        _mouseDelayMet: function (/* event */) {\n            return this.mouseDelayMet;\n        },\n\n        // These are placeholder methods, to be overridden by extending plugin\n        _mouseStart: function (/* event */) {\n        },\n        _mouseDrag: function (/* event */) {\n        },\n        _mouseStop: function (/* event */) {\n        },\n        _mouseCapture: function (/* event */) {\n            return true;\n        }\n    });\n\n});\n","jquery/ui-modules/effect-explode.js":"/*!\n * jQuery UI Effects Explode - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/explode-effect/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($, undefined) {\n\n    $.effects.effect.explode = function (o, done) {\n\n        var rows = o.pieces ? Math.round(Math.sqrt(o.pieces)) : 3,\n            cells = rows,\n            el = $(this),\n            mode = $.effects.setMode(el, o.mode || \"hide\"),\n            show = mode === \"show\",\n\n            // show and then visibility:hidden the element before calculating offset\n            offset = el.show().css(\"visibility\", \"hidden\").offset(),\n\n            // width and height of a piece\n            width = Math.ceil(el.outerWidth() / cells),\n            height = Math.ceil(el.outerHeight() / rows),\n            pieces = [],\n\n            // loop\n            i, j, left, top, mx, my;\n\n        // children animate complete:\n        function childComplete() {\n            pieces.push(this);\n            if (pieces.length === rows * cells) {\n                animComplete();\n            }\n        }\n\n        // clone the element for each row and cell.\n        for (i = 0; i < rows; i++) { // ===>\n            top = offset.top + i * height;\n            my = i - (rows - 1) / 2;\n\n            for (j = 0; j < cells; j++) { // |||\n                left = offset.left + j * width;\n                mx = j - (cells - 1) / 2;\n\n                // Create a clone of the now hidden main element that will be absolute positioned\n                // within a wrapper div off the -left and -top equal to size of our pieces\n                el\n                    .clone()\n                    .appendTo(\"body\")\n                    .wrap(\"<div></div>\")\n                    .css({\n                        position: \"absolute\",\n                        visibility: \"visible\",\n                        left: -j * width,\n                        top: -i * height\n                    })\n\n                    // select the wrapper - make it overflow: hidden and absolute positioned based on\n                    // where the original was located +left and +top equal to the size of pieces\n                    .parent()\n                    .addClass(\"ui-effects-explode\")\n                    .css({\n                        position: \"absolute\",\n                        overflow: \"hidden\",\n                        width: width,\n                        height: height,\n                        left: left + (show ? mx * width : 0),\n                        top: top + (show ? my * height : 0),\n                        opacity: show ? 0 : 1\n                    }).animate({\n                    left: left + (show ? 0 : mx * width),\n                    top: top + (show ? 0 : my * height),\n                    opacity: show ? 1 : 0\n                }, o.duration || 500, o.easing, childComplete);\n            }\n        }\n\n        function animComplete() {\n            el.css({\n                visibility: \"visible\"\n            });\n            $(pieces).remove();\n            if (!show) {\n                el.hide();\n            }\n            done();\n        }\n    };\n\n});\n","jquery/ui-modules/effect-transfer.js":"/*!\n * jQuery UI Effects Transfer - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/transfer-effect/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($, undefined) {\n\n    $.effects.effect.transfer = function (o, done) {\n        var elem = $(this),\n            target = $(o.to),\n            targetFixed = target.css(\"position\") === \"fixed\",\n            body = $(\"body\"),\n            fixTop = targetFixed ? body.scrollTop() : 0,\n            fixLeft = targetFixed ? body.scrollLeft() : 0,\n            endPosition = target.offset(),\n            animation = {\n                top: endPosition.top - fixTop,\n                left: endPosition.left - fixLeft,\n                height: target.innerHeight(),\n                width: target.innerWidth()\n            },\n            startPosition = elem.offset(),\n            transfer = $(\"<div class='ui-effects-transfer'></div>\")\n                .appendTo(document.body)\n                .addClass(o.className)\n                .css({\n                    top: startPosition.top - fixTop,\n                    left: startPosition.left - fixLeft,\n                    height: elem.innerHeight(),\n                    width: elem.innerWidth(),\n                    position: targetFixed ? \"fixed\" : \"absolute\"\n                })\n                .animate(animation, o.duration, o.easing, function () {\n                    transfer.remove();\n                    done();\n                });\n    };\n\n});\n","jquery/ui-modules/tooltip.js":"/*!\n * jQuery UI Tooltip - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/tooltip/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/core',\n    'jquery-ui-modules/widget',\n    'jquery-ui-modules/position'\n], function ($) {\n\n    var increments = 0;\n\n    function addDescribedBy(elem, id) {\n        var describedby = (elem.attr(\"aria-describedby\") || \"\").split(/\\s+/);\n        describedby.push(id);\n        elem\n            .data(\"ui-tooltip-id\", id)\n            .attr(\"aria-describedby\", $.trim(describedby.join(\" \")));\n    }\n\n    function removeDescribedBy(elem) {\n        var id = elem.data(\"ui-tooltip-id\"),\n            describedby = (elem.attr(\"aria-describedby\") || \"\").split(/\\s+/),\n            index = $.inArray(id, describedby);\n        if (index !== -1) {\n            describedby.splice(index, 1);\n        }\n\n        elem.removeData(\"ui-tooltip-id\");\n        describedby = $.trim(describedby.join(\" \"));\n        if (describedby) {\n            elem.attr(\"aria-describedby\", describedby);\n        } else {\n            elem.removeAttr(\"aria-describedby\");\n        }\n    }\n\n    $.widget(\"ui.tooltip\", {\n        version: \"1.10.4\",\n        options: {\n            content: function () {\n                // support: IE<9, Opera in jQuery <1.7\n                // .text() can't accept undefined, so coerce to a string\n                var title = $(this).attr(\"title\") || \"\";\n                // Escape title, since we're going from an attribute to raw HTML\n                return $(\"<a>\").text(title).html();\n            },\n            hide: true,\n            // Disabled elements have inconsistent behavior across browsers (#8661)\n            items: \"[title]:not([disabled])\",\n            position: {\n                my: \"left top+15\",\n                at: \"left bottom\",\n                collision: \"flipfit flip\"\n            },\n            show: true,\n            tooltipClass: null,\n            track: false,\n\n            // callbacks\n            close: null,\n            open: null\n        },\n\n        _create: function () {\n            this._on({\n                mouseover: \"open\",\n                focusin: \"open\"\n            });\n\n            // IDs of generated tooltips, needed for destroy\n            this.tooltips = {};\n            // IDs of parent tooltips where we removed the title attribute\n            this.parents = {};\n\n            if (this.options.disabled) {\n                this._disable();\n            }\n        },\n\n        _setOption: function (key, value) {\n            var that = this;\n\n            if (key === \"disabled\") {\n                this[value ? \"_disable\" : \"_enable\"]();\n                this.options[key] = value;\n                // disable element style changes\n                return;\n            }\n\n            this._super(key, value);\n\n            if (key === \"content\") {\n                $.each(this.tooltips, function (id, element) {\n                    that._updateContent(element);\n                });\n            }\n        },\n\n        _disable: function () {\n            var that = this;\n\n            // close open tooltips\n            $.each(this.tooltips, function (id, element) {\n                var event = $.Event(\"blur\");\n                event.target = event.currentTarget = element[0];\n                that.close(event, true);\n            });\n\n            // remove title attributes to prevent native tooltips\n            this.element.find(this.options.items).addBack().each(function () {\n                var element = $(this);\n                if (element.is(\"[title]\")) {\n                    element\n                        .data(\"ui-tooltip-title\", element.attr(\"title\"))\n                        .attr(\"title\", \"\");\n                }\n            });\n        },\n\n        _enable: function () {\n            // restore title attributes\n            this.element.find(this.options.items).addBack().each(function () {\n                var element = $(this);\n                if (element.data(\"ui-tooltip-title\")) {\n                    element.attr(\"title\", element.data(\"ui-tooltip-title\"));\n                }\n            });\n        },\n\n        open: function (event) {\n            var that = this,\n                target = $(event ? event.target : this.element)\n                // we need closest here due to mouseover bubbling,\n                // but always pointing at the same event target\n                    .closest(this.options.items);\n\n            // No element to show a tooltip for or the tooltip is already open\n            if (!target.length || target.data(\"ui-tooltip-id\")) {\n                return;\n            }\n\n            if (target.attr(\"title\")) {\n                target.data(\"ui-tooltip-title\", target.attr(\"title\"));\n            }\n\n            target.data(\"ui-tooltip-open\", true);\n\n            // kill parent tooltips, custom or native, for hover\n            if (event && event.type === \"mouseover\") {\n                target.parents().each(function () {\n                    var parent = $(this),\n                        blurEvent;\n                    if (parent.data(\"ui-tooltip-open\")) {\n                        blurEvent = $.Event(\"blur\");\n                        blurEvent.target = blurEvent.currentTarget = this;\n                        that.close(blurEvent, true);\n                    }\n                    if (parent.attr(\"title\")) {\n                        parent.uniqueId();\n                        that.parents[this.id] = {\n                            element: this,\n                            title: parent.attr(\"title\")\n                        };\n                        parent.attr(\"title\", \"\");\n                    }\n                });\n            }\n\n            this._updateContent(target, event);\n        },\n\n        _updateContent: function (target, event) {\n            var content,\n                contentOption = this.options.content,\n                that = this,\n                eventType = event ? event.type : null;\n\n            if (typeof contentOption === \"string\") {\n                return this._open(event, target, contentOption);\n            }\n\n            content = contentOption.call(target[0], function (response) {\n                // ignore async response if tooltip was closed already\n                if (!target.data(\"ui-tooltip-open\")) {\n                    return;\n                }\n                // IE may instantly serve a cached response for ajax requests\n                // delay this call to _open so the other call to _open runs first\n                that._delay(function () {\n                    // jQuery creates a special event for focusin when it doesn't\n                    // exist natively. To improve performance, the native event\n                    // object is reused and the type is changed. Therefore, we can't\n                    // rely on the type being correct after the event finished\n                    // bubbling, so we set it back to the previous value. (#8740)\n                    if (event) {\n                        event.type = eventType;\n                    }\n                    this._open(event, target, response);\n                });\n            });\n            if (content) {\n                this._open(event, target, content);\n            }\n        },\n\n        _open: function (event, target, content) {\n            var tooltip, events, delayedShow,\n                positionOption = $.extend({}, this.options.position);\n\n            if (!content) {\n                return;\n            }\n\n            // Content can be updated multiple times. If the tooltip already\n            // exists, then just update the content and bail.\n            tooltip = this._find(target);\n            if (tooltip.length) {\n                tooltip.find(\".ui-tooltip-content\").html(content);\n                return;\n            }\n\n            // if we have a title, clear it to prevent the native tooltip\n            // we have to check first to avoid defining a title if none exists\n            // (we don't want to cause an element to start matching [title])\n            //\n            // We use removeAttr only for key events, to allow IE to export the correct\n            // accessible attributes. For mouse events, set to empty string to avoid\n            // native tooltip showing up (happens only when removing inside mouseover).\n            if (target.is(\"[title]\")) {\n                if (event && event.type === \"mouseover\") {\n                    target.attr(\"title\", \"\");\n                } else {\n                    target.removeAttr(\"title\");\n                }\n            }\n\n            tooltip = this._tooltip(target);\n            addDescribedBy(target, tooltip.attr(\"id\"));\n            tooltip.find(\".ui-tooltip-content\").html(content);\n\n            function position(event) {\n                positionOption.of = event;\n                if (tooltip.is(\":hidden\")) {\n                    return;\n                }\n                tooltip.position(positionOption);\n            }\n\n            if (this.options.track && event && /^mouse/.test(event.type)) {\n                this._on(this.document, {\n                    mousemove: position\n                });\n                // trigger once to override element-relative positioning\n                position(event);\n            } else {\n                tooltip.position($.extend({\n                    of: target\n                }, this.options.position));\n            }\n\n            tooltip.hide();\n\n            this._show(tooltip, this.options.show);\n            // Handle tracking tooltips that are shown with a delay (#8644). As soon\n            // as the tooltip is visible, position the tooltip using the most recent\n            // event.\n            if (this.options.show && this.options.show.delay) {\n                delayedShow = this.delayedShow = setInterval(function () {\n                    if (tooltip.is(\":visible\")) {\n                        position(positionOption.of);\n                        clearInterval(delayedShow);\n                    }\n                }, $.fx.interval);\n            }\n\n            this._trigger(\"open\", event, {tooltip: tooltip});\n\n            events = {\n                keyup: function (event) {\n                    if (event.keyCode === $.ui.keyCode.ESCAPE) {\n                        var fakeEvent = $.Event(event);\n                        fakeEvent.currentTarget = target[0];\n                        this.close(fakeEvent, true);\n                    }\n                },\n                remove: function () {\n                    this._removeTooltip(tooltip);\n                }\n            };\n            if (!event || event.type === \"mouseover\") {\n                events.mouseleave = \"close\";\n            }\n            if (!event || event.type === \"focusin\") {\n                events.focusout = \"close\";\n            }\n            this._on(true, target, events);\n        },\n\n        close: function (event) {\n            var that = this,\n                target = $(event ? event.currentTarget : this.element),\n                tooltip = this._find(target);\n\n            // disabling closes the tooltip, so we need to track when we're closing\n            // to avoid an infinite loop in case the tooltip becomes disabled on close\n            if (this.closing) {\n                return;\n            }\n\n            // Clear the interval for delayed tracking tooltips\n            clearInterval(this.delayedShow);\n\n            // only set title if we had one before (see comment in _open())\n            if (target.data(\"ui-tooltip-title\")) {\n                target.attr(\"title\", target.data(\"ui-tooltip-title\"));\n            }\n\n            removeDescribedBy(target);\n\n            tooltip.stop(true);\n            this._hide(tooltip, this.options.hide, function () {\n                that._removeTooltip($(this));\n            });\n\n            target.removeData(\"ui-tooltip-open\");\n            this._off(target, \"mouseleave focusout keyup\");\n            // Remove 'remove' binding only on delegated targets\n            if (target[0] !== this.element[0]) {\n                this._off(target, \"remove\");\n            }\n            this._off(this.document, \"mousemove\");\n\n            if (event && event.type === \"mouseleave\") {\n                $.each(this.parents, function (id, parent) {\n                    $(parent.element).attr(\"title\", parent.title);\n                    delete that.parents[id];\n                });\n            }\n\n            this.closing = true;\n            this._trigger(\"close\", event, {tooltip: tooltip});\n            this.closing = false;\n        },\n\n        _tooltip: function (element) {\n            var id = \"ui-tooltip-\" + increments++,\n                tooltip = $(\"<div>\")\n                    .attr({\n                        id: id,\n                        role: \"tooltip\"\n                    })\n                    .addClass(\"ui-tooltip ui-widget ui-corner-all ui-widget-content \" +\n                        (this.options.tooltipClass || \"\"));\n            $(\"<div>\")\n                .addClass(\"ui-tooltip-content\")\n                .appendTo(tooltip);\n            tooltip.appendTo(this.document[0].body);\n            this.tooltips[id] = element;\n            return tooltip;\n        },\n\n        _find: function (target) {\n            var id = target.data(\"ui-tooltip-id\");\n            return id ? $(\"#\" + id) : $();\n        },\n\n        _removeTooltip: function (tooltip) {\n            tooltip.remove();\n            delete this.tooltips[tooltip.attr(\"id\")];\n        },\n\n        _destroy: function () {\n            var that = this;\n\n            // close open tooltips\n            $.each(this.tooltips, function (id, element) {\n                // Delegate to close method to handle common cleanup\n                var event = $.Event(\"blur\");\n                event.target = event.currentTarget = element[0];\n                that.close(event, true);\n\n                // Remove immediately; destroying an open tooltip doesn't use the\n                // hide animation\n                $(\"#\" + id).remove();\n\n                // Restore the title\n                if (element.data(\"ui-tooltip-title\")) {\n                    element.attr(\"title\", element.data(\"ui-tooltip-title\"));\n                    element.removeData(\"ui-tooltip-title\");\n                }\n            });\n        }\n    });\n\n});\n","jquery/ui-modules/widget.js":"/*!\n * jQuery UI Widget - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/jQuery.widget/\n */\n\ndefine([\n    'jquery'\n], function ($, undefined) {\n\n    var uuid = 0,\n        slice = Array.prototype.slice,\n        _cleanData = $.cleanData;\n    $.cleanData = function (elems) {\n        for (var i = 0, elem; (elem = elems[i]) != null; i++) {\n            try {\n                $(elem).triggerHandler(\"remove\");\n                // http://bugs.jquery.com/ticket/8235\n            } catch (e) {\n            }\n        }\n        _cleanData(elems);\n    };\n\n    $.widget = function (name, base, prototype) {\n        var fullName, existingConstructor, constructor, basePrototype,\n            // proxiedPrototype allows the provided prototype to remain unmodified\n            // so that it can be used as a mixin for multiple widgets (#8876)\n            proxiedPrototype = {},\n            namespace = name.split(\".\")[0];\n\n        name = name.split(\".\")[1];\n        fullName = namespace + \"-\" + name;\n\n        if (!prototype) {\n            prototype = base;\n            base = $.Widget;\n        }\n\n        // create selector for plugin\n        $.expr[\":\"][fullName.toLowerCase()] = function (elem) {\n            return !!$.data(elem, fullName);\n        };\n\n        $[namespace] = $[namespace] || {};\n        existingConstructor = $[namespace][name];\n        constructor = $[namespace][name] = function (options, element) {\n            // allow instantiation without \"new\" keyword\n            if (!this._createWidget) {\n                return new constructor(options, element);\n            }\n\n            // allow instantiation without initializing for simple inheritance\n            // must use \"new\" keyword (the code above always passes args)\n            if (arguments.length) {\n                this._createWidget(options, element);\n            }\n        };\n        // extend with the existing constructor to carry over any static properties\n        $.extend(constructor, existingConstructor, {\n            version: prototype.version,\n            // copy the object used to create the prototype in case we need to\n            // redefine the widget later\n            _proto: $.extend({}, prototype),\n            // track widgets that inherit from this widget in case this widget is\n            // redefined after a widget inherits from it\n            _childConstructors: []\n        });\n\n        basePrototype = new base();\n        // we need to make the options hash a property directly on the new instance\n        // otherwise we'll modify the options hash on the prototype that we're\n        // inheriting from\n        basePrototype.options = $.widget.extend({}, basePrototype.options);\n        $.each(prototype, function (prop, value) {\n            if (!$.isFunction(value)) {\n                proxiedPrototype[prop] = value;\n                return;\n            }\n            proxiedPrototype[prop] = (function () {\n                var _super = function () {\n                        return base.prototype[prop].apply(this, arguments);\n                    },\n                    _superApply = function (args) {\n                        return base.prototype[prop].apply(this, args);\n                    };\n                return function () {\n                    var __super = this._super,\n                        __superApply = this._superApply,\n                        returnValue;\n\n                    this._super = _super;\n                    this._superApply = _superApply;\n\n                    returnValue = value.apply(this, arguments);\n\n                    this._super = __super;\n                    this._superApply = __superApply;\n\n                    return returnValue;\n                };\n            })();\n        });\n        constructor.prototype = $.widget.extend(basePrototype, {\n            // TODO: remove support for widgetEventPrefix\n            // always use the name + a colon as the prefix, e.g., draggable:start\n            // don't prefix for widgets that aren't DOM-based\n            widgetEventPrefix: existingConstructor ? (basePrototype.widgetEventPrefix || name) : name\n        }, proxiedPrototype, {\n            constructor: constructor,\n            namespace: namespace,\n            widgetName: name,\n            widgetFullName: fullName\n        });\n\n        // If this widget is being redefined then we need to find all widgets that\n        // are inheriting from it and redefine all of them so that they inherit from\n        // the new version of this widget. We're essentially trying to replace one\n        // level in the prototype chain.\n        if (existingConstructor) {\n            $.each(existingConstructor._childConstructors, function (i, child) {\n                var childPrototype = child.prototype;\n\n                // redefine the child widget using the same prototype that was\n                // originally used, but inherit from the new version of the base\n                $.widget(childPrototype.namespace + \".\" + childPrototype.widgetName, constructor, child._proto);\n            });\n            // remove the list of existing child constructors from the old constructor\n            // so the old child constructors can be garbage collected\n            delete existingConstructor._childConstructors;\n        } else {\n            base._childConstructors.push(constructor);\n        }\n\n        $.widget.bridge(name, constructor);\n    };\n\n    $.widget.extend = function (target) {\n        var input = slice.call(arguments, 1),\n            inputIndex = 0,\n            inputLength = input.length,\n            key,\n            value;\n        for (; inputIndex < inputLength; inputIndex++) {\n            for (key in input[inputIndex]) {\n                value = input[inputIndex][key];\n                if (input[inputIndex].hasOwnProperty(key) && value !== undefined) {\n                    // Clone objects\n                    if ($.isPlainObject(value)) {\n                        target[key] = $.isPlainObject(target[key]) ?\n                            $.widget.extend({}, target[key], value) :\n                            // Don't extend strings, arrays, etc. with objects\n                            $.widget.extend({}, value);\n                        // Copy everything else by reference\n                    } else {\n                        target[key] = value;\n                    }\n                }\n            }\n        }\n        return target;\n    };\n\n    $.widget.bridge = function (name, object) {\n        var fullName = object.prototype.widgetFullName || name;\n        $.fn[name] = function (options) {\n            var isMethodCall = typeof options === \"string\",\n                args = slice.call(arguments, 1),\n                returnValue = this;\n\n            // allow multiple hashes to be passed on init\n            options = !isMethodCall && args.length ?\n                $.widget.extend.apply(null, [options].concat(args)) :\n                options;\n\n            if (isMethodCall) {\n                this.each(function () {\n                    var methodValue,\n                        instance = $.data(this, fullName);\n                    if (!instance) {\n                        return $.error(\"cannot call methods on \" + name + \" prior to initialization; \" +\n                            \"attempted to call method '\" + options + \"'\");\n                    }\n                    if (!$.isFunction(instance[options]) || options.charAt(0) === \"_\") {\n                        return $.error(\"no such method '\" + options + \"' for \" + name + \" widget instance\");\n                    }\n                    methodValue = instance[options].apply(instance, args);\n                    if (methodValue !== instance && methodValue !== undefined) {\n                        returnValue = methodValue && methodValue.jquery ?\n                            returnValue.pushStack(methodValue.get()) :\n                            methodValue;\n                        return false;\n                    }\n                });\n            } else {\n                this.each(function () {\n                    var instance = $.data(this, fullName);\n                    if (instance) {\n                        instance.option(options || {})._init();\n                    } else {\n                        $.data(this, fullName, new object(options, this));\n                    }\n                });\n            }\n\n            return returnValue;\n        };\n    };\n\n    $.Widget = function ( /* options, element */) {\n    };\n    $.Widget._childConstructors = [];\n\n    $.Widget.prototype = {\n        widgetName: \"widget\",\n        widgetEventPrefix: \"\",\n        defaultElement: \"<div>\",\n        options: {\n            disabled: false,\n\n            // callbacks\n            create: null\n        },\n        _createWidget: function (options, element) {\n            element = $(element || this.defaultElement || this)[0];\n            this.element = $(element);\n            this.uuid = uuid++;\n            this.eventNamespace = \".\" + this.widgetName + this.uuid;\n            this.options = $.widget.extend({},\n                this.options,\n                this._getCreateOptions(),\n                options);\n\n            this.bindings = $();\n            this.hoverable = $();\n            this.focusable = $();\n\n            if (element !== this) {\n                $.data(element, this.widgetFullName, this);\n                this._on(true, this.element, {\n                    remove: function (event) {\n                        if (event.target === element) {\n                            this.destroy();\n                        }\n                    }\n                });\n                this.document = $(element.style ?\n                    // element within the document\n                    element.ownerDocument :\n                    // element is window or document\n                    element.document || element);\n                this.window = $(this.document[0].defaultView || this.document[0].parentWindow);\n            }\n\n            this._create();\n            this._trigger(\"create\", null, this._getCreateEventData());\n            this._init();\n        },\n        _getCreateOptions: $.noop,\n        _getCreateEventData: $.noop,\n        _create: $.noop,\n        _init: $.noop,\n\n        destroy: function () {\n            this._destroy();\n            // we can probably remove the unbind calls in 2.0\n            // all event bindings should go through this._on()\n            this.element\n                .unbind(this.eventNamespace)\n                // 1.9 BC for #7810\n                // TODO remove dual storage\n                .removeData(this.widgetName)\n                .removeData(this.widgetFullName)\n                // support: jquery <1.6.3\n                // http://bugs.jquery.com/ticket/9413\n                .removeData($.camelCase(this.widgetFullName));\n            this.widget()\n                .unbind(this.eventNamespace)\n                .removeAttr(\"aria-disabled\")\n                .removeClass(\n                    this.widgetFullName + \"-disabled \" +\n                    \"ui-state-disabled\");\n\n            // clean up events and states\n            this.bindings.unbind(this.eventNamespace);\n            this.hoverable.removeClass(\"ui-state-hover\");\n            this.focusable.removeClass(\"ui-state-focus\");\n        },\n        _destroy: $.noop,\n\n        widget: function () {\n            return this.element;\n        },\n\n        option: function (key, value) {\n            var options = key,\n                parts,\n                curOption,\n                i;\n\n            if (arguments.length === 0) {\n                // don't return a reference to the internal hash\n                return $.widget.extend({}, this.options);\n            }\n\n            if (typeof key === \"string\") {\n                // handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\n                options = {};\n                parts = key.split(\".\");\n                key = parts.shift();\n                if (parts.length) {\n                    curOption = options[key] = $.widget.extend({}, this.options[key]);\n                    for (i = 0; i < parts.length - 1; i++) {\n                        curOption[parts[i]] = curOption[parts[i]] || {};\n                        curOption = curOption[parts[i]];\n                    }\n                    key = parts.pop();\n                    if (arguments.length === 1) {\n                        return curOption[key] === undefined ? null : curOption[key];\n                    }\n                    curOption[key] = value;\n                } else {\n                    if (arguments.length === 1) {\n                        return this.options[key] === undefined ? null : this.options[key];\n                    }\n                    options[key] = value;\n                }\n            }\n\n            this._setOptions(options);\n\n            return this;\n        },\n        _setOptions: function (options) {\n            var key;\n\n            for (key in options) {\n                this._setOption(key, options[key]);\n            }\n\n            return this;\n        },\n        _setOption: function (key, value) {\n            this.options[key] = value;\n\n            if (key === \"disabled\") {\n                this.widget()\n                    .toggleClass(this.widgetFullName + \"-disabled ui-state-disabled\", !!value)\n                    .attr(\"aria-disabled\", value);\n                this.hoverable.removeClass(\"ui-state-hover\");\n                this.focusable.removeClass(\"ui-state-focus\");\n            }\n\n            return this;\n        },\n\n        enable: function () {\n            return this._setOption(\"disabled\", false);\n        },\n        disable: function () {\n            return this._setOption(\"disabled\", true);\n        },\n\n        _on: function (suppressDisabledCheck, element, handlers) {\n            var delegateElement,\n                instance = this;\n\n            // no suppressDisabledCheck flag, shuffle arguments\n            if (typeof suppressDisabledCheck !== \"boolean\") {\n                handlers = element;\n                element = suppressDisabledCheck;\n                suppressDisabledCheck = false;\n            }\n\n            // no element argument, shuffle and use this.element\n            if (!handlers) {\n                handlers = element;\n                element = this.element;\n                delegateElement = this.widget();\n            } else {\n                // accept selectors, DOM elements\n                element = delegateElement = $(element);\n                this.bindings = this.bindings.add(element);\n            }\n\n            $.each(handlers, function (event, handler) {\n                function handlerProxy() {\n                    // allow widgets to customize the disabled handling\n                    // - disabled as an array instead of boolean\n                    // - disabled class as method for disabling individual parts\n                    if (!suppressDisabledCheck &&\n                        (instance.options.disabled === true ||\n                            $(this).hasClass(\"ui-state-disabled\"))) {\n                        return;\n                    }\n                    return (typeof handler === \"string\" ? instance[handler] : handler)\n                        .apply(instance, arguments);\n                }\n\n                // copy the guid so direct unbinding works\n                if (typeof handler !== \"string\") {\n                    handlerProxy.guid = handler.guid =\n                        handler.guid || handlerProxy.guid || $.guid++;\n                }\n\n                var match = event.match(/^(\\w+)\\s*(.*)$/),\n                    eventName = match[1] + instance.eventNamespace,\n                    selector = match[2];\n                if (selector) {\n                    delegateElement.delegate(selector, eventName, handlerProxy);\n                } else {\n                    element.bind(eventName, handlerProxy);\n                }\n            });\n        },\n\n        _off: function (element, eventName) {\n            eventName = (eventName || \"\").split(\" \").join(this.eventNamespace + \" \") + this.eventNamespace;\n            element.unbind(eventName).undelegate(eventName);\n        },\n\n        _delay: function (handler, delay) {\n            function handlerProxy() {\n                return (typeof handler === \"string\" ? instance[handler] : handler)\n                    .apply(instance, arguments);\n            }\n\n            var instance = this;\n            return setTimeout(handlerProxy, delay || 0);\n        },\n\n        _hoverable: function (element) {\n            this.hoverable = this.hoverable.add(element);\n            this._on(element, {\n                mouseenter: function (event) {\n                    $(event.currentTarget).addClass(\"ui-state-hover\");\n                },\n                mouseleave: function (event) {\n                    $(event.currentTarget).removeClass(\"ui-state-hover\");\n                }\n            });\n        },\n\n        _focusable: function (element) {\n            this.focusable = this.focusable.add(element);\n            this._on(element, {\n                focusin: function (event) {\n                    $(event.currentTarget).addClass(\"ui-state-focus\");\n                },\n                focusout: function (event) {\n                    $(event.currentTarget).removeClass(\"ui-state-focus\");\n                }\n            });\n        },\n\n        _trigger: function (type, event, data) {\n            var prop, orig,\n                callback = this.options[type];\n\n            data = data || {};\n            event = $.Event(event);\n            event.type = (type === this.widgetEventPrefix ?\n                type :\n                this.widgetEventPrefix + type).toLowerCase();\n            // the original event may come from any element\n            // so we need to reset the target on the new event\n            event.target = this.element[0];\n\n            // copy original event properties over to the new event\n            orig = event.originalEvent;\n            if (orig) {\n                for (prop in orig) {\n                    if (!(prop in event)) {\n                        event[prop] = orig[prop];\n                    }\n                }\n            }\n\n            this.element.trigger(event, data);\n            return !($.isFunction(callback) &&\n                callback.apply(this.element[0], [event].concat(data)) === false ||\n                event.isDefaultPrevented());\n        }\n    };\n\n    $.each({show: \"fadeIn\", hide: \"fadeOut\"}, function (method, defaultEffect) {\n        $.Widget.prototype[\"_\" + method] = function (element, options, callback) {\n            if (typeof options === \"string\") {\n                options = {effect: options};\n            }\n            var hasOptions,\n                effectName = !options ?\n                    method :\n                    options === true || typeof options === \"number\" ?\n                        defaultEffect :\n                        options.effect || defaultEffect;\n            options = options || {};\n            if (typeof options === \"number\") {\n                options = {duration: options};\n            }\n            hasOptions = !$.isEmptyObject(options);\n            options.complete = callback;\n            if (options.delay) {\n                element.delay(options.delay);\n            }\n            if (hasOptions && $.effects && $.effects.effect[effectName]) {\n                element[method](options);\n            } else if (effectName !== method && element[effectName]) {\n                element[effectName](options.duration, options.easing, callback);\n            } else {\n                element.queue(function (next) {\n                    $(this)[method]();\n                    if (callback) {\n                        callback.call(element[0]);\n                    }\n                    next();\n                });\n            }\n        };\n    });\n\n});\n","jquery/ui-modules/effect-highlight.js":"/*!\n * jQuery UI Effects Highlight - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/highlight-effect/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($, undefined) {\n\n    $.effects.effect.highlight = function (o, done) {\n        var elem = $(this),\n            props = [\"backgroundImage\", \"backgroundColor\", \"opacity\"],\n            mode = $.effects.setMode(elem, o.mode || \"show\"),\n            animation = {\n                backgroundColor: elem.css(\"backgroundColor\")\n            };\n\n        if (mode === \"hide\") {\n            animation.opacity = 0;\n        }\n\n        $.effects.save(elem, props);\n\n        elem\n            .show()\n            .css({\n                backgroundImage: \"none\",\n                backgroundColor: o.color || \"#ffff99\"\n            })\n            .animate(animation, {\n                queue: false,\n                duration: o.duration,\n                easing: o.easing,\n                complete: function () {\n                    if (mode === \"hide\") {\n                        elem.hide();\n                    }\n                    $.effects.restore(elem, props);\n                    done();\n                }\n            });\n    };\n\n});\n","jquery/ui-modules/effect-bounce.js":"/*!\n * jQuery UI Effects Bounce - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/bounce-effect/\n *\n * Depends:\n *\tjquery.ui.effect.js\n */\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($, undefined) {\n\n    $.effects.effect.bounce = function (o, done) {\n        var el = $(this),\n            props = [\"position\", \"top\", \"bottom\", \"left\", \"right\", \"height\", \"width\"],\n\n            // defaults:\n            mode = $.effects.setMode(el, o.mode || \"effect\"),\n            hide = mode === \"hide\",\n            show = mode === \"show\",\n            direction = o.direction || \"up\",\n            distance = o.distance,\n            times = o.times || 5,\n\n            // number of internal animations\n            anims = times * 2 + (show || hide ? 1 : 0),\n            speed = o.duration / anims,\n            easing = o.easing,\n\n            // utility:\n            ref = (direction === \"up\" || direction === \"down\") ? \"top\" : \"left\",\n            motion = (direction === \"up\" || direction === \"left\"),\n            i,\n            upAnim,\n            downAnim,\n\n            // we will need to re-assemble the queue to stack our animations in place\n            queue = el.queue(),\n            queuelen = queue.length;\n\n        // Avoid touching opacity to prevent clearType and PNG issues in IE\n        if (show || hide) {\n            props.push(\"opacity\");\n        }\n\n        $.effects.save(el, props);\n        el.show();\n        $.effects.createWrapper(el); // Create Wrapper\n\n        // default distance for the BIGGEST bounce is the outer Distance / 3\n        if (!distance) {\n            distance = el[ref === \"top\" ? \"outerHeight\" : \"outerWidth\"]() / 3;\n        }\n\n        if (show) {\n            downAnim = {opacity: 1};\n            downAnim[ref] = 0;\n\n            // if we are showing, force opacity 0 and set the initial position\n            // then do the \"first\" animation\n            el.css(\"opacity\", 0)\n                .css(ref, motion ? -distance * 2 : distance * 2)\n                .animate(downAnim, speed, easing);\n        }\n\n        // start at the smallest distance if we are hiding\n        if (hide) {\n            distance = distance / Math.pow(2, times - 1);\n        }\n\n        downAnim = {};\n        downAnim[ref] = 0;\n        // Bounces up/down/left/right then back to 0 -- times * 2 animations happen here\n        for (i = 0; i < times; i++) {\n            upAnim = {};\n            upAnim[ref] = (motion ? \"-=\" : \"+=\") + distance;\n\n            el.animate(upAnim, speed, easing)\n                .animate(downAnim, speed, easing);\n\n            distance = hide ? distance * 2 : distance / 2;\n        }\n\n        // Last Bounce when Hiding\n        if (hide) {\n            upAnim = {opacity: 0};\n            upAnim[ref] = (motion ? \"-=\" : \"+=\") + distance;\n\n            el.animate(upAnim, speed, easing);\n        }\n\n        el.queue(function () {\n            if (hide) {\n                el.hide();\n            }\n            $.effects.restore(el, props);\n            $.effects.removeWrapper(el);\n            done();\n        });\n\n        // inject all the animations we just queued to be first in line (after \"inprogress\")\n        if (queuelen > 1) {\n            queue.splice.apply(queue,\n                [1, 0].concat(queue.splice(queuelen, anims + 1)));\n        }\n        el.dequeue();\n\n    };\n\n});\n","jquery/ui-modules/selectable.js":"/*!\n * jQuery UI Selectable - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/selectable/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/core',\n    'jquery-ui-modules/mouse'\n], function ($, undefined) {\n\n    $.widget(\"ui.selectable\", $.ui.mouse, {\n        version: \"1.10.4\",\n        options: {\n            appendTo: \"body\",\n            autoRefresh: true,\n            distance: 0,\n            filter: \"*\",\n            tolerance: \"touch\",\n\n            // callbacks\n            selected: null,\n            selecting: null,\n            start: null,\n            stop: null,\n            unselected: null,\n            unselecting: null\n        },\n        _create: function () {\n            var selectees,\n                that = this;\n\n            this.element.addClass(\"ui-selectable\");\n\n            this.dragged = false;\n\n            // cache selectee children based on filter\n            this.refresh = function () {\n                selectees = $(that.options.filter, that.element[0]);\n                selectees.addClass(\"ui-selectee\");\n                selectees.each(function () {\n                    var $this = $(this),\n                        pos = $this.offset();\n                    $.data(this, \"selectable-item\", {\n                        element: this,\n                        $element: $this,\n                        left: pos.left,\n                        top: pos.top,\n                        right: pos.left + $this.outerWidth(),\n                        bottom: pos.top + $this.outerHeight(),\n                        startselected: false,\n                        selected: $this.hasClass(\"ui-selected\"),\n                        selecting: $this.hasClass(\"ui-selecting\"),\n                        unselecting: $this.hasClass(\"ui-unselecting\")\n                    });\n                });\n            };\n            this.refresh();\n\n            this.selectees = selectees.addClass(\"ui-selectee\");\n\n            this._mouseInit();\n\n            this.helper = $(\"<div class='ui-selectable-helper'></div>\");\n        },\n\n        _destroy: function () {\n            this.selectees\n                .removeClass(\"ui-selectee\")\n                .removeData(\"selectable-item\");\n            this.element\n                .removeClass(\"ui-selectable ui-selectable-disabled\");\n            this._mouseDestroy();\n        },\n\n        _mouseStart: function (event) {\n            var that = this,\n                options = this.options;\n\n            this.opos = [event.pageX, event.pageY];\n\n            if (this.options.disabled) {\n                return;\n            }\n\n            this.selectees = $(options.filter, this.element[0]);\n\n            this._trigger(\"start\", event);\n\n            $(options.appendTo).append(this.helper);\n            // position helper (lasso)\n            this.helper.css({\n                \"left\": event.pageX,\n                \"top\": event.pageY,\n                \"width\": 0,\n                \"height\": 0\n            });\n\n            if (options.autoRefresh) {\n                this.refresh();\n            }\n\n            this.selectees.filter(\".ui-selected\").each(function () {\n                var selectee = $.data(this, \"selectable-item\");\n                selectee.startselected = true;\n                if (!event.metaKey && !event.ctrlKey) {\n                    selectee.$element.removeClass(\"ui-selected\");\n                    selectee.selected = false;\n                    selectee.$element.addClass(\"ui-unselecting\");\n                    selectee.unselecting = true;\n                    // selectable UNSELECTING callback\n                    that._trigger(\"unselecting\", event, {\n                        unselecting: selectee.element\n                    });\n                }\n            });\n\n            $(event.target).parents().addBack().each(function () {\n                var doSelect,\n                    selectee = $.data(this, \"selectable-item\");\n                if (selectee) {\n                    doSelect = (!event.metaKey && !event.ctrlKey) || !selectee.$element.hasClass(\"ui-selected\");\n                    selectee.$element\n                        .removeClass(doSelect ? \"ui-unselecting\" : \"ui-selected\")\n                        .addClass(doSelect ? \"ui-selecting\" : \"ui-unselecting\");\n                    selectee.unselecting = !doSelect;\n                    selectee.selecting = doSelect;\n                    selectee.selected = doSelect;\n                    // selectable (UN)SELECTING callback\n                    if (doSelect) {\n                        that._trigger(\"selecting\", event, {\n                            selecting: selectee.element\n                        });\n                    } else {\n                        that._trigger(\"unselecting\", event, {\n                            unselecting: selectee.element\n                        });\n                    }\n                    return false;\n                }\n            });\n\n        },\n\n        _mouseDrag: function (event) {\n\n            this.dragged = true;\n\n            if (this.options.disabled) {\n                return;\n            }\n\n            var tmp,\n                that = this,\n                options = this.options,\n                x1 = this.opos[0],\n                y1 = this.opos[1],\n                x2 = event.pageX,\n                y2 = event.pageY;\n\n            if (x1 > x2) {\n                tmp = x2;\n                x2 = x1;\n                x1 = tmp;\n            }\n            if (y1 > y2) {\n                tmp = y2;\n                y2 = y1;\n                y1 = tmp;\n            }\n            this.helper.css({left: x1, top: y1, width: x2 - x1, height: y2 - y1});\n\n            this.selectees.each(function () {\n                var selectee = $.data(this, \"selectable-item\"),\n                    hit = false;\n\n                //prevent helper from being selected if appendTo: selectable\n                if (!selectee || selectee.element === that.element[0]) {\n                    return;\n                }\n\n                if (options.tolerance === \"touch\") {\n                    hit = (!(selectee.left > x2 || selectee.right < x1 || selectee.top > y2 || selectee.bottom < y1));\n                } else if (options.tolerance === \"fit\") {\n                    hit = (selectee.left > x1 && selectee.right < x2 && selectee.top > y1 && selectee.bottom < y2);\n                }\n\n                if (hit) {\n                    // SELECT\n                    if (selectee.selected) {\n                        selectee.$element.removeClass(\"ui-selected\");\n                        selectee.selected = false;\n                    }\n                    if (selectee.unselecting) {\n                        selectee.$element.removeClass(\"ui-unselecting\");\n                        selectee.unselecting = false;\n                    }\n                    if (!selectee.selecting) {\n                        selectee.$element.addClass(\"ui-selecting\");\n                        selectee.selecting = true;\n                        // selectable SELECTING callback\n                        that._trigger(\"selecting\", event, {\n                            selecting: selectee.element\n                        });\n                    }\n                } else {\n                    // UNSELECT\n                    if (selectee.selecting) {\n                        if ((event.metaKey || event.ctrlKey) && selectee.startselected) {\n                            selectee.$element.removeClass(\"ui-selecting\");\n                            selectee.selecting = false;\n                            selectee.$element.addClass(\"ui-selected\");\n                            selectee.selected = true;\n                        } else {\n                            selectee.$element.removeClass(\"ui-selecting\");\n                            selectee.selecting = false;\n                            if (selectee.startselected) {\n                                selectee.$element.addClass(\"ui-unselecting\");\n                                selectee.unselecting = true;\n                            }\n                            // selectable UNSELECTING callback\n                            that._trigger(\"unselecting\", event, {\n                                unselecting: selectee.element\n                            });\n                        }\n                    }\n                    if (selectee.selected) {\n                        if (!event.metaKey && !event.ctrlKey && !selectee.startselected) {\n                            selectee.$element.removeClass(\"ui-selected\");\n                            selectee.selected = false;\n\n                            selectee.$element.addClass(\"ui-unselecting\");\n                            selectee.unselecting = true;\n                            // selectable UNSELECTING callback\n                            that._trigger(\"unselecting\", event, {\n                                unselecting: selectee.element\n                            });\n                        }\n                    }\n                }\n            });\n\n            return false;\n        },\n\n        _mouseStop: function (event) {\n            var that = this;\n\n            this.dragged = false;\n\n            $(\".ui-unselecting\", this.element[0]).each(function () {\n                var selectee = $.data(this, \"selectable-item\");\n                selectee.$element.removeClass(\"ui-unselecting\");\n                selectee.unselecting = false;\n                selectee.startselected = false;\n                that._trigger(\"unselected\", event, {\n                    unselected: selectee.element\n                });\n            });\n            $(\".ui-selecting\", this.element[0]).each(function () {\n                var selectee = $.data(this, \"selectable-item\");\n                selectee.$element.removeClass(\"ui-selecting\").addClass(\"ui-selected\");\n                selectee.selecting = false;\n                selectee.selected = true;\n                selectee.startselected = true;\n                that._trigger(\"selected\", event, {\n                    selected: selectee.element\n                });\n            });\n            this._trigger(\"stop\", event);\n\n            this.helper.remove();\n\n            return false;\n        }\n\n    });\n\n});\n","jquery/ui-modules/effect-drop.js":"/*!\n * jQuery UI Effects Drop - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/drop-effect/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($, undefined) {\n\n    $.effects.effect.drop = function (o, done) {\n\n        var el = $(this),\n            props = [\"position\", \"top\", \"bottom\", \"left\", \"right\", \"opacity\", \"height\", \"width\"],\n            mode = $.effects.setMode(el, o.mode || \"hide\"),\n            show = mode === \"show\",\n            direction = o.direction || \"left\",\n            ref = (direction === \"up\" || direction === \"down\") ? \"top\" : \"left\",\n            motion = (direction === \"up\" || direction === \"left\") ? \"pos\" : \"neg\",\n            animation = {\n                opacity: show ? 1 : 0\n            },\n            distance;\n\n        // Adjust\n        $.effects.save(el, props);\n        el.show();\n        $.effects.createWrapper(el);\n\n        distance = o.distance || el[ref === \"top\" ? \"outerHeight\" : \"outerWidth\"](true) / 2;\n\n        if (show) {\n            el\n                .css(\"opacity\", 0)\n                .css(ref, motion === \"pos\" ? -distance : distance);\n        }\n\n        // Animation\n        animation[ref] = (show ?\n            (motion === \"pos\" ? \"+=\" : \"-=\") :\n            (motion === \"pos\" ? \"-=\" : \"+=\")) +\n            distance;\n\n        // Animate\n        el.animate(animation, {\n            queue: false,\n            duration: o.duration,\n            easing: o.easing,\n            complete: function () {\n                if (mode === \"hide\") {\n                    el.hide();\n                }\n                $.effects.restore(el, props);\n                $.effects.removeWrapper(el);\n                done();\n            }\n        });\n    };\n\n});\n","jquery/ui-modules/slider.js":"/*!\n * jQuery UI Slider - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/slider/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/core',\n    'jquery-ui-modules/mouse'\n], function ($, undefined) {\n\n// number of pages in a slider\n// (how many times can you page up/down to go through the whole range)\n    var numPages = 5;\n\n    $.widget(\"ui.slider\", $.ui.mouse, {\n        version: \"1.10.4\",\n        widgetEventPrefix: \"slide\",\n\n        options: {\n            animate: false,\n            distance: 0,\n            max: 100,\n            min: 0,\n            orientation: \"horizontal\",\n            range: false,\n            step: 1,\n            value: 0,\n            values: null,\n\n            // callbacks\n            change: null,\n            slide: null,\n            start: null,\n            stop: null\n        },\n\n        _create: function () {\n            this._keySliding = false;\n            this._mouseSliding = false;\n            this._animateOff = true;\n            this._handleIndex = null;\n            this._detectOrientation();\n            this._mouseInit();\n\n            this.element\n                .addClass(\"ui-slider\" +\n                    \" ui-slider-\" + this.orientation +\n                    \" ui-widget\" +\n                    \" ui-widget-content\" +\n                    \" ui-corner-all\");\n\n            this._refresh();\n            this._setOption(\"disabled\", this.options.disabled);\n\n            this._animateOff = false;\n        },\n\n        _refresh: function () {\n            this._createRange();\n            this._createHandles();\n            this._setupEvents();\n            this._refreshValue();\n        },\n\n        _createHandles: function () {\n            var i, handleCount,\n                options = this.options,\n                existingHandles = this.element.find(\".ui-slider-handle\").addClass(\"ui-state-default ui-corner-all\"),\n                handle = \"<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>\",\n                handles = [];\n\n            handleCount = (options.values && options.values.length) || 1;\n\n            if (existingHandles.length > handleCount) {\n                existingHandles.slice(handleCount).remove();\n                existingHandles = existingHandles.slice(0, handleCount);\n            }\n\n            for (i = existingHandles.length; i < handleCount; i++) {\n                handles.push(handle);\n            }\n\n            this.handles = existingHandles.add($(handles.join(\"\")).appendTo(this.element));\n\n            this.handle = this.handles.eq(0);\n\n            this.handles.each(function (i) {\n                $(this).data(\"ui-slider-handle-index\", i);\n            });\n        },\n\n        _createRange: function () {\n            var options = this.options,\n                classes = \"\";\n\n            if (options.range) {\n                if (options.range === true) {\n                    if (!options.values) {\n                        options.values = [this._valueMin(), this._valueMin()];\n                    } else if (options.values.length && options.values.length !== 2) {\n                        options.values = [options.values[0], options.values[0]];\n                    } else if ($.isArray(options.values)) {\n                        options.values = options.values.slice(0);\n                    }\n                }\n\n                if (!this.range || !this.range.length) {\n                    this.range = $(\"<div></div>\")\n                        .appendTo(this.element);\n\n                    classes = \"ui-slider-range\" +\n                        // note: this isn't the most fittingly semantic framework class for this element,\n                        // but worked best visually with a variety of themes\n                        \" ui-widget-header ui-corner-all\";\n                } else {\n                    this.range.removeClass(\"ui-slider-range-min ui-slider-range-max\")\n                    // Handle range switching from true to min/max\n                        .css({\n                            \"left\": \"\",\n                            \"bottom\": \"\"\n                        });\n                }\n\n                this.range.addClass(classes +\n                    ((options.range === \"min\" || options.range === \"max\") ? \" ui-slider-range-\" + options.range : \"\"));\n            } else {\n                if (this.range) {\n                    this.range.remove();\n                }\n                this.range = null;\n            }\n        },\n\n        _setupEvents: function () {\n            var elements = this.handles.add(this.range).filter(\"a\");\n            this._off(elements);\n            this._on(elements, this._handleEvents);\n            this._hoverable(elements);\n            this._focusable(elements);\n        },\n\n        _destroy: function () {\n            this.handles.remove();\n            if (this.range) {\n                this.range.remove();\n            }\n\n            this.element\n                .removeClass(\"ui-slider\" +\n                    \" ui-slider-horizontal\" +\n                    \" ui-slider-vertical\" +\n                    \" ui-widget\" +\n                    \" ui-widget-content\" +\n                    \" ui-corner-all\");\n\n            this._mouseDestroy();\n        },\n\n        _mouseCapture: function (event) {\n            var position, normValue, distance, closestHandle, index, allowed, offset, mouseOverHandle,\n                that = this,\n                o = this.options;\n\n            if (o.disabled) {\n                return false;\n            }\n\n            this.elementSize = {\n                width: this.element.outerWidth(),\n                height: this.element.outerHeight()\n            };\n            this.elementOffset = this.element.offset();\n\n            position = {x: event.pageX, y: event.pageY};\n            normValue = this._normValueFromMouse(position);\n            distance = this._valueMax() - this._valueMin() + 1;\n            this.handles.each(function (i) {\n                var thisDistance = Math.abs(normValue - that.values(i));\n                if ((distance > thisDistance) ||\n                    (distance === thisDistance &&\n                        (i === that._lastChangedValue || that.values(i) === o.min))) {\n                    distance = thisDistance;\n                    closestHandle = $(this);\n                    index = i;\n                }\n            });\n\n            allowed = this._start(event, index);\n            if (allowed === false) {\n                return false;\n            }\n            this._mouseSliding = true;\n\n            this._handleIndex = index;\n\n            closestHandle\n                .addClass(\"ui-state-active\")\n                .focus();\n\n            offset = closestHandle.offset();\n            mouseOverHandle = !$(event.target).parents().addBack().is(\".ui-slider-handle\");\n            this._clickOffset = mouseOverHandle ? {left: 0, top: 0} : {\n                left: event.pageX - offset.left - (closestHandle.width() / 2),\n                top: event.pageY - offset.top -\n                    (closestHandle.height() / 2) -\n                    (parseInt(closestHandle.css(\"borderTopWidth\"), 10) || 0) -\n                    (parseInt(closestHandle.css(\"borderBottomWidth\"), 10) || 0) +\n                    (parseInt(closestHandle.css(\"marginTop\"), 10) || 0)\n            };\n\n            if (!this.handles.hasClass(\"ui-state-hover\")) {\n                this._slide(event, index, normValue);\n            }\n            this._animateOff = true;\n            return true;\n        },\n\n        _mouseStart: function () {\n            return true;\n        },\n\n        _mouseDrag: function (event) {\n            var position = {x: event.pageX, y: event.pageY},\n                normValue = this._normValueFromMouse(position);\n\n            this._slide(event, this._handleIndex, normValue);\n\n            return false;\n        },\n\n        _mouseStop: function (event) {\n            this.handles.removeClass(\"ui-state-active\");\n            this._mouseSliding = false;\n\n            this._stop(event, this._handleIndex);\n            this._change(event, this._handleIndex);\n\n            this._handleIndex = null;\n            this._clickOffset = null;\n            this._animateOff = false;\n\n            return false;\n        },\n\n        _detectOrientation: function () {\n            this.orientation = (this.options.orientation === \"vertical\") ? \"vertical\" : \"horizontal\";\n        },\n\n        _normValueFromMouse: function (position) {\n            var pixelTotal,\n                pixelMouse,\n                percentMouse,\n                valueTotal,\n                valueMouse;\n\n            if (this.orientation === \"horizontal\") {\n                pixelTotal = this.elementSize.width;\n                pixelMouse = position.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0);\n            } else {\n                pixelTotal = this.elementSize.height;\n                pixelMouse = position.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0);\n            }\n\n            percentMouse = (pixelMouse / pixelTotal);\n            if (percentMouse > 1) {\n                percentMouse = 1;\n            }\n            if (percentMouse < 0) {\n                percentMouse = 0;\n            }\n            if (this.orientation === \"vertical\") {\n                percentMouse = 1 - percentMouse;\n            }\n\n            valueTotal = this._valueMax() - this._valueMin();\n            valueMouse = this._valueMin() + percentMouse * valueTotal;\n\n            return this._trimAlignValue(valueMouse);\n        },\n\n        _start: function (event, index) {\n            var uiHash = {\n                handle: this.handles[index],\n                value: this.value()\n            };\n            if (this.options.values && this.options.values.length) {\n                uiHash.value = this.values(index);\n                uiHash.values = this.values();\n            }\n            return this._trigger(\"start\", event, uiHash);\n        },\n\n        _slide: function (event, index, newVal) {\n            var otherVal,\n                newValues,\n                allowed;\n\n            if (this.options.values && this.options.values.length) {\n                otherVal = this.values(index ? 0 : 1);\n\n                if ((this.options.values.length === 2 && this.options.range === true) &&\n                    ((index === 0 && newVal > otherVal) || (index === 1 && newVal < otherVal))\n                ) {\n                    newVal = otherVal;\n                }\n\n                if (newVal !== this.values(index)) {\n                    newValues = this.values();\n                    newValues[index] = newVal;\n                    // A slide can be canceled by returning false from the slide callback\n                    allowed = this._trigger(\"slide\", event, {\n                        handle: this.handles[index],\n                        value: newVal,\n                        values: newValues\n                    });\n                    otherVal = this.values(index ? 0 : 1);\n                    if (allowed !== false) {\n                        this.values(index, newVal);\n                    }\n                }\n            } else {\n                if (newVal !== this.value()) {\n                    // A slide can be canceled by returning false from the slide callback\n                    allowed = this._trigger(\"slide\", event, {\n                        handle: this.handles[index],\n                        value: newVal\n                    });\n                    if (allowed !== false) {\n                        this.value(newVal);\n                    }\n                }\n            }\n        },\n\n        _stop: function (event, index) {\n            var uiHash = {\n                handle: this.handles[index],\n                value: this.value()\n            };\n            if (this.options.values && this.options.values.length) {\n                uiHash.value = this.values(index);\n                uiHash.values = this.values();\n            }\n\n            this._trigger(\"stop\", event, uiHash);\n        },\n\n        _change: function (event, index) {\n            if (!this._keySliding && !this._mouseSliding) {\n                var uiHash = {\n                    handle: this.handles[index],\n                    value: this.value()\n                };\n                if (this.options.values && this.options.values.length) {\n                    uiHash.value = this.values(index);\n                    uiHash.values = this.values();\n                }\n\n                //store the last changed value index for reference when handles overlap\n                this._lastChangedValue = index;\n\n                this._trigger(\"change\", event, uiHash);\n            }\n        },\n\n        value: function (newValue) {\n            if (arguments.length) {\n                this.options.value = this._trimAlignValue(newValue);\n                this._refreshValue();\n                this._change(null, 0);\n                return;\n            }\n\n            return this._value();\n        },\n\n        values: function (index, newValue) {\n            var vals,\n                newValues,\n                i;\n\n            if (arguments.length > 1) {\n                this.options.values[index] = this._trimAlignValue(newValue);\n                this._refreshValue();\n                this._change(null, index);\n                return;\n            }\n\n            if (arguments.length) {\n                if ($.isArray(arguments[0])) {\n                    vals = this.options.values;\n                    newValues = arguments[0];\n                    for (i = 0; i < vals.length; i += 1) {\n                        vals[i] = this._trimAlignValue(newValues[i]);\n                        this._change(null, i);\n                    }\n                    this._refreshValue();\n                } else {\n                    if (this.options.values && this.options.values.length) {\n                        return this._values(index);\n                    } else {\n                        return this.value();\n                    }\n                }\n            } else {\n                return this._values();\n            }\n        },\n\n        _setOption: function (key, value) {\n            var i,\n                valsLength = 0;\n\n            if (key === \"range\" && this.options.range === true) {\n                if (value === \"min\") {\n                    this.options.value = this._values(0);\n                    this.options.values = null;\n                } else if (value === \"max\") {\n                    this.options.value = this._values(this.options.values.length - 1);\n                    this.options.values = null;\n                }\n            }\n\n            if ($.isArray(this.options.values)) {\n                valsLength = this.options.values.length;\n            }\n\n            $.Widget.prototype._setOption.apply(this, arguments);\n\n            switch (key) {\n                case \"orientation\":\n                    this._detectOrientation();\n                    this.element\n                        .removeClass(\"ui-slider-horizontal ui-slider-vertical\")\n                        .addClass(\"ui-slider-\" + this.orientation);\n                    this._refreshValue();\n                    break;\n                case \"value\":\n                    this._animateOff = true;\n                    this._refreshValue();\n                    this._change(null, 0);\n                    this._animateOff = false;\n                    break;\n                case \"values\":\n                    this._animateOff = true;\n                    this._refreshValue();\n                    for (i = 0; i < valsLength; i += 1) {\n                        this._change(null, i);\n                    }\n                    this._animateOff = false;\n                    break;\n                case \"min\":\n                case \"max\":\n                    this._animateOff = true;\n                    this._refreshValue();\n                    this._animateOff = false;\n                    break;\n                case \"range\":\n                    this._animateOff = true;\n                    this._refresh();\n                    this._animateOff = false;\n                    break;\n            }\n        },\n\n        //internal value getter\n        // _value() returns value trimmed by min and max, aligned by step\n        _value: function () {\n            var val = this.options.value;\n            val = this._trimAlignValue(val);\n\n            return val;\n        },\n\n        //internal values getter\n        // _values() returns array of values trimmed by min and max, aligned by step\n        // _values( index ) returns single value trimmed by min and max, aligned by step\n        _values: function (index) {\n            var val,\n                vals,\n                i;\n\n            if (arguments.length) {\n                val = this.options.values[index];\n                val = this._trimAlignValue(val);\n\n                return val;\n            } else if (this.options.values && this.options.values.length) {\n                // .slice() creates a copy of the array\n                // this copy gets trimmed by min and max and then returned\n                vals = this.options.values.slice();\n                for (i = 0; i < vals.length; i += 1) {\n                    vals[i] = this._trimAlignValue(vals[i]);\n                }\n\n                return vals;\n            } else {\n                return [];\n            }\n        },\n\n        // returns the step-aligned value that val is closest to, between (inclusive) min and max\n        _trimAlignValue: function (val) {\n            if (val <= this._valueMin()) {\n                return this._valueMin();\n            }\n            if (val >= this._valueMax()) {\n                return this._valueMax();\n            }\n            var step = (this.options.step > 0) ? this.options.step : 1,\n                valModStep = (val - this._valueMin()) % step,\n                alignValue = val - valModStep;\n\n            if (Math.abs(valModStep) * 2 >= step) {\n                alignValue += (valModStep > 0) ? step : (-step);\n            }\n\n            // Since JavaScript has problems with large floats, round\n            // the final value to 5 digits after the decimal point (see #4124)\n            return parseFloat(alignValue.toFixed(5));\n        },\n\n        _valueMin: function () {\n            return this.options.min;\n        },\n\n        _valueMax: function () {\n            return this.options.max;\n        },\n\n        _refreshValue: function () {\n            var lastValPercent, valPercent, value, valueMin, valueMax,\n                oRange = this.options.range,\n                o = this.options,\n                that = this,\n                animate = (!this._animateOff) ? o.animate : false,\n                _set = {};\n\n            if (this.options.values && this.options.values.length) {\n                this.handles.each(function (i) {\n                    valPercent = (that.values(i) - that._valueMin()) / (that._valueMax() - that._valueMin()) * 100;\n                    _set[that.orientation === \"horizontal\" ? \"left\" : \"bottom\"] = valPercent + \"%\";\n                    $(this).stop(1, 1)[animate ? \"animate\" : \"css\"](_set, o.animate);\n                    if (that.options.range === true) {\n                        if (that.orientation === \"horizontal\") {\n                            if (i === 0) {\n                                that.range.stop(1, 1)[animate ? \"animate\" : \"css\"]({left: valPercent + \"%\"}, o.animate);\n                            }\n                            if (i === 1) {\n                                that.range[animate ? \"animate\" : \"css\"]({width: (valPercent - lastValPercent) + \"%\"}, {\n                                    queue: false,\n                                    duration: o.animate\n                                });\n                            }\n                        } else {\n                            if (i === 0) {\n                                that.range.stop(1, 1)[animate ? \"animate\" : \"css\"]({bottom: (valPercent) + \"%\"}, o.animate);\n                            }\n                            if (i === 1) {\n                                that.range[animate ? \"animate\" : \"css\"]({height: (valPercent - lastValPercent) + \"%\"}, {\n                                    queue: false,\n                                    duration: o.animate\n                                });\n                            }\n                        }\n                    }\n                    lastValPercent = valPercent;\n                });\n            } else {\n                value = this.value();\n                valueMin = this._valueMin();\n                valueMax = this._valueMax();\n                valPercent = (valueMax !== valueMin) ?\n                    (value - valueMin) / (valueMax - valueMin) * 100 :\n                    0;\n                _set[this.orientation === \"horizontal\" ? \"left\" : \"bottom\"] = valPercent + \"%\";\n                this.handle.stop(1, 1)[animate ? \"animate\" : \"css\"](_set, o.animate);\n\n                if (oRange === \"min\" && this.orientation === \"horizontal\") {\n                    this.range.stop(1, 1)[animate ? \"animate\" : \"css\"]({width: valPercent + \"%\"}, o.animate);\n                }\n                if (oRange === \"max\" && this.orientation === \"horizontal\") {\n                    this.range[animate ? \"animate\" : \"css\"]({width: (100 - valPercent) + \"%\"}, {\n                        queue: false,\n                        duration: o.animate\n                    });\n                }\n                if (oRange === \"min\" && this.orientation === \"vertical\") {\n                    this.range.stop(1, 1)[animate ? \"animate\" : \"css\"]({height: valPercent + \"%\"}, o.animate);\n                }\n                if (oRange === \"max\" && this.orientation === \"vertical\") {\n                    this.range[animate ? \"animate\" : \"css\"]({height: (100 - valPercent) + \"%\"}, {\n                        queue: false,\n                        duration: o.animate\n                    });\n                }\n            }\n        },\n\n        _handleEvents: {\n            keydown: function (event) {\n                var allowed, curVal, newVal, step,\n                    index = $(event.target).data(\"ui-slider-handle-index\");\n\n                switch (event.keyCode) {\n                    case $.ui.keyCode.HOME:\n                    case $.ui.keyCode.END:\n                    case $.ui.keyCode.PAGE_UP:\n                    case $.ui.keyCode.PAGE_DOWN:\n                    case $.ui.keyCode.UP:\n                    case $.ui.keyCode.RIGHT:\n                    case $.ui.keyCode.DOWN:\n                    case $.ui.keyCode.LEFT:\n                        event.preventDefault();\n                        if (!this._keySliding) {\n                            this._keySliding = true;\n                            $(event.target).addClass(\"ui-state-active\");\n                            allowed = this._start(event, index);\n                            if (allowed === false) {\n                                return;\n                            }\n                        }\n                        break;\n                }\n\n                step = this.options.step;\n                if (this.options.values && this.options.values.length) {\n                    curVal = newVal = this.values(index);\n                } else {\n                    curVal = newVal = this.value();\n                }\n\n                switch (event.keyCode) {\n                    case $.ui.keyCode.HOME:\n                        newVal = this._valueMin();\n                        break;\n                    case $.ui.keyCode.END:\n                        newVal = this._valueMax();\n                        break;\n                    case $.ui.keyCode.PAGE_UP:\n                        newVal = this._trimAlignValue(curVal + ((this._valueMax() - this._valueMin()) / numPages));\n                        break;\n                    case $.ui.keyCode.PAGE_DOWN:\n                        newVal = this._trimAlignValue(curVal - ((this._valueMax() - this._valueMin()) / numPages));\n                        break;\n                    case $.ui.keyCode.UP:\n                    case $.ui.keyCode.RIGHT:\n                        if (curVal === this._valueMax()) {\n                            return;\n                        }\n                        newVal = this._trimAlignValue(curVal + step);\n                        break;\n                    case $.ui.keyCode.DOWN:\n                    case $.ui.keyCode.LEFT:\n                        if (curVal === this._valueMin()) {\n                            return;\n                        }\n                        newVal = this._trimAlignValue(curVal - step);\n                        break;\n                }\n\n                this._slide(event, index, newVal);\n            },\n            click: function (event) {\n                event.preventDefault();\n            },\n            keyup: function (event) {\n                var index = $(event.target).data(\"ui-slider-handle-index\");\n\n                if (this._keySliding) {\n                    this._keySliding = false;\n                    this._stop(event, index);\n                    this._change(event, index);\n                    $(event.target).removeClass(\"ui-state-active\");\n                }\n            }\n        }\n\n    });\n\n});\n","jquery/ui-modules/effect-pulsate.js":"/*!\n * jQuery UI Effects Pulsate - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/pulsate-effect/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($, undefined) {\n\n    $.effects.effect.pulsate = function (o, done) {\n        var elem = $(this),\n            mode = $.effects.setMode(elem, o.mode || \"show\"),\n            show = mode === \"show\",\n            hide = mode === \"hide\",\n            showhide = (show || mode === \"hide\"),\n\n            // showing or hiding leaves of the \"last\" animation\n            anims = ((o.times || 5) * 2) + (showhide ? 1 : 0),\n            duration = o.duration / anims,\n            animateTo = 0,\n            queue = elem.queue(),\n            queuelen = queue.length,\n            i;\n\n        if (show || !elem.is(\":visible\")) {\n            elem.css(\"opacity\", 0).show();\n            animateTo = 1;\n        }\n\n        // anims - 1 opacity \"toggles\"\n        for (i = 1; i < anims; i++) {\n            elem.animate({\n                opacity: animateTo\n            }, duration, o.easing);\n            animateTo = 1 - animateTo;\n        }\n\n        elem.animate({\n            opacity: animateTo\n        }, duration, o.easing);\n\n        elem.queue(function () {\n            if (hide) {\n                elem.hide();\n            }\n            done();\n        });\n\n        // We just queued up \"anims\" animations, we need to put them next in the queue\n        if (queuelen > 1) {\n            queue.splice.apply(queue,\n                [1, 0].concat(queue.splice(queuelen, anims + 1)));\n        }\n        elem.dequeue();\n    };\n\n});\n","jquery/ui-modules/progressbar.js":"/*!\n * jQuery UI Progressbar - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/progressbar/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/core',\n    'jquery-ui-modules/widget'\n], function ($, undefined) {\n\n    $.widget(\"ui.progressbar\", {\n        version: \"1.10.4\",\n        options: {\n            max: 100,\n            value: 0,\n\n            change: null,\n            complete: null\n        },\n\n        min: 0,\n\n        _create: function () {\n            // Constrain initial value\n            this.oldValue = this.options.value = this._constrainedValue();\n\n            this.element\n                .addClass(\"ui-progressbar ui-widget ui-widget-content ui-corner-all\")\n                .attr({\n                    // Only set static values, aria-valuenow and aria-valuemax are\n                    // set inside _refreshValue()\n                    role: \"progressbar\",\n                    \"aria-valuemin\": this.min\n                });\n\n            this.valueDiv = $(\"<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>\")\n                .appendTo(this.element);\n\n            this._refreshValue();\n        },\n\n        _destroy: function () {\n            this.element\n                .removeClass(\"ui-progressbar ui-widget ui-widget-content ui-corner-all\")\n                .removeAttr(\"role\")\n                .removeAttr(\"aria-valuemin\")\n                .removeAttr(\"aria-valuemax\")\n                .removeAttr(\"aria-valuenow\");\n\n            this.valueDiv.remove();\n        },\n\n        value: function (newValue) {\n            if (newValue === undefined) {\n                return this.options.value;\n            }\n\n            this.options.value = this._constrainedValue(newValue);\n            this._refreshValue();\n        },\n\n        _constrainedValue: function (newValue) {\n            if (newValue === undefined) {\n                newValue = this.options.value;\n            }\n\n            this.indeterminate = newValue === false;\n\n            // sanitize value\n            if (typeof newValue !== \"number\") {\n                newValue = 0;\n            }\n\n            return this.indeterminate ? false :\n                Math.min(this.options.max, Math.max(this.min, newValue));\n        },\n\n        _setOptions: function (options) {\n            // Ensure \"value\" option is set after other values (like max)\n            var value = options.value;\n            delete options.value;\n\n            this._super(options);\n\n            this.options.value = this._constrainedValue(value);\n            this._refreshValue();\n        },\n\n        _setOption: function (key, value) {\n            if (key === \"max\") {\n                // Don't allow a max less than min\n                value = Math.max(this.min, value);\n            }\n\n            this._super(key, value);\n        },\n\n        _percentage: function () {\n            return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min);\n        },\n\n        _refreshValue: function () {\n            var value = this.options.value,\n                percentage = this._percentage();\n\n            this.valueDiv\n                .toggle(this.indeterminate || value > this.min)\n                .toggleClass(\"ui-corner-right\", value === this.options.max)\n                .width(percentage.toFixed(0) + \"%\");\n\n            this.element.toggleClass(\"ui-progressbar-indeterminate\", this.indeterminate);\n\n            if (this.indeterminate) {\n                this.element.removeAttr(\"aria-valuenow\");\n                if (!this.overlayDiv) {\n                    this.overlayDiv = $(\"<div class='ui-progressbar-overlay'></div>\").appendTo(this.valueDiv);\n                }\n            } else {\n                this.element.attr({\n                    \"aria-valuemax\": this.options.max,\n                    \"aria-valuenow\": value\n                });\n                if (this.overlayDiv) {\n                    this.overlayDiv.remove();\n                    this.overlayDiv = null;\n                }\n            }\n\n            if (this.oldValue !== value) {\n                this.oldValue = value;\n                this._trigger(\"change\");\n            }\n            if (value === this.options.max) {\n                this._trigger(\"complete\");\n            }\n        }\n    });\n\n});\n","jquery/ui-modules/droppable.js":"/*!\n * jQuery UI Droppable - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/droppable/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/draggable'\n], function ($, undefined) {\n\n    function isOverAxis(x, reference, size) {\n        return (x > reference) && (x < (reference + size));\n    }\n\n    $.widget(\"ui.droppable\", {\n        version: \"1.10.4\",\n        widgetEventPrefix: \"drop\",\n        options: {\n            accept: \"*\",\n            activeClass: false,\n            addClasses: true,\n            greedy: false,\n            hoverClass: false,\n            scope: \"default\",\n            tolerance: \"intersect\",\n\n            // callbacks\n            activate: null,\n            deactivate: null,\n            drop: null,\n            out: null,\n            over: null\n        },\n        _create: function () {\n\n            var proportions,\n                o = this.options,\n                accept = o.accept;\n\n            this.isover = false;\n            this.isout = true;\n\n            this.accept = $.isFunction(accept) ? accept : function (d) {\n                return d.is(accept);\n            };\n\n            this.proportions = function ( /* valueToWrite */) {\n                if (arguments.length) {\n                    // Store the droppable's proportions\n                    proportions = arguments[0];\n                } else {\n                    // Retrieve or derive the droppable's proportions\n                    return proportions ?\n                        proportions :\n                        proportions = {\n                            width: this.element[0].offsetWidth,\n                            height: this.element[0].offsetHeight\n                        };\n                }\n            };\n\n            // Add the reference and positions to the manager\n            $.ui.ddmanager.droppables[o.scope] = $.ui.ddmanager.droppables[o.scope] || [];\n            $.ui.ddmanager.droppables[o.scope].push(this);\n\n            (o.addClasses && this.element.addClass(\"ui-droppable\"));\n\n        },\n\n        _destroy: function () {\n            var i = 0,\n                drop = $.ui.ddmanager.droppables[this.options.scope];\n\n            for (; i < drop.length; i++) {\n                if (drop[i] === this) {\n                    drop.splice(i, 1);\n                }\n            }\n\n            this.element.removeClass(\"ui-droppable ui-droppable-disabled\");\n        },\n\n        _setOption: function (key, value) {\n\n            if (key === \"accept\") {\n                this.accept = $.isFunction(value) ? value : function (d) {\n                    return d.is(value);\n                };\n            }\n            $.Widget.prototype._setOption.apply(this, arguments);\n        },\n\n        _activate: function (event) {\n            var draggable = $.ui.ddmanager.current;\n            if (this.options.activeClass) {\n                this.element.addClass(this.options.activeClass);\n            }\n            if (draggable) {\n                this._trigger(\"activate\", event, this.ui(draggable));\n            }\n        },\n\n        _deactivate: function (event) {\n            var draggable = $.ui.ddmanager.current;\n            if (this.options.activeClass) {\n                this.element.removeClass(this.options.activeClass);\n            }\n            if (draggable) {\n                this._trigger(\"deactivate\", event, this.ui(draggable));\n            }\n        },\n\n        _over: function (event) {\n\n            var draggable = $.ui.ddmanager.current;\n\n            // Bail if draggable and droppable are same element\n            if (!draggable || (draggable.currentItem || draggable.element)[0] === this.element[0]) {\n                return;\n            }\n\n            if (this.accept.call(this.element[0], (draggable.currentItem || draggable.element))) {\n                if (this.options.hoverClass) {\n                    this.element.addClass(this.options.hoverClass);\n                }\n                this._trigger(\"over\", event, this.ui(draggable));\n            }\n\n        },\n\n        _out: function (event) {\n\n            var draggable = $.ui.ddmanager.current;\n\n            // Bail if draggable and droppable are same element\n            if (!draggable || (draggable.currentItem || draggable.element)[0] === this.element[0]) {\n                return;\n            }\n\n            if (this.accept.call(this.element[0], (draggable.currentItem || draggable.element))) {\n                if (this.options.hoverClass) {\n                    this.element.removeClass(this.options.hoverClass);\n                }\n                this._trigger(\"out\", event, this.ui(draggable));\n            }\n\n        },\n\n        _drop: function (event, custom) {\n\n            var draggable = custom || $.ui.ddmanager.current,\n                childrenIntersection = false;\n\n            // Bail if draggable and droppable are same element\n            if (!draggable || (draggable.currentItem || draggable.element)[0] === this.element[0]) {\n                return false;\n            }\n\n            this.element.find(\":data(ui-droppable)\").not(\".ui-draggable-dragging\").each(function () {\n                var inst = $.data(this, \"ui-droppable\");\n                if (\n                    inst.options.greedy &&\n                    !inst.options.disabled &&\n                    inst.options.scope === draggable.options.scope &&\n                    inst.accept.call(inst.element[0], (draggable.currentItem || draggable.element)) &&\n                    $.ui.intersect(draggable, $.extend(inst, {offset: inst.element.offset()}), inst.options.tolerance)\n                ) {\n                    childrenIntersection = true;\n                    return false;\n                }\n            });\n            if (childrenIntersection) {\n                return false;\n            }\n\n            if (this.accept.call(this.element[0], (draggable.currentItem || draggable.element))) {\n                if (this.options.activeClass) {\n                    this.element.removeClass(this.options.activeClass);\n                }\n                if (this.options.hoverClass) {\n                    this.element.removeClass(this.options.hoverClass);\n                }\n                this._trigger(\"drop\", event, this.ui(draggable));\n                return this.element;\n            }\n\n            return false;\n\n        },\n\n        ui: function (c) {\n            return {\n                draggable: (c.currentItem || c.element),\n                helper: c.helper,\n                position: c.position,\n                offset: c.positionAbs\n            };\n        }\n\n    });\n\n    $.ui.intersect = function (draggable, droppable, toleranceMode) {\n\n        if (!droppable.offset) {\n            return false;\n        }\n\n        var draggableLeft, draggableTop,\n            x1 = (draggable.positionAbs || draggable.position.absolute).left,\n            y1 = (draggable.positionAbs || draggable.position.absolute).top,\n            x2 = x1 + draggable.helperProportions.width,\n            y2 = y1 + draggable.helperProportions.height,\n            l = droppable.offset.left,\n            t = droppable.offset.top,\n            r = l + droppable.proportions().width,\n            b = t + droppable.proportions().height;\n\n        switch (toleranceMode) {\n            case \"fit\":\n                return (l <= x1 && x2 <= r && t <= y1 && y2 <= b);\n            case \"intersect\":\n                return (l < x1 + (draggable.helperProportions.width / 2) && // Right Half\n                    x2 - (draggable.helperProportions.width / 2) < r && // Left Half\n                    t < y1 + (draggable.helperProportions.height / 2) && // Bottom Half\n                    y2 - (draggable.helperProportions.height / 2) < b); // Top Half\n            case \"pointer\":\n                draggableLeft = ((draggable.positionAbs || draggable.position.absolute).left + (draggable.clickOffset || draggable.offset.click).left);\n                draggableTop = ((draggable.positionAbs || draggable.position.absolute).top + (draggable.clickOffset || draggable.offset.click).top);\n                return isOverAxis(draggableTop, t, droppable.proportions().height) && isOverAxis(draggableLeft, l, droppable.proportions().width);\n            case \"touch\":\n                return (\n                    (y1 >= t && y1 <= b) ||\t// Top edge touching\n                    (y2 >= t && y2 <= b) ||\t// Bottom edge touching\n                    (y1 < t && y2 > b)\t\t// Surrounded vertically\n                ) && (\n                    (x1 >= l && x1 <= r) ||\t// Left edge touching\n                    (x2 >= l && x2 <= r) ||\t// Right edge touching\n                    (x1 < l && x2 > r)\t\t// Surrounded horizontally\n                );\n            default:\n                return false;\n        }\n\n    };\n\n    /*\n        This manager tracks offsets of draggables and droppables\n    */\n    $.ui.ddmanager = {\n        current: null,\n        droppables: {\"default\": []},\n        prepareOffsets: function (t, event) {\n\n            var i, j,\n                m = $.ui.ddmanager.droppables[t.options.scope] || [],\n                type = event ? event.type : null, // workaround for #2317\n                list = (t.currentItem || t.element).find(\":data(ui-droppable)\").addBack();\n\n            droppablesLoop: for (i = 0; i < m.length; i++) {\n\n                //No disabled and non-accepted\n                if (m[i].options.disabled || (t && !m[i].accept.call(m[i].element[0], (t.currentItem || t.element)))) {\n                    continue;\n                }\n\n                // Filter out elements in the current dragged item\n                for (j = 0; j < list.length; j++) {\n                    if (list[j] === m[i].element[0]) {\n                        m[i].proportions().height = 0;\n                        continue droppablesLoop;\n                    }\n                }\n\n                m[i].visible = m[i].element.css(\"display\") !== \"none\";\n                if (!m[i].visible) {\n                    continue;\n                }\n\n                //Activate the droppable if used directly from draggables\n                if (type === \"mousedown\") {\n                    m[i]._activate.call(m[i], event);\n                }\n\n                m[i].offset = m[i].element.offset();\n                m[i].proportions({width: m[i].element[0].offsetWidth, height: m[i].element[0].offsetHeight});\n\n            }\n\n        },\n        drop: function (draggable, event) {\n\n            var dropped = false;\n            // Create a copy of the droppables in case the list changes during the drop (#9116)\n            $.each(($.ui.ddmanager.droppables[draggable.options.scope] || []).slice(), function () {\n\n                if (!this.options) {\n                    return;\n                }\n                if (!this.options.disabled && this.visible && $.ui.intersect(draggable, this, this.options.tolerance)) {\n                    dropped = this._drop.call(this, event) || dropped;\n                }\n\n                if (!this.options.disabled && this.visible && this.accept.call(this.element[0], (draggable.currentItem || draggable.element))) {\n                    this.isout = true;\n                    this.isover = false;\n                    this._deactivate.call(this, event);\n                }\n\n            });\n            return dropped;\n\n        },\n        dragStart: function (draggable, event) {\n            //Listen for scrolling so that if the dragging causes scrolling the position of the droppables can be recalculated (see #5003)\n            draggable.element.parentsUntil(\"body\").bind(\"scroll.droppable\", function () {\n                if (!draggable.options.refreshPositions) {\n                    $.ui.ddmanager.prepareOffsets(draggable, event);\n                }\n            });\n        },\n        drag: function (draggable, event) {\n\n            //If you have a highly dynamic page, you might try this option. It renders positions every time you move the mouse.\n            if (draggable.options.refreshPositions) {\n                $.ui.ddmanager.prepareOffsets(draggable, event);\n            }\n\n            //Run through all droppables and check their positions based on specific tolerance options\n            $.each($.ui.ddmanager.droppables[draggable.options.scope] || [], function () {\n\n                if (this.options.disabled || this.greedyChild || !this.visible) {\n                    return;\n                }\n\n                var parentInstance, scope, parent,\n                    intersects = $.ui.intersect(draggable, this, this.options.tolerance),\n                    c = !intersects && this.isover ? \"isout\" : (intersects && !this.isover ? \"isover\" : null);\n                if (!c) {\n                    return;\n                }\n\n                if (this.options.greedy) {\n                    // find droppable parents with same scope\n                    scope = this.options.scope;\n                    parent = this.element.parents(\":data(ui-droppable)\").filter(function () {\n                        return $.data(this, \"ui-droppable\").options.scope === scope;\n                    });\n\n                    if (parent.length) {\n                        parentInstance = $.data(parent[0], \"ui-droppable\");\n                        parentInstance.greedyChild = (c === \"isover\");\n                    }\n                }\n\n                // we just moved into a greedy child\n                if (parentInstance && c === \"isover\") {\n                    parentInstance.isover = false;\n                    parentInstance.isout = true;\n                    parentInstance._out.call(parentInstance, event);\n                }\n\n                this[c] = true;\n                this[c === \"isout\" ? \"isover\" : \"isout\"] = false;\n                this[c === \"isover\" ? \"_over\" : \"_out\"].call(this, event);\n\n                // we just moved out of a greedy child\n                if (parentInstance && c === \"isout\") {\n                    parentInstance.isout = false;\n                    parentInstance.isover = true;\n                    parentInstance._over.call(parentInstance, event);\n                }\n            });\n\n        },\n        dragStop: function (draggable, event) {\n            draggable.element.parentsUntil(\"body\").unbind(\"scroll.droppable\");\n            //Call prepareOffsets one final time since IE does not fire return scroll events when overflow was caused by drag (see #5003)\n            if (!draggable.options.refreshPositions) {\n                $.ui.ddmanager.prepareOffsets(draggable, event);\n            }\n        }\n    };\n\n});\n","jquery/ui-modules/timepicker.js":"/*! jQuery Timepicker Addon - v1.4.3 - 2013-11-30\n* http://trentrichardson.com/examples/timepicker\n* Copyright (c) 2013 Trent Richardson; Licensed MIT */\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([\n            \"jquery\",\n            \"jquery-ui-modules/datepicker\",\n            \"jquery-ui-modules/slider\"\n        ], factory);\n    } else {\n        factory(jQuery);\n    }\n}(function ($) {\n\n    /*\n    * Lets not redefine timepicker, Prevent \"Uncaught RangeError: Maximum call stack size exceeded\"\n    */\n    $.ui.timepicker = $.ui.timepicker || {};\n    if ($.ui.timepicker.version) {\n        return;\n    }\n\n    /*\n    * Extend jQueryUI, get it started with our version number\n    */\n    $.extend($.ui, {\n        timepicker: {\n            version: \"1.4.3\"\n        }\n    });\n\n    /*\n    * Timepicker manager.\n    * Use the singleton instance of this class, $.timepicker, to interact with the time picker.\n    * Settings for (groups of) time pickers are maintained in an instance object,\n    * allowing multiple different settings on the same page.\n    */\n    var Timepicker = function () {\n        this.regional = []; // Available regional settings, indexed by language code\n        this.regional[''] = { // Default regional settings\n            currentText: 'Now',\n            closeText: 'Done',\n            amNames: ['AM', 'A'],\n            pmNames: ['PM', 'P'],\n            timeFormat: 'HH:mm',\n            timeSuffix: '',\n            timeOnlyTitle: 'Choose Time',\n            timeText: 'Time',\n            hourText: 'Hour',\n            minuteText: 'Minute',\n            secondText: 'Second',\n            millisecText: 'Millisecond',\n            microsecText: 'Microsecond',\n            timezoneText: 'Time Zone',\n            isRTL: false\n        };\n        this._defaults = { // Global defaults for all the datetime picker instances\n            showButtonPanel: true,\n            timeOnly: false,\n            showHour: null,\n            showMinute: null,\n            showSecond: null,\n            showMillisec: null,\n            showMicrosec: null,\n            showTimezone: null,\n            showTime: true,\n            stepHour: 1,\n            stepMinute: 1,\n            stepSecond: 1,\n            stepMillisec: 1,\n            stepMicrosec: 1,\n            hour: 0,\n            minute: 0,\n            second: 0,\n            millisec: 0,\n            microsec: 0,\n            timezone: null,\n            hourMin: 0,\n            minuteMin: 0,\n            secondMin: 0,\n            millisecMin: 0,\n            microsecMin: 0,\n            hourMax: 23,\n            minuteMax: 59,\n            secondMax: 59,\n            millisecMax: 999,\n            microsecMax: 999,\n            minDateTime: null,\n            maxDateTime: null,\n            onSelect: null,\n            hourGrid: 0,\n            minuteGrid: 0,\n            secondGrid: 0,\n            millisecGrid: 0,\n            microsecGrid: 0,\n            alwaysSetTime: true,\n            separator: ' ',\n            altFieldTimeOnly: true,\n            altTimeFormat: null,\n            altSeparator: null,\n            altTimeSuffix: null,\n            pickerTimeFormat: null,\n            pickerTimeSuffix: null,\n            showTimepicker: true,\n            timezoneList: null,\n            addSliderAccess: false,\n            sliderAccessArgs: null,\n            controlType: 'slider',\n            defaultValue: null,\n            parse: 'strict'\n        };\n        $.extend(this._defaults, this.regional['']);\n    };\n\n    $.extend(Timepicker.prototype, {\n        $input: null,\n        $altInput: null,\n        $timeObj: null,\n        inst: null,\n        hour_slider: null,\n        minute_slider: null,\n        second_slider: null,\n        millisec_slider: null,\n        microsec_slider: null,\n        timezone_select: null,\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisec: 0,\n        microsec: 0,\n        timezone: null,\n        hourMinOriginal: null,\n        minuteMinOriginal: null,\n        secondMinOriginal: null,\n        millisecMinOriginal: null,\n        microsecMinOriginal: null,\n        hourMaxOriginal: null,\n        minuteMaxOriginal: null,\n        secondMaxOriginal: null,\n        millisecMaxOriginal: null,\n        microsecMaxOriginal: null,\n        ampm: '',\n        formattedDate: '',\n        formattedTime: '',\n        formattedDateTime: '',\n        timezoneList: null,\n        units: ['hour', 'minute', 'second', 'millisec', 'microsec'],\n        support: {},\n        control: null,\n\n        /*\n        * Override the default settings for all instances of the time picker.\n        * @param  {Object} settings  object - the new settings to use as defaults (anonymous object)\n        * @return {Object} the manager object\n        */\n        setDefaults: function (settings) {\n            extendRemove(this._defaults, settings || {});\n            return this;\n        },\n\n        /*\n        * Create a new Timepicker instance\n        */\n        _newInst: function ($input, opts) {\n            var tp_inst = new Timepicker(),\n                inlineSettings = {},\n                fns = {},\n                overrides, i;\n\n            for (var attrName in this._defaults) {\n                if (this._defaults.hasOwnProperty(attrName)) {\n                    var attrValue = $input.attr('time:' + attrName);\n                    if (attrValue) {\n                        try {\n                            inlineSettings[attrName] = eval(attrValue);\n                        } catch (err) {\n                            inlineSettings[attrName] = attrValue;\n                        }\n                    }\n                }\n            }\n\n            overrides = {\n                beforeShow: function (input, dp_inst) {\n                    if ($.isFunction(tp_inst._defaults.evnts.beforeShow)) {\n                        return tp_inst._defaults.evnts.beforeShow.call($input[0], input, dp_inst, tp_inst);\n                    }\n                },\n                onChangeMonthYear: function (year, month, dp_inst) {\n                    // Update the time as well : this prevents the time from disappearing from the $input field.\n                    tp_inst._updateDateTime(dp_inst);\n                    if ($.isFunction(tp_inst._defaults.evnts.onChangeMonthYear)) {\n                        tp_inst._defaults.evnts.onChangeMonthYear.call($input[0], year, month, dp_inst, tp_inst);\n                    }\n                },\n                onClose: function (dateText, dp_inst) {\n                    if (tp_inst.timeDefined === true && $input.val() !== '') {\n                        tp_inst._updateDateTime(dp_inst);\n                    }\n                    if ($.isFunction(tp_inst._defaults.evnts.onClose)) {\n                        tp_inst._defaults.evnts.onClose.call($input[0], dateText, dp_inst, tp_inst);\n                    }\n                }\n            };\n            for (i in overrides) {\n                if (overrides.hasOwnProperty(i)) {\n                    fns[i] = opts[i] || null;\n                }\n            }\n\n            tp_inst._defaults = $.extend({}, this._defaults, inlineSettings, opts, overrides, {\n                evnts: fns,\n                timepicker: tp_inst // add timepicker as a property of datepicker: $.datepicker._get(dp_inst, 'timepicker');\n            });\n            tp_inst.amNames = $.map(tp_inst._defaults.amNames, function (val) {\n                return val.toUpperCase();\n            });\n            tp_inst.pmNames = $.map(tp_inst._defaults.pmNames, function (val) {\n                return val.toUpperCase();\n            });\n\n            // detect which units are supported\n            tp_inst.support = detectSupport(\n                tp_inst._defaults.timeFormat +\n                (tp_inst._defaults.pickerTimeFormat ? tp_inst._defaults.pickerTimeFormat : '') +\n                (tp_inst._defaults.altTimeFormat ? tp_inst._defaults.altTimeFormat : ''));\n\n            // controlType is string - key to our this._controls\n            if (typeof (tp_inst._defaults.controlType) === 'string') {\n                if (tp_inst._defaults.controlType === 'slider' && typeof ($.ui.slider) === 'undefined') {\n                    tp_inst._defaults.controlType = 'select';\n                }\n                tp_inst.control = tp_inst._controls[tp_inst._defaults.controlType];\n            }\n            // controlType is an object and must implement create, options, value methods\n            else {\n                tp_inst.control = tp_inst._defaults.controlType;\n            }\n\n            // prep the timezone options\n            var timezoneList = [-720, -660, -600, -570, -540, -480, -420, -360, -300, -270, -240, -210, -180, -120, -60,\n                0, 60, 120, 180, 210, 240, 270, 300, 330, 345, 360, 390, 420, 480, 525, 540, 570, 600, 630, 660, 690, 720, 765, 780, 840];\n            if (tp_inst._defaults.timezoneList !== null) {\n                timezoneList = tp_inst._defaults.timezoneList;\n            }\n            var tzl = timezoneList.length, tzi = 0, tzv = null;\n            if (tzl > 0 && typeof timezoneList[0] !== 'object') {\n                for (; tzi < tzl; tzi++) {\n                    tzv = timezoneList[tzi];\n                    timezoneList[tzi] = {\n                        value: tzv,\n                        label: $.timepicker.timezoneOffsetString(tzv, tp_inst.support.iso8601)\n                    };\n                }\n            }\n            tp_inst._defaults.timezoneList = timezoneList;\n\n            // set the default units\n            tp_inst.timezone = tp_inst._defaults.timezone !== null ? $.timepicker.timezoneOffsetNumber(tp_inst._defaults.timezone) :\n                ((new Date()).getTimezoneOffset() * -1);\n            tp_inst.hour = tp_inst._defaults.hour < tp_inst._defaults.hourMin ? tp_inst._defaults.hourMin :\n                tp_inst._defaults.hour > tp_inst._defaults.hourMax ? tp_inst._defaults.hourMax : tp_inst._defaults.hour;\n            tp_inst.minute = tp_inst._defaults.minute < tp_inst._defaults.minuteMin ? tp_inst._defaults.minuteMin :\n                tp_inst._defaults.minute > tp_inst._defaults.minuteMax ? tp_inst._defaults.minuteMax : tp_inst._defaults.minute;\n            tp_inst.second = tp_inst._defaults.second < tp_inst._defaults.secondMin ? tp_inst._defaults.secondMin :\n                tp_inst._defaults.second > tp_inst._defaults.secondMax ? tp_inst._defaults.secondMax : tp_inst._defaults.second;\n            tp_inst.millisec = tp_inst._defaults.millisec < tp_inst._defaults.millisecMin ? tp_inst._defaults.millisecMin :\n                tp_inst._defaults.millisec > tp_inst._defaults.millisecMax ? tp_inst._defaults.millisecMax : tp_inst._defaults.millisec;\n            tp_inst.microsec = tp_inst._defaults.microsec < tp_inst._defaults.microsecMin ? tp_inst._defaults.microsecMin :\n                tp_inst._defaults.microsec > tp_inst._defaults.microsecMax ? tp_inst._defaults.microsecMax : tp_inst._defaults.microsec;\n            tp_inst.ampm = '';\n            tp_inst.$input = $input;\n\n            if (tp_inst._defaults.altField) {\n                tp_inst.$altInput = $(tp_inst._defaults.altField).css({\n                    cursor: 'pointer'\n                }).focus(function () {\n                    $input.trigger(\"focus\");\n                });\n            }\n\n            if (tp_inst._defaults.minDate === 0 || tp_inst._defaults.minDateTime === 0) {\n                tp_inst._defaults.minDate = new Date();\n            }\n            if (tp_inst._defaults.maxDate === 0 || tp_inst._defaults.maxDateTime === 0) {\n                tp_inst._defaults.maxDate = new Date();\n            }\n\n            // datepicker needs minDate/maxDate, timepicker needs minDateTime/maxDateTime..\n            if (tp_inst._defaults.minDate !== undefined && tp_inst._defaults.minDate instanceof Date) {\n                tp_inst._defaults.minDateTime = new Date(tp_inst._defaults.minDate.getTime());\n            }\n            if (tp_inst._defaults.minDateTime !== undefined && tp_inst._defaults.minDateTime instanceof Date) {\n                tp_inst._defaults.minDate = new Date(tp_inst._defaults.minDateTime.getTime());\n            }\n            if (tp_inst._defaults.maxDate !== undefined && tp_inst._defaults.maxDate instanceof Date) {\n                tp_inst._defaults.maxDateTime = new Date(tp_inst._defaults.maxDate.getTime());\n            }\n            if (tp_inst._defaults.maxDateTime !== undefined && tp_inst._defaults.maxDateTime instanceof Date) {\n                tp_inst._defaults.maxDate = new Date(tp_inst._defaults.maxDateTime.getTime());\n            }\n            tp_inst.$input.bind('focus', function () {\n                tp_inst._onFocus();\n            });\n\n            return tp_inst;\n        },\n\n        /*\n        * add our sliders to the calendar\n        */\n        _addTimePicker: function (dp_inst) {\n            var currDT = (this.$altInput && this._defaults.altFieldTimeOnly) ? this.$input.val() + ' ' + this.$altInput.val() : this.$input.val();\n\n            this.timeDefined = this._parseTime(currDT);\n            this._limitMinMaxDateTime(dp_inst, false);\n            this._injectTimePicker();\n        },\n\n        /*\n        * parse the time string from input value or _setTime\n        */\n        _parseTime: function (timeString, withDate) {\n            if (!this.inst) {\n                this.inst = $.datepicker._getInst(this.$input[0]);\n            }\n\n            if (withDate || !this._defaults.timeOnly) {\n                var dp_dateFormat = $.datepicker._get(this.inst, 'dateFormat');\n                try {\n                    var parseRes = parseDateTimeInternal(dp_dateFormat, this._defaults.timeFormat, timeString, $.datepicker._getFormatConfig(this.inst), this._defaults);\n                    if (!parseRes.timeObj) {\n                        return false;\n                    }\n                    $.extend(this, parseRes.timeObj);\n                } catch (err) {\n                    $.timepicker.log(\"Error parsing the date/time string: \" + err +\n                        \"\\ndate/time string = \" + timeString +\n                        \"\\ntimeFormat = \" + this._defaults.timeFormat +\n                        \"\\ndateFormat = \" + dp_dateFormat);\n                    return false;\n                }\n                return true;\n            } else {\n                var timeObj = $.datepicker.parseTime(this._defaults.timeFormat, timeString, this._defaults);\n                if (!timeObj) {\n                    return false;\n                }\n                $.extend(this, timeObj);\n                return true;\n            }\n        },\n\n        /*\n        * generate and inject html for timepicker into ui datepicker\n        */\n        _injectTimePicker: function () {\n            var $dp = this.inst.dpDiv,\n                o = this.inst.settings,\n                tp_inst = this,\n                litem = '',\n                uitem = '',\n                show = null,\n                max = {},\n                gridSize = {},\n                size = null,\n                i = 0,\n                l = 0;\n\n            // Prevent displaying twice\n            if ($dp.find(\"div.ui-timepicker-div\").length === 0 && o.showTimepicker) {\n                var noDisplay = ' style=\"display:none;\"',\n                    html = '<div class=\"ui-timepicker-div' + (o.isRTL ? ' ui-timepicker-rtl' : '') + '\"><dl>' + '<dt class=\"ui_tpicker_time_label\"' + ((o.showTime) ? '' : noDisplay) + '>' + o.timeText + '</dt>' +\n                        '<dd class=\"ui_tpicker_time\"' + ((o.showTime) ? '' : noDisplay) + '></dd>';\n\n                // Create the markup\n                for (i = 0, l = this.units.length; i < l; i++) {\n                    litem = this.units[i];\n                    uitem = litem.substr(0, 1).toUpperCase() + litem.substr(1);\n                    show = o['show' + uitem] !== null ? o['show' + uitem] : this.support[litem];\n\n                    // Added by Peter Medeiros:\n                    // - Figure out what the hour/minute/second max should be based on the step values.\n                    // - Example: if stepMinute is 15, then minMax is 45.\n                    max[litem] = parseInt((o[litem + 'Max'] - ((o[litem + 'Max'] - o[litem + 'Min']) % o['step' + uitem])), 10);\n                    gridSize[litem] = 0;\n\n                    html += '<dt class=\"ui_tpicker_' + litem + '_label\"' + (show ? '' : noDisplay) + '>' + o[litem + 'Text'] + '</dt>' +\n                        '<dd class=\"ui_tpicker_' + litem + '\"><div class=\"ui_tpicker_' + litem + '_slider\"' + (show ? '' : noDisplay) + '></div>';\n\n                    if (show && o[litem + 'Grid'] > 0) {\n                        html += '<div style=\"padding-left: 1px\"><table class=\"ui-tpicker-grid-label\"><tr>';\n\n                        if (litem === 'hour') {\n                            for (var h = o[litem + 'Min']; h <= max[litem]; h += parseInt(o[litem + 'Grid'], 10)) {\n                                gridSize[litem]++;\n                                var tmph = $.datepicker.formatTime(this.support.ampm ? 'hht' : 'HH', {hour: h}, o);\n                                html += '<td data-for=\"' + litem + '\">' + tmph + '</td>';\n                            }\n                        } else {\n                            for (var m = o[litem + 'Min']; m <= max[litem]; m += parseInt(o[litem + 'Grid'], 10)) {\n                                gridSize[litem]++;\n                                html += '<td data-for=\"' + litem + '\">' + ((m < 10) ? '0' : '') + m + '</td>';\n                            }\n                        }\n\n                        html += '</tr></table></div>';\n                    }\n                    html += '</dd>';\n                }\n\n                // Timezone\n                var showTz = o.showTimezone !== null ? o.showTimezone : this.support.timezone;\n                html += '<dt class=\"ui_tpicker_timezone_label\"' + (showTz ? '' : noDisplay) + '>' + o.timezoneText + '</dt>';\n                html += '<dd class=\"ui_tpicker_timezone\" ' + (showTz ? '' : noDisplay) + '></dd>';\n\n                // Create the elements from string\n                html += '</dl></div>';\n                var $tp = $(html);\n\n                // if we only want time picker...\n                if (o.timeOnly === true) {\n                    $tp.prepend('<div class=\"ui-widget-header ui-helper-clearfix ui-corner-all\">' + '<div class=\"ui-datepicker-title\">' + o.timeOnlyTitle + '</div>' + '</div>');\n                    $dp.find('.ui-datepicker-header, .ui-datepicker-calendar').hide();\n                }\n\n                // add sliders, adjust grids, add events\n                for (i = 0, l = tp_inst.units.length; i < l; i++) {\n                    litem = tp_inst.units[i];\n                    uitem = litem.substr(0, 1).toUpperCase() + litem.substr(1);\n                    show = o['show' + uitem] !== null ? o['show' + uitem] : this.support[litem];\n\n                    // add the slider\n                    tp_inst[litem + '_slider'] = tp_inst.control.create(tp_inst, $tp.find('.ui_tpicker_' + litem + '_slider'), litem, tp_inst[litem], o[litem + 'Min'], max[litem], o['step' + uitem]);\n\n                    // adjust the grid and add click event\n                    if (show && o[litem + 'Grid'] > 0) {\n                        size = 100 * gridSize[litem] * o[litem + 'Grid'] / (max[litem] - o[litem + 'Min']);\n                        $tp.find('.ui_tpicker_' + litem + ' table').css({\n                            width: size + \"%\",\n                            marginLeft: o.isRTL ? '0' : ((size / (-2 * gridSize[litem])) + \"%\"),\n                            marginRight: o.isRTL ? ((size / (-2 * gridSize[litem])) + \"%\") : '0',\n                            borderCollapse: 'collapse'\n                        }).find(\"td\").click(function (e) {\n                            var $t = $(this),\n                                h = $t.html(),\n                                n = parseInt(h.replace(/[^0-9]/g), 10),\n                                ap = h.replace(/[^apm]/ig),\n                                f = $t.data('for'); // loses scope, so we use data-for\n\n                            if (f === 'hour') {\n                                if (ap.indexOf('p') !== -1 && n < 12) {\n                                    n += 12;\n                                } else {\n                                    if (ap.indexOf('a') !== -1 && n === 12) {\n                                        n = 0;\n                                    }\n                                }\n                            }\n\n                            tp_inst.control.value(tp_inst, tp_inst[f + '_slider'], litem, n);\n\n                            tp_inst._onTimeChange();\n                            tp_inst._onSelectHandler();\n                        }).css({\n                            cursor: 'pointer',\n                            width: (100 / gridSize[litem]) + '%',\n                            textAlign: 'center',\n                            overflow: 'hidden'\n                        });\n                    } // end if grid > 0\n                } // end for loop\n\n                // Add timezone options\n                this.timezone_select = $tp.find('.ui_tpicker_timezone').append('<select></select>').find(\"select\");\n                $.fn.append.apply(this.timezone_select,\n                    $.map(o.timezoneList, function (val, idx) {\n                        return $(\"<option />\").val(typeof val === \"object\" ? val.value : val).text(typeof val === \"object\" ? val.label : val);\n                    }));\n                if (typeof (this.timezone) !== \"undefined\" && this.timezone !== null && this.timezone !== \"\") {\n                    var local_timezone = (new Date(this.inst.selectedYear, this.inst.selectedMonth, this.inst.selectedDay, 12)).getTimezoneOffset() * -1;\n                    if (local_timezone === this.timezone) {\n                        selectLocalTimezone(tp_inst);\n                    } else {\n                        this.timezone_select.val(this.timezone);\n                    }\n                } else {\n                    if (typeof (this.hour) !== \"undefined\" && this.hour !== null && this.hour !== \"\") {\n                        this.timezone_select.val(o.timezone);\n                    } else {\n                        selectLocalTimezone(tp_inst);\n                    }\n                }\n                this.timezone_select.change(function () {\n                    tp_inst._onTimeChange();\n                    tp_inst._onSelectHandler();\n                });\n                // End timezone options\n\n                // inject timepicker into datepicker\n                var $buttonPanel = $dp.find('.ui-datepicker-buttonpane');\n                if ($buttonPanel.length) {\n                    $buttonPanel.before($tp);\n                } else {\n                    $dp.append($tp);\n                }\n\n                this.$timeObj = $tp.find('.ui_tpicker_time');\n\n                if (this.inst !== null) {\n                    var timeDefined = this.timeDefined;\n                    this._onTimeChange();\n                    this.timeDefined = timeDefined;\n                }\n\n                // slideAccess integration: http://trentrichardson.com/2011/11/11/jquery-ui-sliders-and-touch-accessibility/\n                if (this._defaults.addSliderAccess) {\n                    var sliderAccessArgs = this._defaults.sliderAccessArgs,\n                        rtl = this._defaults.isRTL;\n                    sliderAccessArgs.isRTL = rtl;\n\n                    setTimeout(function () { // fix for inline mode\n                        if ($tp.find('.ui-slider-access').length === 0) {\n                            $tp.find('.ui-slider:visible').sliderAccess(sliderAccessArgs);\n\n                            // fix any grids since sliders are shorter\n                            var sliderAccessWidth = $tp.find('.ui-slider-access:eq(0)').outerWidth(true);\n                            if (sliderAccessWidth) {\n                                $tp.find('table:visible').each(function () {\n                                    var $g = $(this),\n                                        oldWidth = $g.outerWidth(),\n                                        oldMarginLeft = $g.css(rtl ? 'marginRight' : 'marginLeft').toString().replace('%', ''),\n                                        newWidth = oldWidth - sliderAccessWidth,\n                                        newMarginLeft = ((oldMarginLeft * newWidth) / oldWidth) + '%',\n                                        css = {width: newWidth, marginRight: 0, marginLeft: 0};\n                                    css[rtl ? 'marginRight' : 'marginLeft'] = newMarginLeft;\n                                    $g.css(css);\n                                });\n                            }\n                        }\n                    }, 10);\n                }\n                // end slideAccess integration\n\n                tp_inst._limitMinMaxDateTime(this.inst, true);\n            }\n        },\n\n        /*\n        * This function tries to limit the ability to go outside the\n        * min/max date range\n        */\n        _limitMinMaxDateTime: function (dp_inst, adjustSliders) {\n            var o = this._defaults,\n                dp_date = new Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay);\n\n            if (!this._defaults.showTimepicker) {\n                return;\n            } // No time so nothing to check here\n\n            if ($.datepicker._get(dp_inst, 'minDateTime') !== null && $.datepicker._get(dp_inst, 'minDateTime') !== undefined && dp_date) {\n                var minDateTime = $.datepicker._get(dp_inst, 'minDateTime'),\n                    minDateTimeDate = new Date(minDateTime.getFullYear(), minDateTime.getMonth(), minDateTime.getDate(), 0, 0, 0, 0);\n\n                if (this.hourMinOriginal === null || this.minuteMinOriginal === null || this.secondMinOriginal === null || this.millisecMinOriginal === null || this.microsecMinOriginal === null) {\n                    this.hourMinOriginal = o.hourMin;\n                    this.minuteMinOriginal = o.minuteMin;\n                    this.secondMinOriginal = o.secondMin;\n                    this.millisecMinOriginal = o.millisecMin;\n                    this.microsecMinOriginal = o.microsecMin;\n                }\n\n                if (dp_inst.settings.timeOnly || minDateTimeDate.getTime() === dp_date.getTime()) {\n                    this._defaults.hourMin = minDateTime.getHours();\n                    if (this.hour <= this._defaults.hourMin) {\n                        this.hour = this._defaults.hourMin;\n                        this._defaults.minuteMin = minDateTime.getMinutes();\n                        if (this.minute <= this._defaults.minuteMin) {\n                            this.minute = this._defaults.minuteMin;\n                            this._defaults.secondMin = minDateTime.getSeconds();\n                            if (this.second <= this._defaults.secondMin) {\n                                this.second = this._defaults.secondMin;\n                                this._defaults.millisecMin = minDateTime.getMilliseconds();\n                                if (this.millisec <= this._defaults.millisecMin) {\n                                    this.millisec = this._defaults.millisecMin;\n                                    this._defaults.microsecMin = minDateTime.getMicroseconds();\n                                } else {\n                                    if (this.microsec < this._defaults.microsecMin) {\n                                        this.microsec = this._defaults.microsecMin;\n                                    }\n                                    this._defaults.microsecMin = this.microsecMinOriginal;\n                                }\n                            } else {\n                                this._defaults.millisecMin = this.millisecMinOriginal;\n                                this._defaults.microsecMin = this.microsecMinOriginal;\n                            }\n                        } else {\n                            this._defaults.secondMin = this.secondMinOriginal;\n                            this._defaults.millisecMin = this.millisecMinOriginal;\n                            this._defaults.microsecMin = this.microsecMinOriginal;\n                        }\n                    } else {\n                        this._defaults.minuteMin = this.minuteMinOriginal;\n                        this._defaults.secondMin = this.secondMinOriginal;\n                        this._defaults.millisecMin = this.millisecMinOriginal;\n                        this._defaults.microsecMin = this.microsecMinOriginal;\n                    }\n                } else {\n                    this._defaults.hourMin = this.hourMinOriginal;\n                    this._defaults.minuteMin = this.minuteMinOriginal;\n                    this._defaults.secondMin = this.secondMinOriginal;\n                    this._defaults.millisecMin = this.millisecMinOriginal;\n                    this._defaults.microsecMin = this.microsecMinOriginal;\n                }\n            }\n\n            if ($.datepicker._get(dp_inst, 'maxDateTime') !== null && $.datepicker._get(dp_inst, 'maxDateTime') !== undefined && dp_date) {\n                var maxDateTime = $.datepicker._get(dp_inst, 'maxDateTime'),\n                    maxDateTimeDate = new Date(maxDateTime.getFullYear(), maxDateTime.getMonth(), maxDateTime.getDate(), 0, 0, 0, 0);\n\n                if (this.hourMaxOriginal === null || this.minuteMaxOriginal === null || this.secondMaxOriginal === null || this.millisecMaxOriginal === null) {\n                    this.hourMaxOriginal = o.hourMax;\n                    this.minuteMaxOriginal = o.minuteMax;\n                    this.secondMaxOriginal = o.secondMax;\n                    this.millisecMaxOriginal = o.millisecMax;\n                    this.microsecMaxOriginal = o.microsecMax;\n                }\n\n                if (dp_inst.settings.timeOnly || maxDateTimeDate.getTime() === dp_date.getTime()) {\n                    this._defaults.hourMax = maxDateTime.getHours();\n                    if (this.hour >= this._defaults.hourMax) {\n                        this.hour = this._defaults.hourMax;\n                        this._defaults.minuteMax = maxDateTime.getMinutes();\n                        if (this.minute >= this._defaults.minuteMax) {\n                            this.minute = this._defaults.minuteMax;\n                            this._defaults.secondMax = maxDateTime.getSeconds();\n                            if (this.second >= this._defaults.secondMax) {\n                                this.second = this._defaults.secondMax;\n                                this._defaults.millisecMax = maxDateTime.getMilliseconds();\n                                if (this.millisec >= this._defaults.millisecMax) {\n                                    this.millisec = this._defaults.millisecMax;\n                                    this._defaults.microsecMax = maxDateTime.getMicroseconds();\n                                } else {\n                                    if (this.microsec > this._defaults.microsecMax) {\n                                        this.microsec = this._defaults.microsecMax;\n                                    }\n                                    this._defaults.microsecMax = this.microsecMaxOriginal;\n                                }\n                            } else {\n                                this._defaults.millisecMax = this.millisecMaxOriginal;\n                                this._defaults.microsecMax = this.microsecMaxOriginal;\n                            }\n                        } else {\n                            this._defaults.secondMax = this.secondMaxOriginal;\n                            this._defaults.millisecMax = this.millisecMaxOriginal;\n                            this._defaults.microsecMax = this.microsecMaxOriginal;\n                        }\n                    } else {\n                        this._defaults.minuteMax = this.minuteMaxOriginal;\n                        this._defaults.secondMax = this.secondMaxOriginal;\n                        this._defaults.millisecMax = this.millisecMaxOriginal;\n                        this._defaults.microsecMax = this.microsecMaxOriginal;\n                    }\n                } else {\n                    this._defaults.hourMax = this.hourMaxOriginal;\n                    this._defaults.minuteMax = this.minuteMaxOriginal;\n                    this._defaults.secondMax = this.secondMaxOriginal;\n                    this._defaults.millisecMax = this.millisecMaxOriginal;\n                    this._defaults.microsecMax = this.microsecMaxOriginal;\n                }\n            }\n\n            if (adjustSliders !== undefined && adjustSliders === true) {\n                var hourMax = parseInt((this._defaults.hourMax - ((this._defaults.hourMax - this._defaults.hourMin) % this._defaults.stepHour)), 10),\n                    minMax = parseInt((this._defaults.minuteMax - ((this._defaults.minuteMax - this._defaults.minuteMin) % this._defaults.stepMinute)), 10),\n                    secMax = parseInt((this._defaults.secondMax - ((this._defaults.secondMax - this._defaults.secondMin) % this._defaults.stepSecond)), 10),\n                    millisecMax = parseInt((this._defaults.millisecMax - ((this._defaults.millisecMax - this._defaults.millisecMin) % this._defaults.stepMillisec)), 10),\n                    microsecMax = parseInt((this._defaults.microsecMax - ((this._defaults.microsecMax - this._defaults.microsecMin) % this._defaults.stepMicrosec)), 10);\n\n                if (this.hour_slider) {\n                    this.control.options(this, this.hour_slider, 'hour', {min: this._defaults.hourMin, max: hourMax});\n                    this.control.value(this, this.hour_slider, 'hour', this.hour - (this.hour % this._defaults.stepHour));\n                }\n                if (this.minute_slider) {\n                    this.control.options(this, this.minute_slider, 'minute', {\n                        min: this._defaults.minuteMin,\n                        max: minMax\n                    });\n                    this.control.value(this, this.minute_slider, 'minute', this.minute - (this.minute % this._defaults.stepMinute));\n                }\n                if (this.second_slider) {\n                    this.control.options(this, this.second_slider, 'second', {\n                        min: this._defaults.secondMin,\n                        max: secMax\n                    });\n                    this.control.value(this, this.second_slider, 'second', this.second - (this.second % this._defaults.stepSecond));\n                }\n                if (this.millisec_slider) {\n                    this.control.options(this, this.millisec_slider, 'millisec', {\n                        min: this._defaults.millisecMin,\n                        max: millisecMax\n                    });\n                    this.control.value(this, this.millisec_slider, 'millisec', this.millisec - (this.millisec % this._defaults.stepMillisec));\n                }\n                if (this.microsec_slider) {\n                    this.control.options(this, this.microsec_slider, 'microsec', {\n                        min: this._defaults.microsecMin,\n                        max: microsecMax\n                    });\n                    this.control.value(this, this.microsec_slider, 'microsec', this.microsec - (this.microsec % this._defaults.stepMicrosec));\n                }\n            }\n\n        },\n\n        /*\n        * when a slider moves, set the internal time...\n        * on time change is also called when the time is updated in the text field\n        */\n        _onTimeChange: function () {\n            if (!this._defaults.showTimepicker) {\n                return;\n            }\n            var hour = (this.hour_slider) ? this.control.value(this, this.hour_slider, 'hour') : false,\n                minute = (this.minute_slider) ? this.control.value(this, this.minute_slider, 'minute') : false,\n                second = (this.second_slider) ? this.control.value(this, this.second_slider, 'second') : false,\n                millisec = (this.millisec_slider) ? this.control.value(this, this.millisec_slider, 'millisec') : false,\n                microsec = (this.microsec_slider) ? this.control.value(this, this.microsec_slider, 'microsec') : false,\n                timezone = (this.timezone_select) ? this.timezone_select.val() : false,\n                o = this._defaults,\n                pickerTimeFormat = o.pickerTimeFormat || o.timeFormat,\n                pickerTimeSuffix = o.pickerTimeSuffix || o.timeSuffix;\n\n            if (typeof (hour) === 'object') {\n                hour = false;\n            }\n            if (typeof (minute) === 'object') {\n                minute = false;\n            }\n            if (typeof (second) === 'object') {\n                second = false;\n            }\n            if (typeof (millisec) === 'object') {\n                millisec = false;\n            }\n            if (typeof (microsec) === 'object') {\n                microsec = false;\n            }\n            if (typeof (timezone) === 'object') {\n                timezone = false;\n            }\n\n            if (hour !== false) {\n                hour = parseInt(hour, 10);\n            }\n            if (minute !== false) {\n                minute = parseInt(minute, 10);\n            }\n            if (second !== false) {\n                second = parseInt(second, 10);\n            }\n            if (millisec !== false) {\n                millisec = parseInt(millisec, 10);\n            }\n            if (microsec !== false) {\n                microsec = parseInt(microsec, 10);\n            }\n            if (timezone !== false) {\n                timezone = timezone.toString();\n            }\n\n            var ampm = o[hour < 12 ? 'amNames' : 'pmNames'][0];\n\n            // If the update was done in the input field, the input field should not be updated.\n            // If the update was done using the sliders, update the input field.\n            var hasChanged = (\n                hour !== parseInt(this.hour, 10) || // sliders should all be numeric\n                minute !== parseInt(this.minute, 10) ||\n                second !== parseInt(this.second, 10) ||\n                millisec !== parseInt(this.millisec, 10) ||\n                microsec !== parseInt(this.microsec, 10) ||\n                (this.ampm.length > 0 && (hour < 12) !== ($.inArray(this.ampm.toUpperCase(), this.amNames) !== -1)) ||\n                (this.timezone !== null && timezone !== this.timezone.toString()) // could be numeric or \"EST\" format, so use toString()\n            );\n\n            if (hasChanged) {\n\n                if (hour !== false) {\n                    this.hour = hour;\n                }\n                if (minute !== false) {\n                    this.minute = minute;\n                }\n                if (second !== false) {\n                    this.second = second;\n                }\n                if (millisec !== false) {\n                    this.millisec = millisec;\n                }\n                if (microsec !== false) {\n                    this.microsec = microsec;\n                }\n                if (timezone !== false) {\n                    this.timezone = timezone;\n                }\n\n                if (!this.inst) {\n                    this.inst = $.datepicker._getInst(this.$input[0]);\n                }\n\n                this._limitMinMaxDateTime(this.inst, true);\n            }\n            if (this.support.ampm) {\n                this.ampm = ampm;\n            }\n\n            // Updates the time within the timepicker\n            this.formattedTime = $.datepicker.formatTime(o.timeFormat, this, o);\n            if (this.$timeObj) {\n                if (pickerTimeFormat === o.timeFormat) {\n                    this.$timeObj.text(this.formattedTime + pickerTimeSuffix);\n                } else {\n                    this.$timeObj.text($.datepicker.formatTime(pickerTimeFormat, this, o) + pickerTimeSuffix);\n                }\n            }\n\n            this.timeDefined = true;\n            if (hasChanged) {\n                this._updateDateTime();\n                this.$input.focus();\n            }\n        },\n\n        /*\n        * call custom onSelect.\n        * bind to sliders slidestop, and grid click.\n        */\n        _onSelectHandler: function () {\n            var onSelect = this._defaults.onSelect || this.inst.settings.onSelect;\n            var inputEl = this.$input ? this.$input[0] : null;\n            if (onSelect && inputEl) {\n                onSelect.apply(inputEl, [this.formattedDateTime, this]);\n            }\n        },\n\n        /*\n        * update our input with the new date time..\n        */\n        _updateDateTime: function (dp_inst) {\n            dp_inst = this.inst || dp_inst;\n            var dtTmp = (dp_inst.currentYear > 0 ?\n                new Date(dp_inst.currentYear, dp_inst.currentMonth, dp_inst.currentDay) :\n                new Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay)),\n                dt = $.datepicker._daylightSavingAdjust(dtTmp),\n                //dt = $.datepicker._daylightSavingAdjust(new Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay)),\n                //dt = $.datepicker._daylightSavingAdjust(new Date(dp_inst.currentYear, dp_inst.currentMonth, dp_inst.currentDay)),\n                dateFmt = $.datepicker._get(dp_inst, 'dateFormat'),\n                formatCfg = $.datepicker._getFormatConfig(dp_inst),\n                timeAvailable = dt !== null && this.timeDefined;\n            this.formattedDate = $.datepicker.formatDate(dateFmt, (dt === null ? new Date() : dt), formatCfg);\n            var formattedDateTime = this.formattedDate;\n\n            // if a slider was changed but datepicker doesn't have a value yet, set it\n            if (dp_inst.lastVal === \"\") {\n                dp_inst.currentYear = dp_inst.selectedYear;\n                dp_inst.currentMonth = dp_inst.selectedMonth;\n                dp_inst.currentDay = dp_inst.selectedDay;\n            }\n\n            /*\n            * remove following lines to force every changes in date picker to change the input value\n            * Bug descriptions: when an input field has a default value, and click on the field to pop up the date picker.\n            * If the user manually empty the value in the input field, the date picker will never change selected value.\n            */\n            //if (dp_inst.lastVal !== undefined && (dp_inst.lastVal.length > 0 && this.$input.val().length === 0)) {\n            //\treturn;\n            //}\n\n            if (this._defaults.timeOnly === true) {\n                formattedDateTime = this.formattedTime;\n            } else if (this._defaults.timeOnly !== true && (this._defaults.alwaysSetTime || timeAvailable)) {\n                formattedDateTime += this._defaults.separator + this.formattedTime + this._defaults.timeSuffix;\n            }\n\n            this.formattedDateTime = formattedDateTime;\n\n            if (!this._defaults.showTimepicker) {\n                this.$input.val(this.formattedDate);\n            } else if (this.$altInput && this._defaults.timeOnly === false && this._defaults.altFieldTimeOnly === true) {\n                this.$altInput.val(this.formattedTime);\n                this.$input.val(this.formattedDate);\n            } else if (this.$altInput) {\n                this.$input.val(formattedDateTime);\n                var altFormattedDateTime = '',\n                    altSeparator = this._defaults.altSeparator ? this._defaults.altSeparator : this._defaults.separator,\n                    altTimeSuffix = this._defaults.altTimeSuffix ? this._defaults.altTimeSuffix : this._defaults.timeSuffix;\n\n                if (!this._defaults.timeOnly) {\n                    if (this._defaults.altFormat) {\n                        altFormattedDateTime = $.datepicker.formatDate(this._defaults.altFormat, (dt === null ? new Date() : dt), formatCfg);\n                    } else {\n                        altFormattedDateTime = this.formattedDate;\n                    }\n\n                    if (altFormattedDateTime) {\n                        altFormattedDateTime += altSeparator;\n                    }\n                }\n\n                if (this._defaults.altTimeFormat) {\n                    altFormattedDateTime += $.datepicker.formatTime(this._defaults.altTimeFormat, this, this._defaults) + altTimeSuffix;\n                } else {\n                    altFormattedDateTime += this.formattedTime + altTimeSuffix;\n                }\n                this.$altInput.val(altFormattedDateTime);\n            } else {\n                this.$input.val(formattedDateTime);\n            }\n\n            this.$input.trigger(\"change\");\n        },\n\n        _onFocus: function () {\n            if (!this.$input.val() && this._defaults.defaultValue) {\n                this.$input.val(this._defaults.defaultValue);\n                var inst = $.datepicker._getInst(this.$input.get(0)),\n                    tp_inst = $.datepicker._get(inst, 'timepicker');\n                if (tp_inst) {\n                    if (tp_inst._defaults.timeOnly && (inst.input.val() !== inst.lastVal)) {\n                        try {\n                            $.datepicker._updateDatepicker(inst);\n                        } catch (err) {\n                            $.timepicker.log(err);\n                        }\n                    }\n                }\n            }\n        },\n\n        /*\n        * Small abstraction to control types\n        * We can add more, just be sure to follow the pattern: create, options, value\n        */\n        _controls: {\n            // slider methods\n            slider: {\n                create: function (tp_inst, obj, unit, val, min, max, step) {\n                    var rtl = tp_inst._defaults.isRTL; // if rtl go -60->0 instead of 0->60\n                    return obj.prop('slide', null).slider({\n                        orientation: \"horizontal\",\n                        value: rtl ? val * -1 : val,\n                        min: rtl ? max * -1 : min,\n                        max: rtl ? min * -1 : max,\n                        step: step,\n                        slide: function (event, ui) {\n                            tp_inst.control.value(tp_inst, $(this), unit, rtl ? ui.value * -1 : ui.value);\n                            tp_inst._onTimeChange();\n                        },\n                        stop: function (event, ui) {\n                            tp_inst._onSelectHandler();\n                        }\n                    });\n                },\n                options: function (tp_inst, obj, unit, opts, val) {\n                    if (tp_inst._defaults.isRTL) {\n                        if (typeof (opts) === 'string') {\n                            if (opts === 'min' || opts === 'max') {\n                                if (val !== undefined) {\n                                    return obj.slider(opts, val * -1);\n                                }\n                                return Math.abs(obj.slider(opts));\n                            }\n                            return obj.slider(opts);\n                        }\n                        var min = opts.min,\n                            max = opts.max;\n                        opts.min = opts.max = null;\n                        if (min !== undefined) {\n                            opts.max = min * -1;\n                        }\n                        if (max !== undefined) {\n                            opts.min = max * -1;\n                        }\n                        return obj.slider(opts);\n                    }\n                    if (typeof (opts) === 'string' && val !== undefined) {\n                        return obj.slider(opts, val);\n                    }\n                    return obj.slider(opts);\n                },\n                value: function (tp_inst, obj, unit, val) {\n                    if (tp_inst._defaults.isRTL) {\n                        if (val !== undefined) {\n                            return obj.slider('value', val * -1);\n                        }\n                        return Math.abs(obj.slider('value'));\n                    }\n                    if (val !== undefined) {\n                        return obj.slider('value', val);\n                    }\n                    return obj.slider('value');\n                }\n            },\n            // select methods\n            select: {\n                create: function (tp_inst, obj, unit, val, min, max, step) {\n                    var sel = '<select class=\"ui-timepicker-select\" data-unit=\"' + unit + '\" data-min=\"' + min + '\" data-max=\"' + max + '\" data-step=\"' + step + '\">',\n                        format = tp_inst._defaults.pickerTimeFormat || tp_inst._defaults.timeFormat;\n\n                    for (var i = min; i <= max; i += step) {\n                        sel += '<option value=\"' + i + '\"' + (i === val ? ' selected' : '') + '>';\n                        if (unit === 'hour') {\n                            sel += $.datepicker.formatTime($.trim(format.replace(/[^ht ]/ig, '')), {hour: i}, tp_inst._defaults);\n                        } else if (unit === 'millisec' || unit === 'microsec' || i >= 10) {\n                            sel += i;\n                        } else {\n                            sel += '0' + i.toString();\n                        }\n                        sel += '</option>';\n                    }\n                    sel += '</select>';\n\n                    obj.children('select').remove();\n\n                    $(sel).appendTo(obj).change(function (e) {\n                        tp_inst._onTimeChange();\n                        tp_inst._onSelectHandler();\n                    });\n\n                    return obj;\n                },\n                options: function (tp_inst, obj, unit, opts, val) {\n                    var o = {},\n                        $t = obj.children('select');\n                    if (typeof (opts) === 'string') {\n                        if (val === undefined) {\n                            return $t.data(opts);\n                        }\n                        o[opts] = val;\n                    } else {\n                        o = opts;\n                    }\n                    return tp_inst.control.create(tp_inst, obj, $t.data('unit'), $t.val(), o.min || $t.data('min'), o.max || $t.data('max'), o.step || $t.data('step'));\n                },\n                value: function (tp_inst, obj, unit, val) {\n                    var $t = obj.children('select');\n                    if (val !== undefined) {\n                        return $t.val(val);\n                    }\n                    return $t.val();\n                }\n            }\n        } // end _controls\n\n    });\n\n    $.fn.extend({\n        /*\n        * shorthand just to use timepicker.\n        */\n        timepicker: function (o) {\n            o = o || {};\n            var tmp_args = Array.prototype.slice.call(arguments);\n\n            if (typeof o === 'object') {\n                tmp_args[0] = $.extend(o, {\n                    timeOnly: true\n                });\n            }\n\n            return $(this).each(function () {\n                $.fn.datetimepicker.apply($(this), tmp_args);\n            });\n        },\n\n        /*\n        * extend timepicker to datepicker\n        */\n        datetimepicker: function (o) {\n            o = o || {};\n            var tmp_args = arguments;\n\n            if (typeof (o) === 'string') {\n                if (o === 'getDate') {\n                    return $.fn.datepicker.apply($(this[0]), tmp_args);\n                } else {\n                    return this.each(function () {\n                        var $t = $(this);\n                        $t.datepicker.apply($t, tmp_args);\n                    });\n                }\n            } else {\n                return this.each(function () {\n                    var $t = $(this);\n                    $t.datepicker($.timepicker._newInst($t, o)._defaults);\n                });\n            }\n        }\n    });\n\n    /*\n    * Public Utility to parse date and time\n    */\n    $.datepicker.parseDateTime = function (dateFormat, timeFormat, dateTimeString, dateSettings, timeSettings) {\n        var parseRes = parseDateTimeInternal(dateFormat, timeFormat, dateTimeString, dateSettings, timeSettings);\n        if (parseRes.timeObj) {\n            var t = parseRes.timeObj;\n            parseRes.date.setHours(t.hour, t.minute, t.second, t.millisec);\n            parseRes.date.setMicroseconds(t.microsec);\n        }\n\n        return parseRes.date;\n    };\n\n    /*\n    * Public utility to parse time\n    */\n    $.datepicker.parseTime = function (timeFormat, timeString, options) {\n        var o = extendRemove(extendRemove({}, $.timepicker._defaults), options || {}),\n            iso8601 = (timeFormat.replace(/\\'.*?\\'/g, '').indexOf('Z') !== -1);\n\n        // Strict parse requires the timeString to match the timeFormat exactly\n        var strictParse = function (f, s, o) {\n\n            // pattern for standard and localized AM/PM markers\n            var getPatternAmpm = function (amNames, pmNames) {\n                var markers = [];\n                if (amNames) {\n                    $.merge(markers, amNames);\n                }\n                if (pmNames) {\n                    $.merge(markers, pmNames);\n                }\n                markers = $.map(markers, function (val) {\n                    return val.replace(/[.*+?|()\\[\\]{}\\\\]/g, '\\\\$&');\n                });\n                return '(' + markers.join('|') + ')?';\n            };\n\n            // figure out position of time elements.. cause js cant do named captures\n            var getFormatPositions = function (timeFormat) {\n                var finds = timeFormat.toLowerCase().match(/(h{1,2}|m{1,2}|s{1,2}|l{1}|c{1}|t{1,2}|z|'.*?')/g),\n                    orders = {\n                        h: -1,\n                        m: -1,\n                        s: -1,\n                        l: -1,\n                        c: -1,\n                        t: -1,\n                        z: -1\n                    };\n\n                if (finds) {\n                    for (var i = 0; i < finds.length; i++) {\n                        if (orders[finds[i].toString().charAt(0)] === -1) {\n                            orders[finds[i].toString().charAt(0)] = i + 1;\n                        }\n                    }\n                }\n                return orders;\n            };\n\n            var regstr = '^' + f.toString()\n                    .replace(/([hH]{1,2}|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')/g, function (match) {\n                        var ml = match.length;\n                        switch (match.charAt(0).toLowerCase()) {\n                            case 'h':\n                                return ml === 1 ? '(\\\\d?\\\\d)' : '(\\\\d{' + ml + '})';\n                            case 'm':\n                                return ml === 1 ? '(\\\\d?\\\\d)' : '(\\\\d{' + ml + '})';\n                            case 's':\n                                return ml === 1 ? '(\\\\d?\\\\d)' : '(\\\\d{' + ml + '})';\n                            case 'l':\n                                return '(\\\\d?\\\\d?\\\\d)';\n                            case 'c':\n                                return '(\\\\d?\\\\d?\\\\d)';\n                            case 'z':\n                                return '(z|[-+]\\\\d\\\\d:?\\\\d\\\\d|\\\\S+)?';\n                            case 't':\n                                return getPatternAmpm(o.amNames, o.pmNames);\n                            default:    // literal escaped in quotes\n                                return '(' + match.replace(/\\'/g, \"\").replace(/(\\.|\\$|\\^|\\\\|\\/|\\(|\\)|\\[|\\]|\\?|\\+|\\*)/g, function (m) {\n                                    return \"\\\\\" + m;\n                                }) + ')?';\n                        }\n                    })\n                    .replace(/\\s/g, '\\\\s?') +\n                o.timeSuffix + '$',\n                order = getFormatPositions(f),\n                ampm = '',\n                treg;\n\n            treg = s.match(new RegExp(regstr, 'i'));\n\n            var resTime = {\n                hour: 0,\n                minute: 0,\n                second: 0,\n                millisec: 0,\n                microsec: 0\n            };\n\n            if (treg) {\n                if (order.t !== -1) {\n                    if (treg[order.t] === undefined || treg[order.t].length === 0) {\n                        ampm = '';\n                        resTime.ampm = '';\n                    } else {\n                        ampm = $.inArray(treg[order.t].toUpperCase(), o.amNames) !== -1 ? 'AM' : 'PM';\n                        resTime.ampm = o[ampm === 'AM' ? 'amNames' : 'pmNames'][0];\n                    }\n                }\n\n                if (order.h !== -1) {\n                    if (ampm === 'AM' && treg[order.h] === '12') {\n                        resTime.hour = 0; // 12am = 0 hour\n                    } else {\n                        if (ampm === 'PM' && treg[order.h] !== '12') {\n                            resTime.hour = parseInt(treg[order.h], 10) + 12; // 12pm = 12 hour, any other pm = hour + 12\n                        } else {\n                            resTime.hour = Number(treg[order.h]);\n                        }\n                    }\n                }\n\n                if (order.m !== -1) {\n                    resTime.minute = Number(treg[order.m]);\n                }\n                if (order.s !== -1) {\n                    resTime.second = Number(treg[order.s]);\n                }\n                if (order.l !== -1) {\n                    resTime.millisec = Number(treg[order.l]);\n                }\n                if (order.c !== -1) {\n                    resTime.microsec = Number(treg[order.c]);\n                }\n                if (order.z !== -1 && treg[order.z] !== undefined) {\n                    resTime.timezone = $.timepicker.timezoneOffsetNumber(treg[order.z]);\n                }\n\n\n                return resTime;\n            }\n            return false;\n        };// end strictParse\n\n        // First try JS Date, if that fails, use strictParse\n        var looseParse = function (f, s, o) {\n            try {\n                var d = new Date('2012-01-01 ' + s);\n                if (isNaN(d.getTime())) {\n                    d = new Date('2012-01-01T' + s);\n                    if (isNaN(d.getTime())) {\n                        d = new Date('01/01/2012 ' + s);\n                        if (isNaN(d.getTime())) {\n                            throw \"Unable to parse time with native Date: \" + s;\n                        }\n                    }\n                }\n\n                return {\n                    hour: d.getHours(),\n                    minute: d.getMinutes(),\n                    second: d.getSeconds(),\n                    millisec: d.getMilliseconds(),\n                    microsec: d.getMicroseconds(),\n                    timezone: d.getTimezoneOffset() * -1\n                };\n            } catch (err) {\n                try {\n                    return strictParse(f, s, o);\n                } catch (err2) {\n                    $.timepicker.log(\"Unable to parse \\ntimeString: \" + s + \"\\ntimeFormat: \" + f);\n                }\n            }\n            return false;\n        }; // end looseParse\n\n        if (typeof o.parse === \"function\") {\n            return o.parse(timeFormat, timeString, o);\n        }\n        if (o.parse === 'loose') {\n            return looseParse(timeFormat, timeString, o);\n        }\n        return strictParse(timeFormat, timeString, o);\n    };\n\n    /**\n     * Public utility to format the time\n     * @param {string} format format of the time\n     * @param {Object} time Object not a Date for timezones\n     * @param {Object} [options] essentially the regional[].. amNames, pmNames, ampm\n     * @returns {string} the formatted time\n     */\n    $.datepicker.formatTime = function (format, time, options) {\n        options = options || {};\n        options = $.extend({}, $.timepicker._defaults, options);\n        time = $.extend({\n            hour: 0,\n            minute: 0,\n            second: 0,\n            millisec: 0,\n            microsec: 0,\n            timezone: null\n        }, time);\n\n        var tmptime = format,\n            ampmName = options.amNames[0],\n            hour = parseInt(time.hour, 10);\n\n        if (hour > 11) {\n            ampmName = options.pmNames[0];\n        }\n\n        tmptime = tmptime.replace(/(?:HH?|hh?|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')/g, function (match) {\n            switch (match) {\n                case 'HH':\n                    return ('0' + hour).slice(-2);\n                case 'H':\n                    return hour;\n                case 'hh':\n                    return ('0' + convert24to12(hour)).slice(-2);\n                case 'h':\n                    return convert24to12(hour);\n                case 'mm':\n                    return ('0' + time.minute).slice(-2);\n                case 'm':\n                    return time.minute;\n                case 'ss':\n                    return ('0' + time.second).slice(-2);\n                case 's':\n                    return time.second;\n                case 'l':\n                    return ('00' + time.millisec).slice(-3);\n                case 'c':\n                    return ('00' + time.microsec).slice(-3);\n                case 'z':\n                    return $.timepicker.timezoneOffsetString(time.timezone === null ? options.timezone : time.timezone, false);\n                case 'Z':\n                    return $.timepicker.timezoneOffsetString(time.timezone === null ? options.timezone : time.timezone, true);\n                case 'T':\n                    return ampmName.charAt(0).toUpperCase();\n                case 'TT':\n                    return ampmName.toUpperCase();\n                case 't':\n                    return ampmName.charAt(0).toLowerCase();\n                case 'tt':\n                    return ampmName.toLowerCase();\n                default:\n                    return match.replace(/'/g, \"\");\n            }\n        });\n\n        return tmptime;\n    };\n\n    /*\n    * the bad hack :/ override datepicker so it doesn't close on select\n    // inspired: http://stackoverflow.com/questions/1252512/jquery-datepicker-prevent-closing-picker-when-clicking-a-date/1762378#1762378\n    */\n    $.datepicker._base_selectDate = $.datepicker._selectDate;\n    $.datepicker._selectDate = function (id, dateStr) {\n        var inst = this._getInst($(id)[0]),\n            tp_inst = this._get(inst, 'timepicker');\n\n        if (tp_inst) {\n            tp_inst._limitMinMaxDateTime(inst, true);\n            inst.inline = inst.stay_open = true;\n            //This way the onSelect handler called from calendarpicker get the full dateTime\n            this._base_selectDate(id, dateStr);\n            inst.inline = inst.stay_open = false;\n            this._notifyChange(inst);\n            this._updateDatepicker(inst);\n        } else {\n            this._base_selectDate(id, dateStr);\n        }\n    };\n\n    /*\n    * second bad hack :/ override datepicker so it triggers an event when changing the input field\n    * and does not redraw the datepicker on every selectDate event\n    */\n    $.datepicker._base_updateDatepicker = $.datepicker._updateDatepicker;\n    $.datepicker._updateDatepicker = function (inst) {\n\n        // don't popup the datepicker if there is another instance already opened\n        var input = inst.input[0];\n        if ($.datepicker._curInst && $.datepicker._curInst !== inst && $.datepicker._datepickerShowing && $.datepicker._lastInput !== input) {\n            return;\n        }\n\n        if (typeof (inst.stay_open) !== 'boolean' || inst.stay_open === false) {\n\n            this._base_updateDatepicker(inst);\n\n            // Reload the time control when changing something in the input text field.\n            var tp_inst = this._get(inst, 'timepicker');\n            if (tp_inst) {\n                tp_inst._addTimePicker(inst);\n            }\n        }\n    };\n\n    /*\n    * third bad hack :/ override datepicker so it allows spaces and colon in the input field\n    */\n    $.datepicker._base_doKeyPress = $.datepicker._doKeyPress;\n    $.datepicker._doKeyPress = function (event) {\n        var inst = $.datepicker._getInst(event.target),\n            tp_inst = $.datepicker._get(inst, 'timepicker');\n\n        if (tp_inst) {\n            if ($.datepicker._get(inst, 'constrainInput')) {\n                var ampm = tp_inst.support.ampm,\n                    tz = tp_inst._defaults.showTimezone !== null ? tp_inst._defaults.showTimezone : tp_inst.support.timezone,\n                    dateChars = $.datepicker._possibleChars($.datepicker._get(inst, 'dateFormat')),\n                    datetimeChars = tp_inst._defaults.timeFormat.toString()\n                            .replace(/[hms]/g, '')\n                            .replace(/TT/g, ampm ? 'APM' : '')\n                            .replace(/Tt/g, ampm ? 'AaPpMm' : '')\n                            .replace(/tT/g, ampm ? 'AaPpMm' : '')\n                            .replace(/T/g, ampm ? 'AP' : '')\n                            .replace(/tt/g, ampm ? 'apm' : '')\n                            .replace(/t/g, ampm ? 'ap' : '') +\n                        \" \" + tp_inst._defaults.separator +\n                        tp_inst._defaults.timeSuffix +\n                        (tz ? tp_inst._defaults.timezoneList.join('') : '') +\n                        (tp_inst._defaults.amNames.join('')) + (tp_inst._defaults.pmNames.join('')) +\n                        dateChars,\n                    chr = String.fromCharCode(event.charCode === undefined ? event.keyCode : event.charCode);\n                return event.ctrlKey || (chr < ' ' || !dateChars || datetimeChars.indexOf(chr) > -1);\n            }\n        }\n\n        return $.datepicker._base_doKeyPress(event);\n    };\n\n    /*\n    * Fourth bad hack :/ override _updateAlternate function used in inline mode to init altField\n    * Update any alternate field to synchronise with the main field.\n    */\n    $.datepicker._base_updateAlternate = $.datepicker._updateAlternate;\n    $.datepicker._updateAlternate = function (inst) {\n        var tp_inst = this._get(inst, 'timepicker');\n        if (tp_inst) {\n            var altField = tp_inst._defaults.altField;\n            if (altField) { // update alternate field too\n                var altFormat = tp_inst._defaults.altFormat || tp_inst._defaults.dateFormat,\n                    date = this._getDate(inst),\n                    formatCfg = $.datepicker._getFormatConfig(inst),\n                    altFormattedDateTime = '',\n                    altSeparator = tp_inst._defaults.altSeparator ? tp_inst._defaults.altSeparator : tp_inst._defaults.separator,\n                    altTimeSuffix = tp_inst._defaults.altTimeSuffix ? tp_inst._defaults.altTimeSuffix : tp_inst._defaults.timeSuffix,\n                    altTimeFormat = tp_inst._defaults.altTimeFormat !== null ? tp_inst._defaults.altTimeFormat : tp_inst._defaults.timeFormat;\n\n                altFormattedDateTime += $.datepicker.formatTime(altTimeFormat, tp_inst, tp_inst._defaults) + altTimeSuffix;\n                if (!tp_inst._defaults.timeOnly && !tp_inst._defaults.altFieldTimeOnly && date !== null) {\n                    if (tp_inst._defaults.altFormat) {\n                        altFormattedDateTime = $.datepicker.formatDate(tp_inst._defaults.altFormat, date, formatCfg) + altSeparator + altFormattedDateTime;\n                    } else {\n                        altFormattedDateTime = tp_inst.formattedDate + altSeparator + altFormattedDateTime;\n                    }\n                }\n                $(altField).val(altFormattedDateTime);\n            }\n        } else {\n            $.datepicker._base_updateAlternate(inst);\n        }\n    };\n\n    /*\n    * Override key up event to sync manual input changes.\n    */\n    $.datepicker._base_doKeyUp = $.datepicker._doKeyUp;\n    $.datepicker._doKeyUp = function (event) {\n        var inst = $.datepicker._getInst(event.target),\n            tp_inst = $.datepicker._get(inst, 'timepicker');\n\n        if (tp_inst) {\n            if (tp_inst._defaults.timeOnly && (inst.input.val() !== inst.lastVal)) {\n                try {\n                    $.datepicker._updateDatepicker(inst);\n                } catch (err) {\n                    $.timepicker.log(err);\n                }\n            }\n        }\n\n        return $.datepicker._base_doKeyUp(event);\n    };\n\n    /*\n    * override \"Today\" button to also grab the time.\n    */\n    $.datepicker._base_gotoToday = $.datepicker._gotoToday;\n    $.datepicker._gotoToday = function (id) {\n        var inst = this._getInst($(id)[0]),\n            $dp = inst.dpDiv;\n        this._base_gotoToday(id);\n        var tp_inst = this._get(inst, 'timepicker');\n        selectLocalTimezone(tp_inst);\n        var now = new Date();\n        this._setTime(inst, now);\n        $('.ui-datepicker-today', $dp).click();\n    };\n\n    /*\n    * Disable & enable the Time in the datetimepicker\n    */\n    $.datepicker._disableTimepickerDatepicker = function (target) {\n        var inst = this._getInst(target);\n        if (!inst) {\n            return;\n        }\n\n        var tp_inst = this._get(inst, 'timepicker');\n        $(target).datepicker('getDate'); // Init selected[Year|Month|Day]\n        if (tp_inst) {\n            inst.settings.showTimepicker = false;\n            tp_inst._defaults.showTimepicker = false;\n            tp_inst._updateDateTime(inst);\n        }\n    };\n\n    $.datepicker._enableTimepickerDatepicker = function (target) {\n        var inst = this._getInst(target);\n        if (!inst) {\n            return;\n        }\n\n        var tp_inst = this._get(inst, 'timepicker');\n        $(target).datepicker('getDate'); // Init selected[Year|Month|Day]\n        if (tp_inst) {\n            inst.settings.showTimepicker = true;\n            tp_inst._defaults.showTimepicker = true;\n            tp_inst._addTimePicker(inst); // Could be disabled on page load\n            tp_inst._updateDateTime(inst);\n        }\n    };\n\n    /*\n    * Create our own set time function\n    */\n    $.datepicker._setTime = function (inst, date) {\n        var tp_inst = this._get(inst, 'timepicker');\n        if (tp_inst) {\n            var defaults = tp_inst._defaults;\n\n            // calling _setTime with no date sets time to defaults\n            tp_inst.hour = date ? date.getHours() : defaults.hour;\n            tp_inst.minute = date ? date.getMinutes() : defaults.minute;\n            tp_inst.second = date ? date.getSeconds() : defaults.second;\n            tp_inst.millisec = date ? date.getMilliseconds() : defaults.millisec;\n            tp_inst.microsec = date ? date.getMicroseconds() : defaults.microsec;\n\n            //check if within min/max times..\n            tp_inst._limitMinMaxDateTime(inst, true);\n\n            tp_inst._onTimeChange();\n            tp_inst._updateDateTime(inst);\n        }\n    };\n\n    /*\n    * Create new public method to set only time, callable as $().datepicker('setTime', date)\n    */\n    $.datepicker._setTimeDatepicker = function (target, date, withDate) {\n        var inst = this._getInst(target);\n        if (!inst) {\n            return;\n        }\n\n        var tp_inst = this._get(inst, 'timepicker');\n\n        if (tp_inst) {\n            this._setDateFromField(inst);\n            var tp_date;\n            if (date) {\n                if (typeof date === \"string\") {\n                    tp_inst._parseTime(date, withDate);\n                    tp_date = new Date();\n                    tp_date.setHours(tp_inst.hour, tp_inst.minute, tp_inst.second, tp_inst.millisec);\n                    tp_date.setMicroseconds(tp_inst.microsec);\n                } else {\n                    tp_date = new Date(date.getTime());\n                    tp_date.setMicroseconds(date.getMicroseconds());\n                }\n                if (tp_date.toString() === 'Invalid Date') {\n                    tp_date = undefined;\n                }\n                this._setTime(inst, tp_date);\n            }\n        }\n\n    };\n\n    /*\n    * override setDate() to allow setting time too within Date object\n    */\n    $.datepicker._base_setDateDatepicker = $.datepicker._setDateDatepicker;\n    $.datepicker._setDateDatepicker = function (target, date) {\n        var inst = this._getInst(target);\n        if (!inst) {\n            return;\n        }\n\n        if (typeof (date) === 'string') {\n            date = new Date(date);\n            if (!date.getTime()) {\n                $.timepicker.log(\"Error creating Date object from string.\");\n            }\n        }\n\n        var tp_inst = this._get(inst, 'timepicker');\n        var tp_date;\n        if (date instanceof Date) {\n            tp_date = new Date(date.getTime());\n            tp_date.setMicroseconds(date.getMicroseconds());\n        } else {\n            tp_date = date;\n        }\n\n        // This is important if you are using the timezone option, javascript's Date\n        // object will only return the timezone offset for the current locale, so we\n        // adjust it accordingly.  If not using timezone option this won't matter..\n        // If a timezone is different in tp, keep the timezone as is\n        if (tp_inst && tp_date) {\n            // look out for DST if tz wasn't specified\n            if (!tp_inst.support.timezone && tp_inst._defaults.timezone === null) {\n                tp_inst.timezone = tp_date.getTimezoneOffset() * -1;\n            }\n            date = $.timepicker.timezoneAdjust(date, tp_inst.timezone);\n            tp_date = $.timepicker.timezoneAdjust(tp_date, tp_inst.timezone);\n        }\n\n        this._updateDatepicker(inst);\n        this._base_setDateDatepicker.apply(this, arguments);\n        this._setTimeDatepicker(target, tp_date, true);\n    };\n\n    /*\n    * override getDate() to allow getting time too within Date object\n    */\n    $.datepicker._base_getDateDatepicker = $.datepicker._getDateDatepicker;\n    $.datepicker._getDateDatepicker = function (target, noDefault) {\n        var inst = this._getInst(target);\n        if (!inst) {\n            return;\n        }\n\n        var tp_inst = this._get(inst, 'timepicker');\n\n        if (tp_inst) {\n            // if it hasn't yet been defined, grab from field\n            if (inst.lastVal === undefined) {\n                this._setDateFromField(inst, noDefault);\n            }\n\n            var date = this._getDate(inst);\n            if (date && tp_inst._parseTime($(target).val(), tp_inst.timeOnly)) {\n                date.setHours(tp_inst.hour, tp_inst.minute, tp_inst.second, tp_inst.millisec);\n                date.setMicroseconds(tp_inst.microsec);\n\n                // This is important if you are using the timezone option, javascript's Date\n                // object will only return the timezone offset for the current locale, so we\n                // adjust it accordingly.  If not using timezone option this won't matter..\n                if (tp_inst.timezone != null) {\n                    // look out for DST if tz wasn't specified\n                    if (!tp_inst.support.timezone && tp_inst._defaults.timezone === null) {\n                        tp_inst.timezone = date.getTimezoneOffset() * -1;\n                    }\n                    date = $.timepicker.timezoneAdjust(date, tp_inst.timezone);\n                }\n            }\n            return date;\n        }\n        return this._base_getDateDatepicker(target, noDefault);\n    };\n\n    /*\n    * override parseDate() because UI 1.8.14 throws an error about \"Extra characters\"\n    * An option in datapicker to ignore extra format characters would be nicer.\n    */\n    $.datepicker._base_parseDate = $.datepicker.parseDate;\n    $.datepicker.parseDate = function (format, value, settings) {\n        var date;\n        try {\n            date = this._base_parseDate(format, value, settings);\n        } catch (err) {\n            // Hack!  The error message ends with a colon, a space, and\n            // the \"extra\" characters.  We rely on that instead of\n            // attempting to perfectly reproduce the parsing algorithm.\n            if (err.indexOf(\":\") >= 0) {\n                date = this._base_parseDate(format, value.substring(0, value.length - (err.length - err.indexOf(':') - 2)), settings);\n                $.timepicker.log(\"Error parsing the date string: \" + err + \"\\ndate string = \" + value + \"\\ndate format = \" + format);\n            } else {\n                throw err;\n            }\n        }\n        return date;\n    };\n\n    /*\n    * override formatDate to set date with time to the input\n    */\n    $.datepicker._base_formatDate = $.datepicker._formatDate;\n    $.datepicker._formatDate = function (inst, day, month, year) {\n        var tp_inst = this._get(inst, 'timepicker');\n        if (tp_inst) {\n            tp_inst._updateDateTime(inst);\n            return tp_inst.$input.val();\n        }\n        return this._base_formatDate(inst);\n    };\n\n    /*\n    * override options setter to add time to maxDate(Time) and minDate(Time). MaxDate\n    */\n    $.datepicker._base_optionDatepicker = $.datepicker._optionDatepicker;\n    $.datepicker._optionDatepicker = function (target, name, value) {\n        var inst = this._getInst(target),\n            name_clone;\n        if (!inst) {\n            return null;\n        }\n\n        var tp_inst = this._get(inst, 'timepicker');\n        if (tp_inst) {\n            var min = null,\n                max = null,\n                onselect = null,\n                overrides = tp_inst._defaults.evnts,\n                fns = {},\n                prop;\n            if (typeof name === 'string') { // if min/max was set with the string\n                if (name === 'minDate' || name === 'minDateTime') {\n                    min = value;\n                } else if (name === 'maxDate' || name === 'maxDateTime') {\n                    max = value;\n                } else if (name === 'onSelect') {\n                    onselect = value;\n                } else if (overrides.hasOwnProperty(name)) {\n                    if (typeof (value) === 'undefined') {\n                        return overrides[name];\n                    }\n                    fns[name] = value;\n                    name_clone = {}; //empty results in exiting function after overrides updated\n                }\n            } else if (typeof name === 'object') { //if min/max was set with the JSON\n                if (name.minDate) {\n                    min = name.minDate;\n                } else if (name.minDateTime) {\n                    min = name.minDateTime;\n                } else if (name.maxDate) {\n                    max = name.maxDate;\n                } else if (name.maxDateTime) {\n                    max = name.maxDateTime;\n                }\n                for (prop in overrides) {\n                    if (overrides.hasOwnProperty(prop) && name[prop]) {\n                        fns[prop] = name[prop];\n                    }\n                }\n            }\n            for (prop in fns) {\n                if (fns.hasOwnProperty(prop)) {\n                    overrides[prop] = fns[prop];\n                    if (!name_clone) {\n                        name_clone = $.extend({}, name);\n                    }\n                    delete name_clone[prop];\n                }\n            }\n            if (name_clone && isEmptyObject(name_clone)) {\n                return;\n            }\n            if (min) { //if min was set\n                if (min === 0) {\n                    min = new Date();\n                } else {\n                    min = new Date(min);\n                }\n                tp_inst._defaults.minDate = min;\n                tp_inst._defaults.minDateTime = min;\n            } else if (max) { //if max was set\n                if (max === 0) {\n                    max = new Date();\n                } else {\n                    max = new Date(max);\n                }\n                tp_inst._defaults.maxDate = max;\n                tp_inst._defaults.maxDateTime = max;\n            } else if (onselect) {\n                tp_inst._defaults.onSelect = onselect;\n            }\n        }\n        if (value === undefined) {\n            return this._base_optionDatepicker.call($.datepicker, target, name);\n        }\n        return this._base_optionDatepicker.call($.datepicker, target, name_clone || name, value);\n    };\n\n    /*\n    * jQuery isEmptyObject does not check hasOwnProperty - if someone has added to the object prototype,\n    * it will return false for all objects\n    */\n    var isEmptyObject = function (obj) {\n        var prop;\n        for (prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /*\n    * jQuery extend now ignores nulls!\n    */\n    var extendRemove = function (target, props) {\n        $.extend(target, props);\n        for (var name in props) {\n            if (props[name] === null || props[name] === undefined) {\n                target[name] = props[name];\n            }\n        }\n        return target;\n    };\n\n    /*\n    * Determine by the time format which units are supported\n    * Returns an object of booleans for each unit\n    */\n    var detectSupport = function (timeFormat) {\n        var tf = timeFormat.replace(/'.*?'/g, '').toLowerCase(), // removes literals\n            isIn = function (f, t) { // does the format contain the token?\n                return f.indexOf(t) !== -1 ? true : false;\n            };\n        return {\n            hour: isIn(tf, 'h'),\n            minute: isIn(tf, 'm'),\n            second: isIn(tf, 's'),\n            millisec: isIn(tf, 'l'),\n            microsec: isIn(tf, 'c'),\n            timezone: isIn(tf, 'z'),\n            ampm: isIn(tf, 't') && isIn(timeFormat, 'h'),\n            iso8601: isIn(timeFormat, 'Z')\n        };\n    };\n\n    /*\n    * Converts 24 hour format into 12 hour\n    * Returns 12 hour without leading 0\n    */\n    var convert24to12 = function (hour) {\n        hour %= 12;\n\n        if (hour === 0) {\n            hour = 12;\n        }\n\n        return String(hour);\n    };\n\n    var computeEffectiveSetting = function (settings, property) {\n        return settings && settings[property] ? settings[property] : $.timepicker._defaults[property];\n    };\n\n    /*\n    * Splits datetime string into date and time substrings.\n    * Throws exception when date can't be parsed\n    * Returns {dateString: dateString, timeString: timeString}\n    */\n    var splitDateTime = function (dateTimeString, timeSettings) {\n        // The idea is to get the number separator occurrences in datetime and the time format requested (since time has\n        // fewer unknowns, mostly numbers and am/pm). We will use the time pattern to split.\n        var separator = computeEffectiveSetting(timeSettings, 'separator'),\n            format = computeEffectiveSetting(timeSettings, 'timeFormat'),\n            timeParts = format.split(separator), // how many occurrences of separator may be in our format?\n            timePartsLen = timeParts.length,\n            allParts = dateTimeString.split(separator),\n            allPartsLen = allParts.length;\n\n        if (allPartsLen > 1) {\n            return {\n                dateString: allParts.splice(0, allPartsLen - timePartsLen).join(separator),\n                timeString: allParts.splice(0, timePartsLen).join(separator)\n            };\n        }\n\n        return {\n            dateString: dateTimeString,\n            timeString: ''\n        };\n    };\n\n    /*\n    * Internal function to parse datetime interval\n    * Returns: {date: Date, timeObj: Object}, where\n    *   date - parsed date without time (type Date)\n    *   timeObj = {hour: , minute: , second: , millisec: , microsec: } - parsed time. Optional\n    */\n    var parseDateTimeInternal = function (dateFormat, timeFormat, dateTimeString, dateSettings, timeSettings) {\n        var date,\n            parts,\n            parsedTime;\n\n        parts = splitDateTime(dateTimeString, timeSettings);\n        date = $.datepicker._base_parseDate(dateFormat, parts.dateString, dateSettings);\n\n        if (parts.timeString === '') {\n            return {\n                date: date\n            };\n        }\n\n        parsedTime = $.datepicker.parseTime(timeFormat, parts.timeString, timeSettings);\n\n        if (!parsedTime) {\n            throw 'Wrong time format';\n        }\n\n        return {\n            date: date,\n            timeObj: parsedTime\n        };\n    };\n\n    /*\n    * Internal function to set timezone_select to the local timezone\n    */\n    var selectLocalTimezone = function (tp_inst, date) {\n        if (tp_inst && tp_inst.timezone_select) {\n            var now = date || new Date();\n            tp_inst.timezone_select.val(-now.getTimezoneOffset());\n        }\n    };\n\n    /*\n    * Create a Singleton Instance\n    */\n    $.timepicker = new Timepicker();\n\n    /**\n     * Get the timezone offset as string from a date object (eg '+0530' for UTC+5.5)\n     * @param {number} tzMinutes if not a number, less than -720 (-1200), or greater than 840 (+1400) this value is returned\n     * @param {boolean} iso8601 if true formats in accordance to iso8601 \"+12:45\"\n     * @return {string}\n     */\n    $.timepicker.timezoneOffsetString = function (tzMinutes, iso8601) {\n        if (isNaN(tzMinutes) || tzMinutes > 840 || tzMinutes < -720) {\n            return tzMinutes;\n        }\n\n        var off = tzMinutes,\n            minutes = off % 60,\n            hours = (off - minutes) / 60,\n            iso = iso8601 ? ':' : '',\n            tz = (off >= 0 ? '+' : '-') + ('0' + Math.abs(hours)).slice(-2) + iso + ('0' + Math.abs(minutes)).slice(-2);\n\n        if (tz === '+00:00') {\n            return 'Z';\n        }\n        return tz;\n    };\n\n    /**\n     * Get the number in minutes that represents a timezone string\n     * @param  {string} tzString formatted like \"+0500\", \"-1245\", \"Z\"\n     * @return {number} the offset minutes or the original string if it doesn't match expectations\n     */\n    $.timepicker.timezoneOffsetNumber = function (tzString) {\n        var normalized = tzString.toString().replace(':', ''); // excuse any iso8601, end up with \"+1245\"\n\n        if (normalized.toUpperCase() === 'Z') { // if iso8601 with Z, its 0 minute offset\n            return 0;\n        }\n\n        if (!/^(\\-|\\+)\\d{4}$/.test(normalized)) { // possibly a user defined tz, so just give it back\n            return tzString;\n        }\n\n        return ((normalized.substr(0, 1) === '-' ? -1 : 1) * // plus or minus\n            ((parseInt(normalized.substr(1, 2), 10) * 60) + // hours (converted to minutes)\n                parseInt(normalized.substr(3, 2), 10))); // minutes\n    };\n\n    /**\n     * No way to set timezone in js Date, so we must adjust the minutes to compensate. (think setDate, getDate)\n     * @param  {Date} date\n     * @param  {string} toTimezone formatted like \"+0500\", \"-1245\"\n     * @return {Date}\n     */\n    $.timepicker.timezoneAdjust = function (date, toTimezone) {\n        var toTz = $.timepicker.timezoneOffsetNumber(toTimezone);\n        if (!isNaN(toTz)) {\n            date.setMinutes(date.getMinutes() + -date.getTimezoneOffset() - toTz);\n        }\n        return date;\n    };\n\n    /**\n     * Calls `timepicker()` on the `startTime` and `endTime` elements, and configures them to\n     * enforce date range limits.\n     * n.b. The input value must be correctly formatted (reformatting is not supported)\n     * @param  {Element} startTime\n     * @param  {Element} endTime\n     * @param  {Object} options Options for the timepicker() call\n     * @return {jQuery}\n     */\n    $.timepicker.timeRange = function (startTime, endTime, options) {\n        return $.timepicker.handleRange('timepicker', startTime, endTime, options);\n    };\n\n    /**\n     * Calls `datetimepicker` on the `startTime` and `endTime` elements, and configures them to\n     * enforce date range limits.\n     * @param  {Element} startTime\n     * @param  {Element} endTime\n     * @param  {Object} options Options for the `timepicker()` call. Also supports `reformat`,\n     *   a boolean value that can be used to reformat the input values to the `dateFormat`.\n     * @param  {string} method Can be used to specify the type of picker to be added\n     * @return {jQuery}\n     */\n    $.timepicker.datetimeRange = function (startTime, endTime, options) {\n        $.timepicker.handleRange('datetimepicker', startTime, endTime, options);\n    };\n\n    /**\n     * Calls `datepicker` on the `startTime` and `endTime` elements, and configures them to\n     * enforce date range limits.\n     * @param  {Element} startTime\n     * @param  {Element} endTime\n     * @param  {Object} options Options for the `timepicker()` call. Also supports `reformat`,\n     *   a boolean value that can be used to reformat the input values to the `dateFormat`.\n     * @return {jQuery}\n     */\n    $.timepicker.dateRange = function (startTime, endTime, options) {\n        $.timepicker.handleRange('datepicker', startTime, endTime, options);\n    };\n\n    /**\n     * Calls `method` on the `startTime` and `endTime` elements, and configures them to\n     * enforce date range limits.\n     * @param  {string} method Can be used to specify the type of picker to be added\n     * @param  {Element} startTime\n     * @param  {Element} endTime\n     * @param  {Object} options Options for the `timepicker()` call. Also supports `reformat`,\n     *   a boolean value that can be used to reformat the input values to the `dateFormat`.\n     * @return {jQuery}\n     */\n    $.timepicker.handleRange = function (method, startTime, endTime, options) {\n        options = $.extend({}, {\n            minInterval: 0, // min allowed interval in milliseconds\n            maxInterval: 0, // max allowed interval in milliseconds\n            start: {},      // options for start picker\n            end: {}         // options for end picker\n        }, options);\n\n        function checkDates(changed, other) {\n            var startdt = startTime[method]('getDate'),\n                enddt = endTime[method]('getDate'),\n                changeddt = changed[method]('getDate');\n\n            if (startdt !== null) {\n                var minDate = new Date(startdt.getTime()),\n                    maxDate = new Date(startdt.getTime());\n\n                minDate.setMilliseconds(minDate.getMilliseconds() + options.minInterval);\n                maxDate.setMilliseconds(maxDate.getMilliseconds() + options.maxInterval);\n\n                if (options.minInterval > 0 && minDate > enddt) { // minInterval check\n                    endTime[method]('setDate', minDate);\n                } else if (options.maxInterval > 0 && maxDate < enddt) { // max interval check\n                    endTime[method]('setDate', maxDate);\n                } else if (startdt > enddt) {\n                    other[method]('setDate', changeddt);\n                }\n            }\n        }\n\n        function selected(changed, other, option) {\n            if (!changed.val()) {\n                return;\n            }\n            var date = changed[method].call(changed, 'getDate');\n            if (date !== null && options.minInterval > 0) {\n                if (option === 'minDate') {\n                    date.setMilliseconds(date.getMilliseconds() + options.minInterval);\n                }\n                if (option === 'maxDate') {\n                    date.setMilliseconds(date.getMilliseconds() - options.minInterval);\n                }\n            }\n            if (date.getTime) {\n                other[method].call(other, 'option', option, date);\n            }\n        }\n\n        $.fn[method].call(startTime, $.extend({\n            onClose: function (dateText, inst) {\n                checkDates($(this), endTime);\n            },\n            onSelect: function (selectedDateTime) {\n                selected($(this), endTime, 'minDate');\n            }\n        }, options, options.start));\n        $.fn[method].call(endTime, $.extend({\n            onClose: function (dateText, inst) {\n                checkDates($(this), startTime);\n            },\n            onSelect: function (selectedDateTime) {\n                selected($(this), startTime, 'maxDate');\n            }\n        }, options, options.end));\n\n        checkDates(startTime, endTime);\n        selected(startTime, endTime, 'minDate');\n        selected(endTime, startTime, 'maxDate');\n        return $([startTime.get(0), endTime.get(0)]);\n    };\n\n    /**\n     * Log error or data to the console during error or debugging\n     * @param  {Object} err pass any type object to log to the console during error or debugging\n     * @return {void}\n     */\n    $.timepicker.log = function (err) {\n        if (window.console) {\n            window.console.log(err);\n        }\n    };\n\n    /*\n     * Add util object to allow access to private methods for testability.\n     */\n    $.timepicker._util = {\n        _extendRemove: extendRemove,\n        _isEmptyObject: isEmptyObject,\n        _convert24to12: convert24to12,\n        _detectSupport: detectSupport,\n        _selectLocalTimezone: selectLocalTimezone,\n        _computeEffectiveSetting: computeEffectiveSetting,\n        _splitDateTime: splitDateTime,\n        _parseDateTimeInternal: parseDateTimeInternal\n    };\n\n    /*\n    * Microsecond support\n    */\n    if (!Date.prototype.getMicroseconds) {\n        Date.prototype.microseconds = 0;\n        Date.prototype.getMicroseconds = function () {\n            return this.microseconds;\n        };\n        Date.prototype.setMicroseconds = function (m) {\n            this.setMilliseconds(this.getMilliseconds() + Math.floor(m / 1000));\n            this.microseconds = m % 1000;\n            return this;\n        };\n    }\n\n    /*\n    * Keep up with the version\n    */\n    $.timepicker.version = \"1.4.3\";\n\n}));\n","jquery/ui-modules/accordion.js":"/*!\n * jQuery UI Accordion - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/accordion/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/core',\n    'jquery-ui-modules/widget'\n], function ($, undefined) {\n\n    var uid = 0,\n        hideProps = {},\n        showProps = {};\n\n    hideProps.height = hideProps.paddingTop = hideProps.paddingBottom =\n        hideProps.borderTopWidth = hideProps.borderBottomWidth = \"hide\";\n    showProps.height = showProps.paddingTop = showProps.paddingBottom =\n        showProps.borderTopWidth = showProps.borderBottomWidth = \"show\";\n\n    $.widget(\"ui.accordion\", {\n        version: \"1.10.4\",\n        options: {\n            active: 0,\n            animate: {},\n            collapsible: false,\n            event: \"click\",\n            header: \"> li > :first-child,> :not(li):even\",\n            heightStyle: \"auto\",\n            icons: {\n                activeHeader: \"ui-icon-triangle-1-s\",\n                header: \"ui-icon-triangle-1-e\"\n            },\n\n            // callbacks\n            activate: null,\n            beforeActivate: null\n        },\n\n        _create: function () {\n            var options = this.options;\n            this.prevShow = this.prevHide = $();\n            this.element.addClass(\"ui-accordion ui-widget ui-helper-reset\")\n            // ARIA\n                .attr(\"role\", \"tablist\");\n\n            // don't allow collapsible: false and active: false / null\n            if (!options.collapsible && (options.active === false || options.active == null)) {\n                options.active = 0;\n            }\n\n            this._processPanels();\n            // handle negative values\n            if (options.active < 0) {\n                options.active += this.headers.length;\n            }\n            this._refresh();\n        },\n\n        _getCreateEventData: function () {\n            return {\n                header: this.active,\n                panel: !this.active.length ? $() : this.active.next(),\n                content: !this.active.length ? $() : this.active.next()\n            };\n        },\n\n        _createIcons: function () {\n            var icons = this.options.icons;\n            if (icons) {\n                $(\"<span>\")\n                    .addClass(\"ui-accordion-header-icon ui-icon \" + icons.header)\n                    .prependTo(this.headers);\n                this.active.children(\".ui-accordion-header-icon\")\n                    .removeClass(icons.header)\n                    .addClass(icons.activeHeader);\n                this.headers.addClass(\"ui-accordion-icons\");\n            }\n        },\n\n        _destroyIcons: function () {\n            this.headers\n                .removeClass(\"ui-accordion-icons\")\n                .children(\".ui-accordion-header-icon\")\n                .remove();\n        },\n\n        _destroy: function () {\n            var contents;\n\n            // clean up main element\n            this.element\n                .removeClass(\"ui-accordion ui-widget ui-helper-reset\")\n                .removeAttr(\"role\");\n\n            // clean up headers\n            this.headers\n                .removeClass(\"ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top\")\n                .removeAttr(\"role\")\n                .removeAttr(\"aria-expanded\")\n                .removeAttr(\"aria-selected\")\n                .removeAttr(\"aria-controls\")\n                .removeAttr(\"tabIndex\")\n                .each(function () {\n                    if (/^ui-accordion/.test(this.id)) {\n                        this.removeAttribute(\"id\");\n                    }\n                });\n            this._destroyIcons();\n\n            // clean up content panels\n            contents = this.headers.next()\n                .css(\"display\", \"\")\n                .removeAttr(\"role\")\n                .removeAttr(\"aria-hidden\")\n                .removeAttr(\"aria-labelledby\")\n                .removeClass(\"ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled\")\n                .each(function () {\n                    if (/^ui-accordion/.test(this.id)) {\n                        this.removeAttribute(\"id\");\n                    }\n                });\n            if (this.options.heightStyle !== \"content\") {\n                contents.css(\"height\", \"\");\n            }\n        },\n\n        _setOption: function (key, value) {\n            if (key === \"active\") {\n                // _activate() will handle invalid values and update this.options\n                this._activate(value);\n                return;\n            }\n\n            if (key === \"event\") {\n                if (this.options.event) {\n                    this._off(this.headers, this.options.event);\n                }\n                this._setupEvents(value);\n            }\n\n            this._super(key, value);\n\n            // setting collapsible: false while collapsed; open first panel\n            if (key === \"collapsible\" && !value && this.options.active === false) {\n                this._activate(0);\n            }\n\n            if (key === \"icons\") {\n                this._destroyIcons();\n                if (value) {\n                    this._createIcons();\n                }\n            }\n\n            // #5332 - opacity doesn't cascade to positioned elements in IE\n            // so we need to add the disabled class to the headers and panels\n            if (key === \"disabled\") {\n                this.headers.add(this.headers.next())\n                    .toggleClass(\"ui-state-disabled\", !!value);\n            }\n        },\n\n        _keydown: function (event) {\n            if (event.altKey || event.ctrlKey) {\n                return;\n            }\n\n            var keyCode = $.ui.keyCode,\n                length = this.headers.length,\n                currentIndex = this.headers.index(event.target),\n                toFocus = false;\n\n            switch (event.keyCode) {\n                case keyCode.RIGHT:\n                case keyCode.DOWN:\n                    toFocus = this.headers[(currentIndex + 1) % length];\n                    break;\n                case keyCode.LEFT:\n                case keyCode.UP:\n                    toFocus = this.headers[(currentIndex - 1 + length) % length];\n                    break;\n                case keyCode.SPACE:\n                case keyCode.ENTER:\n                    this._eventHandler(event);\n                    break;\n                case keyCode.HOME:\n                    toFocus = this.headers[0];\n                    break;\n                case keyCode.END:\n                    toFocus = this.headers[length - 1];\n                    break;\n            }\n\n            if (toFocus) {\n                $(event.target).attr(\"tabIndex\", -1);\n                $(toFocus).attr(\"tabIndex\", 0);\n                toFocus.focus();\n                event.preventDefault();\n            }\n        },\n\n        _panelKeyDown: function (event) {\n            if (event.keyCode === $.ui.keyCode.UP && event.ctrlKey) {\n                $(event.currentTarget).prev().focus();\n            }\n        },\n\n        refresh: function () {\n            var options = this.options;\n            this._processPanels();\n\n            // was collapsed or no panel\n            if ((options.active === false && options.collapsible === true) || !this.headers.length) {\n                options.active = false;\n                this.active = $();\n                // active false only when collapsible is true\n            } else if (options.active === false) {\n                this._activate(0);\n                // was active, but active panel is gone\n            } else if (this.active.length && !$.contains(this.element[0], this.active[0])) {\n                // all remaining panel are disabled\n                if (this.headers.length === this.headers.find(\".ui-state-disabled\").length) {\n                    options.active = false;\n                    this.active = $();\n                    // activate previous panel\n                } else {\n                    this._activate(Math.max(0, options.active - 1));\n                }\n                // was active, active panel still exists\n            } else {\n                // make sure active index is correct\n                options.active = this.headers.index(this.active);\n            }\n\n            this._destroyIcons();\n\n            this._refresh();\n        },\n\n        _processPanels: function () {\n            this.headers = this.element.find(this.options.header)\n                .addClass(\"ui-accordion-header ui-helper-reset ui-state-default ui-corner-all\");\n\n            this.headers.next()\n                .addClass(\"ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom\")\n                .filter(\":not(.ui-accordion-content-active)\")\n                .hide();\n        },\n\n        _refresh: function () {\n            var maxHeight,\n                options = this.options,\n                heightStyle = options.heightStyle,\n                parent = this.element.parent(),\n                accordionId = this.accordionId = \"ui-accordion-\" +\n                    (this.element.attr(\"id\") || ++uid);\n\n            this.active = this._findActive(options.active)\n                .addClass(\"ui-accordion-header-active ui-state-active ui-corner-top\")\n                .removeClass(\"ui-corner-all\");\n            this.active.next()\n                .addClass(\"ui-accordion-content-active\")\n                .show();\n\n            this.headers\n                .attr(\"role\", \"tab\")\n                .each(function (i) {\n                    var header = $(this),\n                        headerId = header.attr(\"id\"),\n                        panel = header.next(),\n                        panelId = panel.attr(\"id\");\n                    if (!headerId) {\n                        headerId = accordionId + \"-header-\" + i;\n                        header.attr(\"id\", headerId);\n                    }\n                    if (!panelId) {\n                        panelId = accordionId + \"-panel-\" + i;\n                        panel.attr(\"id\", panelId);\n                    }\n                    header.attr(\"aria-controls\", panelId);\n                    panel.attr(\"aria-labelledby\", headerId);\n                })\n                .next()\n                .attr(\"role\", \"tabpanel\");\n\n            this.headers\n                .not(this.active)\n                .attr({\n                    \"aria-selected\": \"false\",\n                    \"aria-expanded\": \"false\",\n                    tabIndex: -1\n                })\n                .next()\n                .attr({\n                    \"aria-hidden\": \"true\"\n                })\n                .hide();\n\n            // make sure at least one header is in the tab order\n            if (!this.active.length) {\n                this.headers.eq(0).attr(\"tabIndex\", 0);\n            } else {\n                this.active.attr({\n                    \"aria-selected\": \"true\",\n                    \"aria-expanded\": \"true\",\n                    tabIndex: 0\n                })\n                    .next()\n                    .attr({\n                        \"aria-hidden\": \"false\"\n                    });\n            }\n\n            this._createIcons();\n\n            this._setupEvents(options.event);\n\n            if (heightStyle === \"fill\") {\n                maxHeight = parent.height();\n                this.element.siblings(\":visible\").each(function () {\n                    var elem = $(this),\n                        position = elem.css(\"position\");\n\n                    if (position === \"absolute\" || position === \"fixed\") {\n                        return;\n                    }\n                    maxHeight -= elem.outerHeight(true);\n                });\n\n                this.headers.each(function () {\n                    maxHeight -= $(this).outerHeight(true);\n                });\n\n                this.headers.next()\n                    .each(function () {\n                        $(this).height(Math.max(0, maxHeight -\n                            $(this).innerHeight() + $(this).height()));\n                    })\n                    .css(\"overflow\", \"auto\");\n            } else if (heightStyle === \"auto\") {\n                maxHeight = 0;\n                this.headers.next()\n                    .each(function () {\n                        maxHeight = Math.max(maxHeight, $(this).css(\"height\", \"\").height());\n                    })\n                    .height(maxHeight);\n            }\n        },\n\n        _activate: function (index) {\n            var active = this._findActive(index)[0];\n\n            // trying to activate the already active panel\n            if (active === this.active[0]) {\n                return;\n            }\n\n            // trying to collapse, simulate a click on the currently active header\n            active = active || this.active[0];\n\n            this._eventHandler({\n                target: active,\n                currentTarget: active,\n                preventDefault: $.noop\n            });\n        },\n\n        _findActive: function (selector) {\n            return typeof selector === \"number\" ? this.headers.eq(selector) : $();\n        },\n\n        _setupEvents: function (event) {\n            var events = {\n                keydown: \"_keydown\"\n            };\n            if (event) {\n                $.each(event.split(\" \"), function (index, eventName) {\n                    events[eventName] = \"_eventHandler\";\n                });\n            }\n\n            this._off(this.headers.add(this.headers.next()));\n            this._on(this.headers, events);\n            this._on(this.headers.next(), {keydown: \"_panelKeyDown\"});\n            this._hoverable(this.headers);\n            this._focusable(this.headers);\n        },\n\n        _eventHandler: function (event) {\n            var options = this.options,\n                active = this.active,\n                clicked = $(event.currentTarget),\n                clickedIsActive = clicked[0] === active[0],\n                collapsing = clickedIsActive && options.collapsible,\n                toShow = collapsing ? $() : clicked.next(),\n                toHide = active.next(),\n                eventData = {\n                    oldHeader: active,\n                    oldPanel: toHide,\n                    newHeader: collapsing ? $() : clicked,\n                    newPanel: toShow\n                };\n\n            event.preventDefault();\n\n            if (\n                // click on active header, but not collapsible\n                (clickedIsActive && !options.collapsible) ||\n                // allow canceling activation\n                (this._trigger(\"beforeActivate\", event, eventData) === false)) {\n                return;\n            }\n\n            options.active = collapsing ? false : this.headers.index(clicked);\n\n            // when the call to ._toggle() comes after the class changes\n            // it causes a very odd bug in IE 8 (see #6720)\n            this.active = clickedIsActive ? $() : clicked;\n            this._toggle(eventData);\n\n            // switch classes\n            // corner classes on the previously active header stay after the animation\n            active.removeClass(\"ui-accordion-header-active ui-state-active\");\n            if (options.icons) {\n                active.children(\".ui-accordion-header-icon\")\n                    .removeClass(options.icons.activeHeader)\n                    .addClass(options.icons.header);\n            }\n\n            if (!clickedIsActive) {\n                clicked\n                    .removeClass(\"ui-corner-all\")\n                    .addClass(\"ui-accordion-header-active ui-state-active ui-corner-top\");\n                if (options.icons) {\n                    clicked.children(\".ui-accordion-header-icon\")\n                        .removeClass(options.icons.header)\n                        .addClass(options.icons.activeHeader);\n                }\n\n                clicked\n                    .next()\n                    .addClass(\"ui-accordion-content-active\");\n            }\n        },\n\n        _toggle: function (data) {\n            var toShow = data.newPanel,\n                toHide = this.prevShow.length ? this.prevShow : data.oldPanel;\n\n            // handle activating a panel during the animation for another activation\n            this.prevShow.add(this.prevHide).stop(true, true);\n            this.prevShow = toShow;\n            this.prevHide = toHide;\n\n            if (this.options.animate) {\n                this._animate(toShow, toHide, data);\n            } else {\n                toHide.hide();\n                toShow.show();\n                this._toggleComplete(data);\n            }\n\n            toHide.attr({\n                \"aria-hidden\": \"true\"\n            });\n            toHide.prev().attr(\"aria-selected\", \"false\");\n            // if we're switching panels, remove the old header from the tab order\n            // if we're opening from collapsed state, remove the previous header from the tab order\n            // if we're collapsing, then keep the collapsing header in the tab order\n            if (toShow.length && toHide.length) {\n                toHide.prev().attr({\n                    \"tabIndex\": -1,\n                    \"aria-expanded\": \"false\"\n                });\n            } else if (toShow.length) {\n                this.headers.filter(function () {\n                    return $(this).attr(\"tabIndex\") === 0;\n                })\n                    .attr(\"tabIndex\", -1);\n            }\n\n            toShow\n                .attr(\"aria-hidden\", \"false\")\n                .prev()\n                .attr({\n                    \"aria-selected\": \"true\",\n                    tabIndex: 0,\n                    \"aria-expanded\": \"true\"\n                });\n        },\n\n        _animate: function (toShow, toHide, data) {\n            var total, easing, duration,\n                that = this,\n                adjust = 0,\n                down = toShow.length &&\n                    (!toHide.length || (toShow.index() < toHide.index())),\n                animate = this.options.animate || {},\n                options = down && animate.down || animate,\n                complete = function () {\n                    that._toggleComplete(data);\n                };\n\n            if (typeof options === \"number\") {\n                duration = options;\n            }\n            if (typeof options === \"string\") {\n                easing = options;\n            }\n            // fall back from options to animation in case of partial down settings\n            easing = easing || options.easing || animate.easing;\n            duration = duration || options.duration || animate.duration;\n\n            if (!toHide.length) {\n                return toShow.animate(showProps, duration, easing, complete);\n            }\n            if (!toShow.length) {\n                return toHide.animate(hideProps, duration, easing, complete);\n            }\n\n            total = toShow.show().outerHeight();\n            toHide.animate(hideProps, {\n                duration: duration,\n                easing: easing,\n                step: function (now, fx) {\n                    fx.now = Math.round(now);\n                }\n            });\n            toShow\n                .hide()\n                .animate(showProps, {\n                    duration: duration,\n                    easing: easing,\n                    complete: complete,\n                    step: function (now, fx) {\n                        fx.now = Math.round(now);\n                        if (fx.prop !== \"height\") {\n                            adjust += fx.now;\n                        } else if (that.options.heightStyle !== \"content\") {\n                            fx.now = Math.round(total - toHide.outerHeight() - adjust);\n                            adjust = 0;\n                        }\n                    }\n                });\n        },\n\n        _toggleComplete: function (data) {\n            var toHide = data.oldPanel;\n\n            toHide\n                .removeClass(\"ui-accordion-content-active\")\n                .prev()\n                .removeClass(\"ui-corner-top\")\n                .addClass(\"ui-corner-all\");\n\n            // Work around for rendering bug in IE (#5421)\n            if (toHide.length) {\n                toHide.parent()[0].className = toHide.parent()[0].className;\n            }\n            this._trigger(\"activate\", null, data);\n        }\n    });\n});\n","jquery/ui-modules/position.js":"/*!\n * jQuery UI Position - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\ndefine([\n    'jquery'\n], function ($, undefined) {\n\n    $.ui = $.ui || {};\n\n    var cachedScrollbarWidth,\n        max = Math.max,\n        abs = Math.abs,\n        round = Math.round,\n        rhorizontal = /left|center|right/,\n        rvertical = /top|center|bottom/,\n        roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\n        rposition = /^\\w+/,\n        rpercent = /%$/,\n        _position = $.fn.position;\n\n    function getOffsets(offsets, width, height) {\n        return [\n            parseFloat(offsets[0]) * (rpercent.test(offsets[0]) ? width / 100 : 1),\n            parseFloat(offsets[1]) * (rpercent.test(offsets[1]) ? height / 100 : 1)\n        ];\n    }\n\n    function parseCss(element, property) {\n        return parseInt($.css(element, property), 10) || 0;\n    }\n\n    function getDimensions(elem) {\n        var raw = elem[0];\n        if (raw.nodeType === 9) {\n            return {\n                width: elem.width(),\n                height: elem.height(),\n                offset: {top: 0, left: 0}\n            };\n        }\n        if ($.isWindow(raw)) {\n            return {\n                width: elem.width(),\n                height: elem.height(),\n                offset: {top: elem.scrollTop(), left: elem.scrollLeft()}\n            };\n        }\n        if (raw.preventDefault) {\n            return {\n                width: 0,\n                height: 0,\n                offset: {top: raw.pageY, left: raw.pageX}\n            };\n        }\n        return {\n            width: elem.outerWidth(),\n            height: elem.outerHeight(),\n            offset: elem.offset()\n        };\n    }\n\n    $.position = {\n        scrollbarWidth: function () {\n            if (cachedScrollbarWidth !== undefined) {\n                return cachedScrollbarWidth;\n            }\n            var w1, w2,\n                div = $(\"<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>\"),\n                innerDiv = div.children()[0];\n\n            $(\"body\").append(div);\n            w1 = innerDiv.offsetWidth;\n            div.css(\"overflow\", \"scroll\");\n\n            w2 = innerDiv.offsetWidth;\n\n            if (w1 === w2) {\n                w2 = div[0].clientWidth;\n            }\n\n            div.remove();\n\n            return (cachedScrollbarWidth = w1 - w2);\n        },\n        getScrollInfo: function (within) {\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\n                within.element.css(\"overflow-x\"),\n                overflowY = within.isWindow || within.isDocument ? \"\" :\n                    within.element.css(\"overflow-y\"),\n                hasOverflowX = overflowX === \"scroll\" ||\n                    (overflowX === \"auto\" && within.width < within.element[0].scrollWidth),\n                hasOverflowY = overflowY === \"scroll\" ||\n                    (overflowY === \"auto\" && within.height < within.element[0].scrollHeight);\n            return {\n                width: hasOverflowY ? $.position.scrollbarWidth() : 0,\n                height: hasOverflowX ? $.position.scrollbarWidth() : 0\n            };\n        },\n        getWithinInfo: function (element) {\n            var withinElement = $(element || window),\n                isWindow = $.isWindow(withinElement[0]),\n                isDocument = !!withinElement[0] && withinElement[0].nodeType === 9;\n            return {\n                element: withinElement,\n                isWindow: isWindow,\n                isDocument: isDocument,\n                offset: withinElement.offset() || {left: 0, top: 0},\n                scrollLeft: withinElement.scrollLeft(),\n                scrollTop: withinElement.scrollTop(),\n                width: isWindow ? withinElement.width() : withinElement.outerWidth(),\n                height: isWindow ? withinElement.height() : withinElement.outerHeight()\n            };\n        }\n    };\n\n    $.fn.position = function (options) {\n        if (!options || !options.of) {\n            return _position.apply(this, arguments);\n        }\n\n        // make a copy, we don't want to modify arguments\n        options = $.extend({}, options);\n\n        var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\n            target = $(options.of),\n            within = $.position.getWithinInfo(options.within),\n            scrollInfo = $.position.getScrollInfo(within),\n            collision = (options.collision || \"flip\").split(\" \"),\n            offsets = {};\n\n        dimensions = getDimensions(target);\n        if (target[0].preventDefault) {\n            // force left top to allow flipping\n            options.at = \"left top\";\n        }\n        targetWidth = dimensions.width;\n        targetHeight = dimensions.height;\n        targetOffset = dimensions.offset;\n        // clone to reuse original targetOffset later\n        basePosition = $.extend({}, targetOffset);\n\n        // force my and at to have valid horizontal and vertical positions\n        // if a value is missing or invalid, it will be converted to center\n        $.each([\"my\", \"at\"], function () {\n            var pos = (options[this] || \"\").split(\" \"),\n                horizontalOffset,\n                verticalOffset;\n\n            if (pos.length === 1) {\n                pos = rhorizontal.test(pos[0]) ?\n                    pos.concat([\"center\"]) :\n                    rvertical.test(pos[0]) ?\n                        [\"center\"].concat(pos) :\n                        [\"center\", \"center\"];\n            }\n            pos[0] = rhorizontal.test(pos[0]) ? pos[0] : \"center\";\n            pos[1] = rvertical.test(pos[1]) ? pos[1] : \"center\";\n\n            // calculate offsets\n            horizontalOffset = roffset.exec(pos[0]);\n            verticalOffset = roffset.exec(pos[1]);\n            offsets[this] = [\n                horizontalOffset ? horizontalOffset[0] : 0,\n                verticalOffset ? verticalOffset[0] : 0\n            ];\n\n            // reduce to just the positions without the offsets\n            options[this] = [\n                rposition.exec(pos[0])[0],\n                rposition.exec(pos[1])[0]\n            ];\n        });\n\n        // normalize collision option\n        if (collision.length === 1) {\n            collision[1] = collision[0];\n        }\n\n        if (options.at[0] === \"right\") {\n            basePosition.left += targetWidth;\n        } else if (options.at[0] === \"center\") {\n            basePosition.left += targetWidth / 2;\n        }\n\n        if (options.at[1] === \"bottom\") {\n            basePosition.top += targetHeight;\n        } else if (options.at[1] === \"center\") {\n            basePosition.top += targetHeight / 2;\n        }\n\n        atOffset = getOffsets(offsets.at, targetWidth, targetHeight);\n        basePosition.left += atOffset[0];\n        basePosition.top += atOffset[1];\n\n        return this.each(function () {\n            var collisionPosition, using,\n                elem = $(this),\n                elemWidth = elem.outerWidth(),\n                elemHeight = elem.outerHeight(),\n                marginLeft = parseCss(this, \"marginLeft\"),\n                marginTop = parseCss(this, \"marginTop\"),\n                collisionWidth = elemWidth + marginLeft + parseCss(this, \"marginRight\") + scrollInfo.width,\n                collisionHeight = elemHeight + marginTop + parseCss(this, \"marginBottom\") + scrollInfo.height,\n                position = $.extend({}, basePosition),\n                myOffset = getOffsets(offsets.my, elem.outerWidth(), elem.outerHeight());\n\n            if (options.my[0] === \"right\") {\n                position.left -= elemWidth;\n            } else if (options.my[0] === \"center\") {\n                position.left -= elemWidth / 2;\n            }\n\n            if (options.my[1] === \"bottom\") {\n                position.top -= elemHeight;\n            } else if (options.my[1] === \"center\") {\n                position.top -= elemHeight / 2;\n            }\n\n            position.left += myOffset[0];\n            position.top += myOffset[1];\n\n            // if the browser doesn't support fractions, then round for consistent results\n            if (!$.support.offsetFractions) {\n                position.left = round(position.left);\n                position.top = round(position.top);\n            }\n\n            collisionPosition = {\n                marginLeft: marginLeft,\n                marginTop: marginTop\n            };\n\n            $.each([\"left\", \"top\"], function (i, dir) {\n                if ($.ui.position[collision[i]]) {\n                    $.ui.position[collision[i]][dir](position, {\n                        targetWidth: targetWidth,\n                        targetHeight: targetHeight,\n                        elemWidth: elemWidth,\n                        elemHeight: elemHeight,\n                        collisionPosition: collisionPosition,\n                        collisionWidth: collisionWidth,\n                        collisionHeight: collisionHeight,\n                        offset: [atOffset[0] + myOffset[0], atOffset [1] + myOffset[1]],\n                        my: options.my,\n                        at: options.at,\n                        within: within,\n                        elem: elem\n                    });\n                }\n            });\n\n            if (options.using) {\n                // adds feedback as second argument to using callback, if present\n                using = function (props) {\n                    var left = targetOffset.left - position.left,\n                        right = left + targetWidth - elemWidth,\n                        top = targetOffset.top - position.top,\n                        bottom = top + targetHeight - elemHeight,\n                        feedback = {\n                            target: {\n                                element: target,\n                                left: targetOffset.left,\n                                top: targetOffset.top,\n                                width: targetWidth,\n                                height: targetHeight\n                            },\n                            element: {\n                                element: elem,\n                                left: position.left,\n                                top: position.top,\n                                width: elemWidth,\n                                height: elemHeight\n                            },\n                            horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\n                            vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\n                        };\n                    if (targetWidth < elemWidth && abs(left + right) < targetWidth) {\n                        feedback.horizontal = \"center\";\n                    }\n                    if (targetHeight < elemHeight && abs(top + bottom) < targetHeight) {\n                        feedback.vertical = \"middle\";\n                    }\n                    if (max(abs(left), abs(right)) > max(abs(top), abs(bottom))) {\n                        feedback.important = \"horizontal\";\n                    } else {\n                        feedback.important = \"vertical\";\n                    }\n                    options.using.call(this, props, feedback);\n                };\n            }\n\n            elem.offset($.extend(position, {using: using}));\n        });\n    };\n\n    $.ui.position = {\n        fit: {\n            left: function (position, data) {\n                var within = data.within,\n                    withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\n                    outerWidth = within.width,\n                    collisionPosLeft = position.left - data.collisionPosition.marginLeft,\n                    overLeft = withinOffset - collisionPosLeft,\n                    overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\n                    newOverRight;\n\n                // element is wider than within\n                if (data.collisionWidth > outerWidth) {\n                    // element is initially over the left side of within\n                    if (overLeft > 0 && overRight <= 0) {\n                        newOverRight = position.left + overLeft + data.collisionWidth - outerWidth - withinOffset;\n                        position.left += overLeft - newOverRight;\n                        // element is initially over right side of within\n                    } else if (overRight > 0 && overLeft <= 0) {\n                        position.left = withinOffset;\n                        // element is initially over both left and right sides of within\n                    } else {\n                        if (overLeft > overRight) {\n                            position.left = withinOffset + outerWidth - data.collisionWidth;\n                        } else {\n                            position.left = withinOffset;\n                        }\n                    }\n                    // too far left -> align with left edge\n                } else if (overLeft > 0) {\n                    position.left += overLeft;\n                    // too far right -> align with right edge\n                } else if (overRight > 0) {\n                    position.left -= overRight;\n                    // adjust based on position and margin\n                } else {\n                    position.left = max(position.left - collisionPosLeft, position.left);\n                }\n            },\n            top: function (position, data) {\n                var within = data.within,\n                    withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\n                    outerHeight = data.within.height,\n                    collisionPosTop = position.top - data.collisionPosition.marginTop,\n                    overTop = withinOffset - collisionPosTop,\n                    overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\n                    newOverBottom;\n\n                // element is taller than within\n                if (data.collisionHeight > outerHeight) {\n                    // element is initially over the top of within\n                    if (overTop > 0 && overBottom <= 0) {\n                        newOverBottom = position.top + overTop + data.collisionHeight - outerHeight - withinOffset;\n                        position.top += overTop - newOverBottom;\n                        // element is initially over bottom of within\n                    } else if (overBottom > 0 && overTop <= 0) {\n                        position.top = withinOffset;\n                        // element is initially over both top and bottom of within\n                    } else {\n                        if (overTop > overBottom) {\n                            position.top = withinOffset + outerHeight - data.collisionHeight;\n                        } else {\n                            position.top = withinOffset;\n                        }\n                    }\n                    // too far up -> align with top\n                } else if (overTop > 0) {\n                    position.top += overTop;\n                    // too far down -> align with bottom edge\n                } else if (overBottom > 0) {\n                    position.top -= overBottom;\n                    // adjust based on position and margin\n                } else {\n                    position.top = max(position.top - collisionPosTop, position.top);\n                }\n            }\n        },\n        flip: {\n            left: function (position, data) {\n                var within = data.within,\n                    withinOffset = within.offset.left + within.scrollLeft,\n                    outerWidth = within.width,\n                    offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\n                    collisionPosLeft = position.left - data.collisionPosition.marginLeft,\n                    overLeft = collisionPosLeft - offsetLeft,\n                    overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\n                    myOffset = data.my[0] === \"left\" ?\n                        -data.elemWidth :\n                        data.my[0] === \"right\" ?\n                            data.elemWidth :\n                            0,\n                    atOffset = data.at[0] === \"left\" ?\n                        data.targetWidth :\n                        data.at[0] === \"right\" ?\n                            -data.targetWidth :\n                            0,\n                    offset = -2 * data.offset[0],\n                    newOverRight,\n                    newOverLeft;\n\n                if (overLeft < 0) {\n                    newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth - outerWidth - withinOffset;\n                    if (newOverRight < 0 || newOverRight < abs(overLeft)) {\n                        position.left += myOffset + atOffset + offset;\n                    }\n                } else if (overRight > 0) {\n                    newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset + atOffset + offset - offsetLeft;\n                    if (newOverLeft > 0 || abs(newOverLeft) < overRight) {\n                        position.left += myOffset + atOffset + offset;\n                    }\n                }\n            },\n            top: function (position, data) {\n                var within = data.within,\n                    withinOffset = within.offset.top + within.scrollTop,\n                    outerHeight = within.height,\n                    offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\n                    collisionPosTop = position.top - data.collisionPosition.marginTop,\n                    overTop = collisionPosTop - offsetTop,\n                    overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\n                    top = data.my[1] === \"top\",\n                    myOffset = top ?\n                        -data.elemHeight :\n                        data.my[1] === \"bottom\" ?\n                            data.elemHeight :\n                            0,\n                    atOffset = data.at[1] === \"top\" ?\n                        data.targetHeight :\n                        data.at[1] === \"bottom\" ?\n                            -data.targetHeight :\n                            0,\n                    offset = -2 * data.offset[1],\n                    newOverTop,\n                    newOverBottom;\n                if (overTop < 0) {\n                    newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight - outerHeight - withinOffset;\n                    if ((position.top + myOffset + atOffset + offset) > overTop && (newOverBottom < 0 || newOverBottom < abs(overTop))) {\n                        position.top += myOffset + atOffset + offset;\n                    }\n                } else if (overBottom > 0) {\n                    newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset + offset - offsetTop;\n                    if ((position.top + myOffset + atOffset + offset) > overBottom && (newOverTop > 0 || abs(newOverTop) < overBottom)) {\n                        position.top += myOffset + atOffset + offset;\n                    }\n                }\n            }\n        },\n        flipfit: {\n            left: function () {\n                $.ui.position.flip.left.apply(this, arguments);\n                $.ui.position.fit.left.apply(this, arguments);\n            },\n            top: function () {\n                $.ui.position.flip.top.apply(this, arguments);\n                $.ui.position.fit.top.apply(this, arguments);\n            }\n        }\n    };\n\n// fraction support test\n    (function () {\n        var testElement, testElementParent, testElementStyle, offsetLeft, i,\n            body = document.getElementsByTagName(\"body\")[0],\n            div = document.createElement(\"div\");\n\n        //Create a \"fake body\" for testing based on method used in jQuery.support\n        testElement = document.createElement(body ? \"div\" : \"body\");\n        testElementStyle = {\n            visibility: \"hidden\",\n            width: 0,\n            height: 0,\n            border: 0,\n            margin: 0,\n            background: \"none\"\n        };\n        if (body) {\n            $.extend(testElementStyle, {\n                position: \"absolute\",\n                left: \"-1000px\",\n                top: \"-1000px\"\n            });\n        }\n        for (i in testElementStyle) {\n            testElement.style[i] = testElementStyle[i];\n        }\n        testElement.appendChild(div);\n        testElementParent = body || document.documentElement;\n        testElementParent.insertBefore(testElement, testElementParent.firstChild);\n\n        div.style.cssText = \"position: absolute; left: 10.7432222px;\";\n\n        offsetLeft = $(div).offset().left;\n        $.support.offsetFractions = offsetLeft > 10 && offsetLeft < 11;\n\n        testElement.innerHTML = \"\";\n        testElementParent.removeChild(testElement);\n    })();\n\n});\n","jquery/ui-modules/core.js":"/*!\n * jQuery UI Core - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/category/ui-core/\n */\ndefine([\n    'jquery'\n], function ($, undefined) {\n\n    var uuid = 0,\n        runiqueId = /^ui-id-\\d+$/;\n\n// $.ui might exist from components with no dependencies, e.g., $.ui.position\n    $.ui = $.ui || {};\n\n    $.extend($.ui, {\n        version: \"1.10.4\",\n\n        keyCode: {\n            BACKSPACE: 8,\n            COMMA: 188,\n            DELETE: 46,\n            DOWN: 40,\n            END: 35,\n            ENTER: 13,\n            ESCAPE: 27,\n            HOME: 36,\n            LEFT: 37,\n            NUMPAD_ADD: 107,\n            NUMPAD_DECIMAL: 110,\n            NUMPAD_DIVIDE: 111,\n            NUMPAD_ENTER: 108,\n            NUMPAD_MULTIPLY: 106,\n            NUMPAD_SUBTRACT: 109,\n            PAGE_DOWN: 34,\n            PAGE_UP: 33,\n            PERIOD: 190,\n            RIGHT: 39,\n            SPACE: 32,\n            TAB: 9,\n            UP: 38\n        }\n    });\n\n// plugins\n    $.fn.extend({\n        focus: (function (orig) {\n            return function (delay, fn) {\n                return typeof delay === \"number\" ?\n                    this.each(function () {\n                        var elem = this;\n                        setTimeout(function () {\n                            $(elem).focus();\n                            if (fn) {\n                                fn.call(elem);\n                            }\n                        }, delay);\n                    }) :\n                    orig.apply(this, arguments);\n            };\n        })($.fn.focus),\n\n        scrollParent: function () {\n            var scrollParent;\n            if (($.ui.ie && (/(static|relative)/).test(this.css(\"position\"))) || (/absolute/).test(this.css(\"position\"))) {\n                scrollParent = this.parents().filter(function () {\n                    return (/(relative|absolute|fixed)/).test($.css(this, \"position\")) && (/(auto|scroll)/).test($.css(this, \"overflow\") + $.css(this, \"overflow-y\") + $.css(this, \"overflow-x\"));\n                }).eq(0);\n            } else {\n                scrollParent = this.parents().filter(function () {\n                    return (/(auto|scroll)/).test($.css(this, \"overflow\") + $.css(this, \"overflow-y\") + $.css(this, \"overflow-x\"));\n                }).eq(0);\n            }\n\n            return (/fixed/).test(this.css(\"position\")) || !scrollParent.length ? $(document) : scrollParent;\n        },\n\n        zIndex: function (zIndex) {\n            if (zIndex !== undefined) {\n                return this.css(\"zIndex\", zIndex);\n            }\n\n            if (this.length) {\n                var elem = $(this[0]), position, value;\n                while (elem.length && elem[0] !== document) {\n                    // Ignore z-index if position is set to a value where z-index is ignored by the browser\n                    // This makes behavior of this function consistent across browsers\n                    // WebKit always returns auto if the element is positioned\n                    position = elem.css(\"position\");\n                    if (position === \"absolute\" || position === \"relative\" || position === \"fixed\") {\n                        // IE returns 0 when zIndex is not specified\n                        // other browsers return a string\n                        // we ignore the case of nested elements with an explicit value of 0\n                        // <div style=\"z-index: -10;\"><div style=\"z-index: 0;\"></div></div>\n                        value = parseInt(elem.css(\"zIndex\"), 10);\n                        if (!isNaN(value) && value !== 0) {\n                            return value;\n                        }\n                    }\n                    elem = elem.parent();\n                }\n            }\n\n            return 0;\n        },\n\n        uniqueId: function () {\n            return this.each(function () {\n                if (!this.id) {\n                    this.id = \"ui-id-\" + (++uuid);\n                }\n            });\n        },\n\n        removeUniqueId: function () {\n            return this.each(function () {\n                if (runiqueId.test(this.id)) {\n                    $(this).removeAttr(\"id\");\n                }\n            });\n        }\n    });\n\n// selectors\n    function focusable(element, isTabIndexNotNaN) {\n        var map, mapName, img,\n            nodeName = element.nodeName.toLowerCase();\n        if (\"area\" === nodeName) {\n            map = element.parentNode;\n            mapName = map.name;\n            if (!element.href || !mapName || map.nodeName.toLowerCase() !== \"map\") {\n                return false;\n            }\n            img = $(\"img[usemap=#\" + mapName + \"]\")[0];\n            return !!img && visible(img);\n        }\n        return (/input|select|textarea|button|object/.test(nodeName) ?\n            !element.disabled :\n            \"a\" === nodeName ?\n                element.href || isTabIndexNotNaN :\n                isTabIndexNotNaN) &&\n            // the element and all of its ancestors must be visible\n            visible(element);\n    }\n\n    function visible(element) {\n        return $.expr.filters.visible(element) &&\n            !$(element).parents().addBack().filter(function () {\n                return $.css(this, \"visibility\") === \"hidden\";\n            }).length;\n    }\n\n    $.extend($.expr[\":\"], {\n        data: $.expr.createPseudo ?\n            $.expr.createPseudo(function (dataName) {\n                return function (elem) {\n                    return !!$.data(elem, dataName);\n                };\n            }) :\n            // support: jQuery <1.8\n            function (elem, i, match) {\n                return !!$.data(elem, match[3]);\n            },\n\n        focusable: function (element) {\n            return focusable(element, !isNaN($.attr(element, \"tabindex\")));\n        },\n\n        tabbable: function (element) {\n            var tabIndex = $.attr(element, \"tabindex\"),\n                isTabIndexNaN = isNaN(tabIndex);\n            return (isTabIndexNaN || tabIndex >= 0) && focusable(element, !isTabIndexNaN);\n        }\n    });\n\n// support: jQuery <1.8\n    if (!$(\"<a>\").outerWidth(1).jquery) {\n        $.each([\"Width\", \"Height\"], function (i, name) {\n            var side = name === \"Width\" ? [\"Left\", \"Right\"] : [\"Top\", \"Bottom\"],\n                type = name.toLowerCase(),\n                orig = {\n                    innerWidth: $.fn.innerWidth,\n                    innerHeight: $.fn.innerHeight,\n                    outerWidth: $.fn.outerWidth,\n                    outerHeight: $.fn.outerHeight\n                };\n\n            function reduce(elem, size, border, margin) {\n                $.each(side, function () {\n                    size -= parseFloat($.css(elem, \"padding\" + this)) || 0;\n                    if (border) {\n                        size -= parseFloat($.css(elem, \"border\" + this + \"Width\")) || 0;\n                    }\n                    if (margin) {\n                        size -= parseFloat($.css(elem, \"margin\" + this)) || 0;\n                    }\n                });\n                return size;\n            }\n\n            $.fn[\"inner\" + name] = function (size) {\n                if (size === undefined) {\n                    return orig[\"inner\" + name].call(this);\n                }\n\n                return this.each(function () {\n                    $(this).css(type, reduce(this, size) + \"px\");\n                });\n            };\n\n            $.fn[\"outer\" + name] = function (size, margin) {\n                if (typeof size !== \"number\") {\n                    return orig[\"outer\" + name].call(this, size);\n                }\n\n                return this.each(function () {\n                    $(this).css(type, reduce(this, size, true, margin) + \"px\");\n                });\n            };\n        });\n    }\n\n// support: jQuery <1.8\n    if (!$.fn.addBack) {\n        $.fn.addBack = function (selector) {\n            return this.add(selector == null ?\n                this.prevObject : this.prevObject.filter(selector)\n            );\n        };\n    }\n\n// support: jQuery 1.6.1, 1.6.2 (http://bugs.jquery.com/ticket/9413)\n    if ($(\"<a>\").data(\"a-b\", \"a\").removeData(\"a-b\").data(\"a-b\")) {\n        $.fn.removeData = (function (removeData) {\n            return function (key) {\n                if (arguments.length) {\n                    return removeData.call(this, $.camelCase(key));\n                } else {\n                    return removeData.call(this);\n                }\n            };\n        })($.fn.removeData);\n    }\n\n\n// deprecated\n    $.ui.ie = !!/msie [\\w.]+/.exec(navigator.userAgent.toLowerCase());\n\n    $.support.selectstart = \"onselectstart\" in document.createElement(\"div\");\n    $.fn.extend({\n        disableSelection: function () {\n            return this.bind(($.support.selectstart ? \"selectstart\" : \"mousedown\") +\n                \".ui-disableSelection\", function (event) {\n                event.preventDefault();\n            });\n        },\n\n        enableSelection: function () {\n            return this.unbind(\".ui-disableSelection\");\n        }\n    });\n\n    $.extend($.ui, {\n        // $.ui.plugin is deprecated. Use $.widget() extensions instead.\n        plugin: {\n            add: function (module, option, set) {\n                var i,\n                    proto = $.ui[module].prototype;\n                for (i in set) {\n                    proto.plugins[i] = proto.plugins[i] || [];\n                    proto.plugins[i].push([option, set[i]]);\n                }\n            },\n            call: function (instance, name, args) {\n                var i,\n                    set = instance.plugins[name];\n                if (!set || !instance.element[0].parentNode || instance.element[0].parentNode.nodeType === 11) {\n                    return;\n                }\n\n                for (i = 0; i < set.length; i++) {\n                    if (instance.options[set[i][0]]) {\n                        set[i][1].apply(instance.element, args);\n                    }\n                }\n            }\n        },\n\n        // only used by resizable\n        hasScroll: function (el, a) {\n\n            //If overflow is hidden, the element might have extra content, but the user wants to hide it\n            if ($(el).css(\"overflow\") === \"hidden\") {\n                return false;\n            }\n\n            var scroll = (a && a === \"left\") ? \"scrollLeft\" : \"scrollTop\",\n                has = false;\n\n            if (el[scroll] > 0) {\n                return true;\n            }\n\n            // TODO: determine which cases actually cause this to happen\n            // if the element doesn't have the scroll set, see if it's possible to\n            // set the scroll\n            el[scroll] = 1;\n            has = (el[scroll] > 0);\n            el[scroll] = 0;\n            return has;\n        }\n    });\n\n});\n","jquery/ui-modules/draggable.js":"/*!\n * jQuery UI Draggable - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/draggable/\n *\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/core',\n    'jquery-ui-modules/mouse'\n], function ($, undefined) {\n\n    $.widget(\"ui.draggable\", $.ui.mouse, {\n        version: \"1.10.4\",\n        widgetEventPrefix: \"drag\",\n        options: {\n            addClasses: true,\n            appendTo: \"parent\",\n            axis: false,\n            connectToSortable: false,\n            containment: false,\n            cursor: \"auto\",\n            cursorAt: false,\n            grid: false,\n            handle: false,\n            helper: \"original\",\n            iframeFix: false,\n            opacity: false,\n            refreshPositions: false,\n            revert: false,\n            revertDuration: 500,\n            scope: \"default\",\n            scroll: true,\n            scrollSensitivity: 20,\n            scrollSpeed: 20,\n            snap: false,\n            snapMode: \"both\",\n            snapTolerance: 20,\n            stack: false,\n            zIndex: false,\n\n            // callbacks\n            drag: null,\n            start: null,\n            stop: null\n        },\n        _create: function () {\n\n            if (this.options.helper === \"original\" && !(/^(?:r|a|f)/).test(this.element.css(\"position\"))) {\n                this.element[0].style.position = \"relative\";\n            }\n            if (this.options.addClasses) {\n                this.element.addClass(\"ui-draggable\");\n            }\n            if (this.options.disabled) {\n                this.element.addClass(\"ui-draggable-disabled\");\n            }\n\n            this._mouseInit();\n\n        },\n\n        _destroy: function () {\n            this.element.removeClass(\"ui-draggable ui-draggable-dragging ui-draggable-disabled\");\n            this._mouseDestroy();\n        },\n\n        _mouseCapture: function (event) {\n\n            var o = this.options;\n\n            // among others, prevent a drag on a resizable-handle\n            if (this.helper || o.disabled || $(event.target).closest(\".ui-resizable-handle\").length > 0) {\n                return false;\n            }\n\n            //Quit if we're not on a valid handle\n            this.handle = this._getHandle(event);\n            if (!this.handle) {\n                return false;\n            }\n\n            $(o.iframeFix === true ? \"iframe\" : o.iframeFix).each(function () {\n                $(\"<div class='ui-draggable-iframeFix' style='background: #fff;'></div>\")\n                    .css({\n                        width: this.offsetWidth + \"px\", height: this.offsetHeight + \"px\",\n                        position: \"absolute\", opacity: \"0.001\", zIndex: 1000\n                    })\n                    .css($(this).offset())\n                    .appendTo(\"body\");\n            });\n\n            return true;\n\n        },\n\n        _mouseStart: function (event) {\n\n            var o = this.options;\n\n            //Create and append the visible helper\n            this.helper = this._createHelper(event);\n\n            this.helper.addClass(\"ui-draggable-dragging\");\n\n            //Cache the helper size\n            this._cacheHelperProportions();\n\n            //If ddmanager is used for droppables, set the global draggable\n            if ($.ui.ddmanager) {\n                $.ui.ddmanager.current = this;\n            }\n\n            /*\n             * - Position generation -\n             * This block generates everything position related - it's the core of draggables.\n             */\n\n            //Cache the margins of the original element\n            this._cacheMargins();\n\n            //Store the helper's css position\n            this.cssPosition = this.helper.css(\"position\");\n            this.scrollParent = this.helper.scrollParent();\n            this.offsetParent = this.helper.offsetParent();\n            this.offsetParentCssPosition = this.offsetParent.css(\"position\");\n\n            //The element's absolute position on the page minus margins\n            this.offset = this.positionAbs = this.element.offset();\n            this.offset = {\n                top: this.offset.top - this.margins.top,\n                left: this.offset.left - this.margins.left\n            };\n\n            //Reset scroll cache\n            this.offset.scroll = false;\n\n            $.extend(this.offset, {\n                click: { //Where the click happened, relative to the element\n                    left: event.pageX - this.offset.left,\n                    top: event.pageY - this.offset.top\n                },\n                parent: this._getParentOffset(),\n                relative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper\n            });\n\n            //Generate the original position\n            this.originalPosition = this.position = this._generatePosition(event);\n            this.originalPageX = event.pageX;\n            this.originalPageY = event.pageY;\n\n            //Adjust the mouse offset relative to the helper if \"cursorAt\" is supplied\n            (o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt));\n\n            //Set a containment if given in the options\n            this._setContainment();\n\n            //Trigger event + callbacks\n            if (this._trigger(\"start\", event) === false) {\n                this._clear();\n                return false;\n            }\n\n            //Recache the helper size\n            this._cacheHelperProportions();\n\n            //Prepare the droppable offsets\n            if ($.ui.ddmanager && !o.dropBehaviour) {\n                $.ui.ddmanager.prepareOffsets(this, event);\n            }\n\n\n            this._mouseDrag(event, true); //Execute the drag once - this causes the helper not to be visible before getting its correct position\n\n            //If the ddmanager is used for droppables, inform the manager that dragging has started (see #5003)\n            if ($.ui.ddmanager) {\n                $.ui.ddmanager.dragStart(this, event);\n            }\n\n            return true;\n        },\n\n        _mouseDrag: function (event, noPropagation) {\n            // reset any necessary cached properties (see #5009)\n            if (this.offsetParentCssPosition === \"fixed\") {\n                this.offset.parent = this._getParentOffset();\n            }\n\n            //Compute the helpers position\n            this.position = this._generatePosition(event);\n            this.positionAbs = this._convertPositionTo(\"absolute\");\n\n            //Call plugins and callbacks and use the resulting position if something is returned\n            if (!noPropagation) {\n                var ui = this._uiHash();\n                if (this._trigger(\"drag\", event, ui) === false) {\n                    this._mouseUp({});\n                    return false;\n                }\n                this.position = ui.position;\n            }\n\n            if (!this.options.axis || this.options.axis !== \"y\") {\n                this.helper[0].style.left = this.position.left + \"px\";\n            }\n            if (!this.options.axis || this.options.axis !== \"x\") {\n                this.helper[0].style.top = this.position.top + \"px\";\n            }\n            if ($.ui.ddmanager) {\n                $.ui.ddmanager.drag(this, event);\n            }\n\n            return false;\n        },\n\n        _mouseStop: function (event) {\n\n            //If we are using droppables, inform the manager about the drop\n            var that = this,\n                dropped = false;\n            if ($.ui.ddmanager && !this.options.dropBehaviour) {\n                dropped = $.ui.ddmanager.drop(this, event);\n            }\n\n            //if a drop comes from outside (a sortable)\n            if (this.dropped) {\n                dropped = this.dropped;\n                this.dropped = false;\n            }\n\n            //if the original element is no longer in the DOM don't bother to continue (see #8269)\n            if (this.options.helper === \"original\" && !$.contains(this.element[0].ownerDocument, this.element[0])) {\n                return false;\n            }\n\n            if ((this.options.revert === \"invalid\" && !dropped) || (this.options.revert === \"valid\" && dropped) || this.options.revert === true || ($.isFunction(this.options.revert) && this.options.revert.call(this.element, dropped))) {\n                $(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () {\n                    if (that._trigger(\"stop\", event) !== false) {\n                        that._clear();\n                    }\n                });\n            } else {\n                if (this._trigger(\"stop\", event) !== false) {\n                    this._clear();\n                }\n            }\n\n            return false;\n        },\n\n        _mouseUp: function (event) {\n            //Remove frame helpers\n            $(\"div.ui-draggable-iframeFix\").each(function () {\n                this.parentNode.removeChild(this);\n            });\n\n            //If the ddmanager is used for droppables, inform the manager that dragging has stopped (see #5003)\n            if ($.ui.ddmanager) {\n                $.ui.ddmanager.dragStop(this, event);\n            }\n\n            return $.ui.mouse.prototype._mouseUp.call(this, event);\n        },\n\n        cancel: function () {\n\n            if (this.helper.is(\".ui-draggable-dragging\")) {\n                this._mouseUp({});\n            } else {\n                this._clear();\n            }\n\n            return this;\n\n        },\n\n        _getHandle: function (event) {\n            return this.options.handle ?\n                !!$(event.target).closest(this.element.find(this.options.handle)).length :\n                true;\n        },\n\n        _createHelper: function (event) {\n\n            var o = this.options,\n                helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event])) : (o.helper === \"clone\" ? this.element.clone().removeAttr(\"id\") : this.element);\n\n            if (!helper.parents(\"body\").length) {\n                helper.appendTo((o.appendTo === \"parent\" ? this.element[0].parentNode : o.appendTo));\n            }\n\n            if (helper[0] !== this.element[0] && !(/(fixed|absolute)/).test(helper.css(\"position\"))) {\n                helper.css(\"position\", \"absolute\");\n            }\n\n            return helper;\n\n        },\n\n        _adjustOffsetFromHelper: function (obj) {\n            if (typeof obj === \"string\") {\n                obj = obj.split(\" \");\n            }\n            if ($.isArray(obj)) {\n                obj = {left: +obj[0], top: +obj[1] || 0};\n            }\n            if (\"left\" in obj) {\n                this.offset.click.left = obj.left + this.margins.left;\n            }\n            if (\"right\" in obj) {\n                this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;\n            }\n            if (\"top\" in obj) {\n                this.offset.click.top = obj.top + this.margins.top;\n            }\n            if (\"bottom\" in obj) {\n                this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;\n            }\n        },\n\n        _getParentOffset: function () {\n\n            //Get the offsetParent and cache its position\n            var po = this.offsetParent.offset();\n\n            // This is a special case where we need to modify a offset calculated on start, since the following happened:\n            // 1. The position of the helper is absolute, so it's position is calculated based on the next positioned parent\n            // 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't the document, which means that\n            //    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag\n            if (this.cssPosition === \"absolute\" && this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) {\n                po.left += this.scrollParent.scrollLeft();\n                po.top += this.scrollParent.scrollTop();\n            }\n\n            //This needs to be actually done for all browsers, since pageX/pageY includes this information\n            //Ugly IE fix\n            if ((this.offsetParent[0] === document.body) ||\n                (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === \"html\" && $.ui.ie)) {\n                po = {top: 0, left: 0};\n            }\n\n            return {\n                top: po.top + (parseInt(this.offsetParent.css(\"borderTopWidth\"), 10) || 0),\n                left: po.left + (parseInt(this.offsetParent.css(\"borderLeftWidth\"), 10) || 0)\n            };\n\n        },\n\n        _getRelativeOffset: function () {\n\n            if (this.cssPosition === \"relative\") {\n                var p = this.element.position();\n                return {\n                    top: p.top - (parseInt(this.helper.css(\"top\"), 10) || 0) + this.scrollParent.scrollTop(),\n                    left: p.left - (parseInt(this.helper.css(\"left\"), 10) || 0) + this.scrollParent.scrollLeft()\n                };\n            } else {\n                return {top: 0, left: 0};\n            }\n\n        },\n\n        _cacheMargins: function () {\n            this.margins = {\n                left: (parseInt(this.element.css(\"marginLeft\"), 10) || 0),\n                top: (parseInt(this.element.css(\"marginTop\"), 10) || 0),\n                right: (parseInt(this.element.css(\"marginRight\"), 10) || 0),\n                bottom: (parseInt(this.element.css(\"marginBottom\"), 10) || 0)\n            };\n        },\n\n        _cacheHelperProportions: function () {\n            this.helperProportions = {\n                width: this.helper.outerWidth(),\n                height: this.helper.outerHeight()\n            };\n        },\n\n        _setContainment: function () {\n\n            var over, c, ce,\n                o = this.options;\n\n            if (!o.containment) {\n                this.containment = null;\n                return;\n            }\n\n            if (o.containment === \"window\") {\n                this.containment = [\n                    $(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left,\n                    $(window).scrollTop() - this.offset.relative.top - this.offset.parent.top,\n                    $(window).scrollLeft() + $(window).width() - this.helperProportions.width - this.margins.left,\n                    $(window).scrollTop() + ($(window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top\n                ];\n                return;\n            }\n\n            if (o.containment === \"document\") {\n                this.containment = [\n                    0,\n                    0,\n                    $(document).width() - this.helperProportions.width - this.margins.left,\n                    ($(document).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top\n                ];\n                return;\n            }\n\n            if (o.containment.constructor === Array) {\n                this.containment = o.containment;\n                return;\n            }\n\n            if (o.containment === \"parent\") {\n                o.containment = this.helper[0].parentNode;\n            }\n\n            c = $(o.containment);\n            ce = c[0];\n\n            if (!ce) {\n                return;\n            }\n\n            over = c.css(\"overflow\") !== \"hidden\";\n\n            this.containment = [\n                (parseInt(c.css(\"borderLeftWidth\"), 10) || 0) + (parseInt(c.css(\"paddingLeft\"), 10) || 0),\n                (parseInt(c.css(\"borderTopWidth\"), 10) || 0) + (parseInt(c.css(\"paddingTop\"), 10) || 0),\n                (over ? Math.max(ce.scrollWidth, ce.offsetWidth) : ce.offsetWidth) - (parseInt(c.css(\"borderRightWidth\"), 10) || 0) - (parseInt(c.css(\"paddingRight\"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right,\n                (over ? Math.max(ce.scrollHeight, ce.offsetHeight) : ce.offsetHeight) - (parseInt(c.css(\"borderBottomWidth\"), 10) || 0) - (parseInt(c.css(\"paddingBottom\"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom\n            ];\n            this.relative_container = c;\n        },\n\n        _convertPositionTo: function (d, pos) {\n\n            if (!pos) {\n                pos = this.position;\n            }\n\n            var mod = d === \"absolute\" ? 1 : -1,\n                scroll = this.cssPosition === \"absolute\" && !(this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent;\n\n            //Cache the scroll\n            if (!this.offset.scroll) {\n                this.offset.scroll = {top: scroll.scrollTop(), left: scroll.scrollLeft()};\n            }\n\n            return {\n                top: (\n                    pos.top +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The absolute mouse position\n                    this.offset.relative.top * mod +\t\t\t\t\t\t\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\n                    this.offset.parent.top * mod -\t\t\t\t\t\t\t\t\t\t// The offsetParent's offset without borders (offset + border)\n                    ((this.cssPosition === \"fixed\" ? -this.scrollParent.scrollTop() : this.offset.scroll.top) * mod)\n                ),\n                left: (\n                    pos.left +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The absolute mouse position\n                    this.offset.relative.left * mod +\t\t\t\t\t\t\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\n                    this.offset.parent.left * mod -\t\t\t\t\t\t\t\t\t\t// The offsetParent's offset without borders (offset + border)\n                    ((this.cssPosition === \"fixed\" ? -this.scrollParent.scrollLeft() : this.offset.scroll.left) * mod)\n                )\n            };\n\n        },\n\n        _generatePosition: function (event) {\n\n            var containment, co, top, left,\n                o = this.options,\n                scroll = this.cssPosition === \"absolute\" && !(this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,\n                pageX = event.pageX,\n                pageY = event.pageY;\n\n            //Cache the scroll\n            if (!this.offset.scroll) {\n                this.offset.scroll = {top: scroll.scrollTop(), left: scroll.scrollLeft()};\n            }\n\n            /*\n             * - Position constraining -\n             * Constrain the position to a mix of grid, containment.\n             */\n\n            // If we are not dragging yet, we won't check for options\n            if (this.originalPosition) {\n                if (this.containment) {\n                    if (this.relative_container) {\n                        co = this.relative_container.offset();\n                        containment = [\n                            this.containment[0] + co.left,\n                            this.containment[1] + co.top,\n                            this.containment[2] + co.left,\n                            this.containment[3] + co.top\n                        ];\n                    } else {\n                        containment = this.containment;\n                    }\n\n                    if (event.pageX - this.offset.click.left < containment[0]) {\n                        pageX = containment[0] + this.offset.click.left;\n                    }\n                    if (event.pageY - this.offset.click.top < containment[1]) {\n                        pageY = containment[1] + this.offset.click.top;\n                    }\n                    if (event.pageX - this.offset.click.left > containment[2]) {\n                        pageX = containment[2] + this.offset.click.left;\n                    }\n                    if (event.pageY - this.offset.click.top > containment[3]) {\n                        pageY = containment[3] + this.offset.click.top;\n                    }\n                }\n\n                if (o.grid) {\n                    //Check for grid elements set to 0 to prevent divide by 0 error causing invalid argument errors in IE (see ticket #6950)\n                    top = o.grid[1] ? this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1] : this.originalPageY;\n                    pageY = containment ? ((top - this.offset.click.top >= containment[1] || top - this.offset.click.top > containment[3]) ? top : ((top - this.offset.click.top >= containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;\n\n                    left = o.grid[0] ? this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0] : this.originalPageX;\n                    pageX = containment ? ((left - this.offset.click.left >= containment[0] || left - this.offset.click.left > containment[2]) ? left : ((left - this.offset.click.left >= containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;\n                }\n\n            }\n\n            return {\n                top: (\n                    pageY -\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The absolute mouse position\n                    this.offset.click.top -\t\t\t\t\t\t\t\t\t\t\t\t// Click offset (relative to the element)\n                    this.offset.relative.top -\t\t\t\t\t\t\t\t\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\n                    this.offset.parent.top +\t\t\t\t\t\t\t\t\t\t\t\t// The offsetParent's offset without borders (offset + border)\n                    (this.cssPosition === \"fixed\" ? -this.scrollParent.scrollTop() : this.offset.scroll.top)\n                ),\n                left: (\n                    pageX -\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The absolute mouse position\n                    this.offset.click.left -\t\t\t\t\t\t\t\t\t\t\t\t// Click offset (relative to the element)\n                    this.offset.relative.left -\t\t\t\t\t\t\t\t\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\n                    this.offset.parent.left +\t\t\t\t\t\t\t\t\t\t\t\t// The offsetParent's offset without borders (offset + border)\n                    (this.cssPosition === \"fixed\" ? -this.scrollParent.scrollLeft() : this.offset.scroll.left)\n                )\n            };\n\n        },\n\n        _clear: function () {\n            this.helper.removeClass(\"ui-draggable-dragging\");\n            if (this.helper[0] !== this.element[0] && !this.cancelHelperRemoval) {\n                this.helper.remove();\n            }\n            this.helper = null;\n            this.cancelHelperRemoval = false;\n        },\n\n        // From now on bulk stuff - mainly helpers\n\n        _trigger: function (type, event, ui) {\n            ui = ui || this._uiHash();\n            $.ui.plugin.call(this, type, [event, ui]);\n            //The absolute position has to be recalculated after plugins\n            if (type === \"drag\") {\n                this.positionAbs = this._convertPositionTo(\"absolute\");\n            }\n            return $.Widget.prototype._trigger.call(this, type, event, ui);\n        },\n\n        plugins: {},\n\n        _uiHash: function () {\n            return {\n                helper: this.helper,\n                position: this.position,\n                originalPosition: this.originalPosition,\n                offset: this.positionAbs\n            };\n        }\n\n    });\n\n    $.ui.plugin.add(\"draggable\", \"connectToSortable\", {\n        start: function (event, ui) {\n\n            var inst = $(this).data(\"ui-draggable\"), o = inst.options,\n                uiSortable = $.extend({}, ui, {item: inst.element});\n            inst.sortables = [];\n            $(o.connectToSortable).each(function () {\n                var sortable = $.data(this, \"ui-sortable\");\n                if (sortable && !sortable.options.disabled) {\n                    inst.sortables.push({\n                        instance: sortable,\n                        shouldRevert: sortable.options.revert\n                    });\n                    sortable.refreshPositions();\t// Call the sortable's refreshPositions at drag start to refresh the containerCache since the sortable container cache is used in drag and needs to be up to date (this will ensure it's initialised as well as being kept in step with any changes that might have happened on the page).\n                    sortable._trigger(\"activate\", event, uiSortable);\n                }\n            });\n\n        },\n        stop: function (event, ui) {\n\n            //If we are still over the sortable, we fake the stop event of the sortable, but also remove helper\n            var inst = $(this).data(\"ui-draggable\"),\n                uiSortable = $.extend({}, ui, {item: inst.element});\n\n            $.each(inst.sortables, function () {\n                if (this.instance.isOver) {\n\n                    this.instance.isOver = 0;\n\n                    inst.cancelHelperRemoval = true; //Don't remove the helper in the draggable instance\n                    this.instance.cancelHelperRemoval = false; //Remove it in the sortable instance (so sortable plugins like revert still work)\n\n                    //The sortable revert is supported, and we have to set a temporary dropped variable on the draggable to support revert: \"valid/invalid\"\n                    if (this.shouldRevert) {\n                        this.instance.options.revert = this.shouldRevert;\n                    }\n\n                    //Trigger the stop of the sortable\n                    this.instance._mouseStop(event);\n\n                    this.instance.options.helper = this.instance.options._helper;\n\n                    //If the helper has been the original item, restore properties in the sortable\n                    if (inst.options.helper === \"original\") {\n                        this.instance.currentItem.css({top: \"auto\", left: \"auto\"});\n                    }\n\n                } else {\n                    this.instance.cancelHelperRemoval = false; //Remove the helper in the sortable instance\n                    this.instance._trigger(\"deactivate\", event, uiSortable);\n                }\n\n            });\n\n        },\n        drag: function (event, ui) {\n\n            var inst = $(this).data(\"ui-draggable\"), that = this;\n\n            $.each(inst.sortables, function () {\n\n                var innermostIntersecting = false,\n                    thisSortable = this;\n\n                //Copy over some variables to allow calling the sortable's native _intersectsWith\n                this.instance.positionAbs = inst.positionAbs;\n                this.instance.helperProportions = inst.helperProportions;\n                this.instance.offset.click = inst.offset.click;\n\n                if (this.instance._intersectsWith(this.instance.containerCache)) {\n                    innermostIntersecting = true;\n                    $.each(inst.sortables, function () {\n                        this.instance.positionAbs = inst.positionAbs;\n                        this.instance.helperProportions = inst.helperProportions;\n                        this.instance.offset.click = inst.offset.click;\n                        if (this !== thisSortable &&\n                            this.instance._intersectsWith(this.instance.containerCache) &&\n                            $.contains(thisSortable.instance.element[0], this.instance.element[0])\n                        ) {\n                            innermostIntersecting = false;\n                        }\n                        return innermostIntersecting;\n                    });\n                }\n\n\n                if (innermostIntersecting) {\n                    //If it intersects, we use a little isOver variable and set it once, so our move-in stuff gets fired only once\n                    if (!this.instance.isOver) {\n\n                        this.instance.isOver = 1;\n                        //Now we fake the start of dragging for the sortable instance,\n                        //by cloning the list group item, appending it to the sortable and using it as inst.currentItem\n                        //We can then fire the start event of the sortable with our passed browser event, and our own helper (so it doesn't create a new one)\n                        this.instance.currentItem = $(that).clone().removeAttr(\"id\").appendTo(this.instance.element).data(\"ui-sortable-item\", true);\n                        this.instance.options._helper = this.instance.options.helper; //Store helper option to later restore it\n                        this.instance.options.helper = function () {\n                            return ui.helper[0];\n                        };\n\n                        event.target = this.instance.currentItem[0];\n                        this.instance._mouseCapture(event, true);\n                        this.instance._mouseStart(event, true, true);\n\n                        //Because the browser event is way off the new appended portlet, we modify a couple of variables to reflect the changes\n                        this.instance.offset.click.top = inst.offset.click.top;\n                        this.instance.offset.click.left = inst.offset.click.left;\n                        this.instance.offset.parent.left -= inst.offset.parent.left - this.instance.offset.parent.left;\n                        this.instance.offset.parent.top -= inst.offset.parent.top - this.instance.offset.parent.top;\n\n                        inst._trigger(\"toSortable\", event);\n                        inst.dropped = this.instance.element; //draggable revert needs that\n                        //hack so receive/update callbacks work (mostly)\n                        inst.currentItem = inst.element;\n                        this.instance.fromOutside = inst;\n\n                    }\n\n                    //Provided we did all the previous steps, we can fire the drag event of the sortable on every draggable drag, when it intersects with the sortable\n                    if (this.instance.currentItem) {\n                        this.instance._mouseDrag(event);\n                    }\n\n                } else {\n\n                    //If it doesn't intersect with the sortable, and it intersected before,\n                    //we fake the drag stop of the sortable, but make sure it doesn't remove the helper by using cancelHelperRemoval\n                    if (this.instance.isOver) {\n\n                        this.instance.isOver = 0;\n                        this.instance.cancelHelperRemoval = true;\n\n                        //Prevent reverting on this forced stop\n                        this.instance.options.revert = false;\n\n                        // The out event needs to be triggered independently\n                        this.instance._trigger(\"out\", event, this.instance._uiHash(this.instance));\n\n                        this.instance._mouseStop(event, true);\n                        this.instance.options.helper = this.instance.options._helper;\n\n                        //Now we remove our currentItem, the list group clone again, and the placeholder, and animate the helper back to it's original size\n                        this.instance.currentItem.remove();\n                        if (this.instance.placeholder) {\n                            this.instance.placeholder.remove();\n                        }\n\n                        inst._trigger(\"fromSortable\", event);\n                        inst.dropped = false; //draggable revert needs that\n                    }\n\n                }\n\n            });\n\n        }\n    });\n\n    $.ui.plugin.add(\"draggable\", \"cursor\", {\n        start: function () {\n            var t = $(\"body\"), o = $(this).data(\"ui-draggable\").options;\n            if (t.css(\"cursor\")) {\n                o._cursor = t.css(\"cursor\");\n            }\n            t.css(\"cursor\", o.cursor);\n        },\n        stop: function () {\n            var o = $(this).data(\"ui-draggable\").options;\n            if (o._cursor) {\n                $(\"body\").css(\"cursor\", o._cursor);\n            }\n        }\n    });\n\n    $.ui.plugin.add(\"draggable\", \"opacity\", {\n        start: function (event, ui) {\n            var t = $(ui.helper), o = $(this).data(\"ui-draggable\").options;\n            if (t.css(\"opacity\")) {\n                o._opacity = t.css(\"opacity\");\n            }\n            t.css(\"opacity\", o.opacity);\n        },\n        stop: function (event, ui) {\n            var o = $(this).data(\"ui-draggable\").options;\n            if (o._opacity) {\n                $(ui.helper).css(\"opacity\", o._opacity);\n            }\n        }\n    });\n\n    $.ui.plugin.add(\"draggable\", \"scroll\", {\n        start: function () {\n            var i = $(this).data(\"ui-draggable\");\n            if (i.scrollParent[0] !== document && i.scrollParent[0].tagName !== \"HTML\") {\n                i.overflowOffset = i.scrollParent.offset();\n            }\n        },\n        drag: function (event) {\n\n            var i = $(this).data(\"ui-draggable\"), o = i.options, scrolled = false;\n\n            if (i.scrollParent[0] !== document && i.scrollParent[0].tagName !== \"HTML\") {\n\n                if (!o.axis || o.axis !== \"x\") {\n                    if ((i.overflowOffset.top + i.scrollParent[0].offsetHeight) - event.pageY < o.scrollSensitivity) {\n                        i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop + o.scrollSpeed;\n                    } else if (event.pageY - i.overflowOffset.top < o.scrollSensitivity) {\n                        i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop - o.scrollSpeed;\n                    }\n                }\n\n                if (!o.axis || o.axis !== \"y\") {\n                    if ((i.overflowOffset.left + i.scrollParent[0].offsetWidth) - event.pageX < o.scrollSensitivity) {\n                        i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft + o.scrollSpeed;\n                    } else if (event.pageX - i.overflowOffset.left < o.scrollSensitivity) {\n                        i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft - o.scrollSpeed;\n                    }\n                }\n\n            } else {\n\n                if (!o.axis || o.axis !== \"x\") {\n                    if (event.pageY - $(document).scrollTop() < o.scrollSensitivity) {\n                        scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);\n                    } else if ($(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity) {\n                        scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);\n                    }\n                }\n\n                if (!o.axis || o.axis !== \"y\") {\n                    if (event.pageX - $(document).scrollLeft() < o.scrollSensitivity) {\n                        scrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);\n                    } else if ($(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity) {\n                        scrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);\n                    }\n                }\n\n            }\n\n            if (scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) {\n                $.ui.ddmanager.prepareOffsets(i, event);\n            }\n\n        }\n    });\n\n    $.ui.plugin.add(\"draggable\", \"snap\", {\n        start: function () {\n\n            var i = $(this).data(\"ui-draggable\"),\n                o = i.options;\n\n            i.snapElements = [];\n\n            $(o.snap.constructor !== String ? (o.snap.items || \":data(ui-draggable)\") : o.snap).each(function () {\n                var $t = $(this),\n                    $o = $t.offset();\n                if (this !== i.element[0]) {\n                    i.snapElements.push({\n                        item: this,\n                        width: $t.outerWidth(), height: $t.outerHeight(),\n                        top: $o.top, left: $o.left\n                    });\n                }\n            });\n\n        },\n        drag: function (event, ui) {\n\n            var ts, bs, ls, rs, l, r, t, b, i, first,\n                inst = $(this).data(\"ui-draggable\"),\n                o = inst.options,\n                d = o.snapTolerance,\n                x1 = ui.offset.left, x2 = x1 + inst.helperProportions.width,\n                y1 = ui.offset.top, y2 = y1 + inst.helperProportions.height;\n\n            for (i = inst.snapElements.length - 1; i >= 0; i--) {\n\n                l = inst.snapElements[i].left;\n                r = l + inst.snapElements[i].width;\n                t = inst.snapElements[i].top;\n                b = t + inst.snapElements[i].height;\n\n                if (x2 < l - d || x1 > r + d || y2 < t - d || y1 > b + d || !$.contains(inst.snapElements[i].item.ownerDocument, inst.snapElements[i].item)) {\n                    if (inst.snapElements[i].snapping) {\n                        (inst.options.snap.release && inst.options.snap.release.call(inst.element, event, $.extend(inst._uiHash(), {snapItem: inst.snapElements[i].item})));\n                    }\n                    inst.snapElements[i].snapping = false;\n                    continue;\n                }\n\n                if (o.snapMode !== \"inner\") {\n                    ts = Math.abs(t - y2) <= d;\n                    bs = Math.abs(b - y1) <= d;\n                    ls = Math.abs(l - x2) <= d;\n                    rs = Math.abs(r - x1) <= d;\n                    if (ts) {\n                        ui.position.top = inst._convertPositionTo(\"relative\", {\n                            top: t - inst.helperProportions.height,\n                            left: 0\n                        }).top - inst.margins.top;\n                    }\n                    if (bs) {\n                        ui.position.top = inst._convertPositionTo(\"relative\", {top: b, left: 0}).top - inst.margins.top;\n                    }\n                    if (ls) {\n                        ui.position.left = inst._convertPositionTo(\"relative\", {\n                            top: 0,\n                            left: l - inst.helperProportions.width\n                        }).left - inst.margins.left;\n                    }\n                    if (rs) {\n                        ui.position.left = inst._convertPositionTo(\"relative\", {\n                            top: 0,\n                            left: r\n                        }).left - inst.margins.left;\n                    }\n                }\n\n                first = (ts || bs || ls || rs);\n\n                if (o.snapMode !== \"outer\") {\n                    ts = Math.abs(t - y1) <= d;\n                    bs = Math.abs(b - y2) <= d;\n                    ls = Math.abs(l - x1) <= d;\n                    rs = Math.abs(r - x2) <= d;\n                    if (ts) {\n                        ui.position.top = inst._convertPositionTo(\"relative\", {top: t, left: 0}).top - inst.margins.top;\n                    }\n                    if (bs) {\n                        ui.position.top = inst._convertPositionTo(\"relative\", {\n                            top: b - inst.helperProportions.height,\n                            left: 0\n                        }).top - inst.margins.top;\n                    }\n                    if (ls) {\n                        ui.position.left = inst._convertPositionTo(\"relative\", {\n                            top: 0,\n                            left: l\n                        }).left - inst.margins.left;\n                    }\n                    if (rs) {\n                        ui.position.left = inst._convertPositionTo(\"relative\", {\n                            top: 0,\n                            left: r - inst.helperProportions.width\n                        }).left - inst.margins.left;\n                    }\n                }\n\n                if (!inst.snapElements[i].snapping && (ts || bs || ls || rs || first)) {\n                    (inst.options.snap.snap && inst.options.snap.snap.call(inst.element, event, $.extend(inst._uiHash(), {snapItem: inst.snapElements[i].item})));\n                }\n                inst.snapElements[i].snapping = (ts || bs || ls || rs || first);\n\n            }\n\n        }\n    });\n\n    $.ui.plugin.add(\"draggable\", \"stack\", {\n        start: function () {\n            var min,\n                o = this.data(\"ui-draggable\").options,\n                group = $.makeArray($(o.stack)).sort(function (a, b) {\n                    return (parseInt($(a).css(\"zIndex\"), 10) || 0) - (parseInt($(b).css(\"zIndex\"), 10) || 0);\n                });\n\n            if (!group.length) {\n                return;\n            }\n\n            min = parseInt($(group[0]).css(\"zIndex\"), 10) || 0;\n            $(group).each(function (i) {\n                $(this).css(\"zIndex\", min + i);\n            });\n            this.css(\"zIndex\", (min + group.length));\n        }\n    });\n\n    $.ui.plugin.add(\"draggable\", \"zIndex\", {\n        start: function (event, ui) {\n            var t = $(ui.helper), o = $(this).data(\"ui-draggable\").options;\n            if (t.css(\"zIndex\")) {\n                o._zIndex = t.css(\"zIndex\");\n            }\n            t.css(\"zIndex\", o.zIndex);\n        },\n        stop: function (event, ui) {\n            var o = $(this).data(\"ui-draggable\").options;\n            if (o._zIndex) {\n                $(ui.helper).css(\"zIndex\", o._zIndex);\n            }\n        }\n    });\n\n});\n","jquery/ui-modules/button.js":"/*!\n * jQuery UI Button - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/button/\n */\ndefine([\n    'jquery',\n    'jquery-ui-modules/core',\n    'jquery-ui-modules/widget'\n], function ($, undefined) {\n\n    var lastActive,\n        baseClasses = \"ui-button ui-widget ui-state-default ui-corner-all\",\n        typeClasses = \"ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only\",\n        formResetHandler = function () {\n            var form = $(this);\n            setTimeout(function () {\n                form.find(\":ui-button\").button(\"refresh\");\n            }, 1);\n        },\n        radioGroup = function (radio) {\n            var name = radio.name,\n                form = radio.form,\n                radios = $([]);\n            if (name) {\n                name = name.replace(/'/g, \"\\\\'\");\n                if (form) {\n                    radios = $(form).find(\"[name='\" + name + \"']\");\n                } else {\n                    radios = $(\"[name='\" + name + \"']\", radio.ownerDocument)\n                        .filter(function () {\n                            return !this.form;\n                        });\n                }\n            }\n            return radios;\n        };\n\n    $.widget(\"ui.button\", {\n        version: \"1.10.4\",\n        defaultElement: \"<button>\",\n        options: {\n            disabled: null,\n            text: true,\n            label: null,\n            icons: {\n                primary: null,\n                secondary: null\n            }\n        },\n        _create: function () {\n            this.element.closest(\"form\")\n                .unbind(\"reset\" + this.eventNamespace)\n                .bind(\"reset\" + this.eventNamespace, formResetHandler);\n\n            if (typeof this.options.disabled !== \"boolean\") {\n                this.options.disabled = !!this.element.prop(\"disabled\");\n            } else {\n                this.element.prop(\"disabled\", this.options.disabled);\n            }\n\n            this._determineButtonType();\n            this.hasTitle = !!this.buttonElement.attr(\"title\");\n\n            var that = this,\n                options = this.options,\n                toggleButton = this.type === \"checkbox\" || this.type === \"radio\",\n                activeClass = !toggleButton ? \"ui-state-active\" : \"\";\n\n            if (options.label === null) {\n                options.label = (this.type === \"input\" ? this.buttonElement.val() : this.buttonElement.html());\n            }\n\n            this._hoverable(this.buttonElement);\n\n            this.buttonElement\n                .addClass(baseClasses)\n                .attr(\"role\", \"button\")\n                .bind(\"mouseenter\" + this.eventNamespace, function () {\n                    if (options.disabled) {\n                        return;\n                    }\n                    if (this === lastActive) {\n                        $(this).addClass(\"ui-state-active\");\n                    }\n                })\n                .bind(\"mouseleave\" + this.eventNamespace, function () {\n                    if (options.disabled) {\n                        return;\n                    }\n                    $(this).removeClass(activeClass);\n                })\n                .bind(\"click\" + this.eventNamespace, function (event) {\n                    if (options.disabled) {\n                        event.preventDefault();\n                        event.stopImmediatePropagation();\n                    }\n                });\n\n            // Can't use _focusable() because the element that receives focus\n            // and the element that gets the ui-state-focus class are different\n            this._on({\n                focus: function () {\n                    this.buttonElement.addClass(\"ui-state-focus\");\n                },\n                blur: function () {\n                    this.buttonElement.removeClass(\"ui-state-focus\");\n                }\n            });\n\n            if (toggleButton) {\n                this.element.bind(\"change\" + this.eventNamespace, function () {\n                    that.refresh();\n                });\n            }\n\n            if (this.type === \"checkbox\") {\n                this.buttonElement.bind(\"click\" + this.eventNamespace, function () {\n                    if (options.disabled) {\n                        return false;\n                    }\n                });\n            } else if (this.type === \"radio\") {\n                this.buttonElement.bind(\"click\" + this.eventNamespace, function () {\n                    if (options.disabled) {\n                        return false;\n                    }\n                    $(this).addClass(\"ui-state-active\");\n                    that.buttonElement.attr(\"aria-pressed\", \"true\");\n\n                    var radio = that.element[0];\n                    radioGroup(radio)\n                        .not(radio)\n                        .map(function () {\n                            return $(this).button(\"widget\")[0];\n                        })\n                        .removeClass(\"ui-state-active\")\n                        .attr(\"aria-pressed\", \"false\");\n                });\n            } else {\n                this.buttonElement\n                    .bind(\"mousedown\" + this.eventNamespace, function () {\n                        if (options.disabled) {\n                            return false;\n                        }\n                        $(this).addClass(\"ui-state-active\");\n                        lastActive = this;\n                        that.document.one(\"mouseup\", function () {\n                            lastActive = null;\n                        });\n                    })\n                    .bind(\"mouseup\" + this.eventNamespace, function () {\n                        if (options.disabled) {\n                            return false;\n                        }\n                        $(this).removeClass(\"ui-state-active\");\n                    })\n                    .bind(\"keydown\" + this.eventNamespace, function (event) {\n                        if (options.disabled) {\n                            return false;\n                        }\n                        if (event.keyCode === $.ui.keyCode.SPACE || event.keyCode === $.ui.keyCode.ENTER) {\n                            $(this).addClass(\"ui-state-active\");\n                        }\n                    })\n                    // see #8559, we bind to blur here in case the button element loses\n                    // focus between keydown and keyup, it would be left in an \"active\" state\n                    .bind(\"keyup\" + this.eventNamespace + \" blur\" + this.eventNamespace, function () {\n                        $(this).removeClass(\"ui-state-active\");\n                    });\n\n                if (this.buttonElement.is(\"a\")) {\n                    this.buttonElement.keyup(function (event) {\n                        if (event.keyCode === $.ui.keyCode.SPACE) {\n                            // TODO pass through original event correctly (just as 2nd argument doesn't work)\n                            $(this).click();\n                        }\n                    });\n                }\n            }\n\n            // TODO: pull out $.Widget's handling for the disabled option into\n            // $.Widget.prototype._setOptionDisabled so it's easy to proxy and can\n            // be overridden by individual plugins\n            this._setOption(\"disabled\", options.disabled);\n            this._resetButton();\n        },\n\n        _determineButtonType: function () {\n            var ancestor, labelSelector, checked;\n\n            if (this.element.is(\"[type=checkbox]\")) {\n                this.type = \"checkbox\";\n            } else if (this.element.is(\"[type=radio]\")) {\n                this.type = \"radio\";\n            } else if (this.element.is(\"input\")) {\n                this.type = \"input\";\n            } else {\n                this.type = \"button\";\n            }\n\n            if (this.type === \"checkbox\" || this.type === \"radio\") {\n                // we don't search against the document in case the element\n                // is disconnected from the DOM\n                ancestor = this.element.parents().last();\n                labelSelector = \"label[for='\" + this.element.attr(\"id\") + \"']\";\n                this.buttonElement = ancestor.find(labelSelector);\n                if (!this.buttonElement.length) {\n                    ancestor = ancestor.length ? ancestor.siblings() : this.element.siblings();\n                    this.buttonElement = ancestor.filter(labelSelector);\n                    if (!this.buttonElement.length) {\n                        this.buttonElement = ancestor.find(labelSelector);\n                    }\n                }\n                this.element.addClass(\"ui-helper-hidden-accessible\");\n\n                checked = this.element.is(\":checked\");\n                if (checked) {\n                    this.buttonElement.addClass(\"ui-state-active\");\n                }\n                this.buttonElement.prop(\"aria-pressed\", checked);\n            } else {\n                this.buttonElement = this.element;\n            }\n        },\n\n        widget: function () {\n            return this.buttonElement;\n        },\n\n        _destroy: function () {\n            this.element\n                .removeClass(\"ui-helper-hidden-accessible\");\n            this.buttonElement\n                .removeClass(baseClasses + \" ui-state-active \" + typeClasses)\n                .removeAttr(\"role\")\n                .removeAttr(\"aria-pressed\")\n                .html(this.buttonElement.find(\".ui-button-text\").html());\n\n            if (!this.hasTitle) {\n                this.buttonElement.removeAttr(\"title\");\n            }\n        },\n\n        _setOption: function (key, value) {\n            this._super(key, value);\n            if (key === \"disabled\") {\n                this.element.prop(\"disabled\", !!value);\n                if (value) {\n                    this.buttonElement.removeClass(\"ui-state-focus\");\n                }\n                return;\n            }\n            this._resetButton();\n        },\n\n        refresh: function () {\n            //See #8237 & #8828\n            var isDisabled = this.element.is(\"input, button\") ? this.element.is(\":disabled\") : this.element.hasClass(\"ui-button-disabled\");\n\n            if (isDisabled !== this.options.disabled) {\n                this._setOption(\"disabled\", isDisabled);\n            }\n            if (this.type === \"radio\") {\n                radioGroup(this.element[0]).each(function () {\n                    if ($(this).is(\":checked\")) {\n                        $(this).button(\"widget\")\n                            .addClass(\"ui-state-active\")\n                            .attr(\"aria-pressed\", \"true\");\n                    } else {\n                        $(this).button(\"widget\")\n                            .removeClass(\"ui-state-active\")\n                            .attr(\"aria-pressed\", \"false\");\n                    }\n                });\n            } else if (this.type === \"checkbox\") {\n                if (this.element.is(\":checked\")) {\n                    this.buttonElement\n                        .addClass(\"ui-state-active\")\n                        .attr(\"aria-pressed\", \"true\");\n                } else {\n                    this.buttonElement\n                        .removeClass(\"ui-state-active\")\n                        .attr(\"aria-pressed\", \"false\");\n                }\n            }\n        },\n\n        _resetButton: function () {\n            if (this.type === \"input\") {\n                if (this.options.label) {\n                    this.element.val(this.options.label);\n                }\n                return;\n            }\n            var buttonElement = this.buttonElement.removeClass(typeClasses),\n                buttonText = $(\"<span></span>\", this.document[0])\n                    .addClass(\"ui-button-text\")\n                    .html(this.options.label)\n                    .appendTo(buttonElement.empty())\n                    .text(),\n                icons = this.options.icons,\n                multipleIcons = icons.primary && icons.secondary,\n                buttonClasses = [];\n\n            if (icons.primary || icons.secondary) {\n                if (this.options.text) {\n                    buttonClasses.push(\"ui-button-text-icon\" + (multipleIcons ? \"s\" : (icons.primary ? \"-primary\" : \"-secondary\")));\n                }\n\n                if (icons.primary) {\n                    buttonElement.prepend(\"<span class='ui-button-icon-primary ui-icon \" + icons.primary + \"'></span>\");\n                }\n\n                if (icons.secondary) {\n                    buttonElement.append(\"<span class='ui-button-icon-secondary ui-icon \" + icons.secondary + \"'></span>\");\n                }\n\n                if (!this.options.text) {\n                    buttonClasses.push(multipleIcons ? \"ui-button-icons-only\" : \"ui-button-icon-only\");\n\n                    if (!this.hasTitle) {\n                        buttonElement.attr(\"title\", $.trim(buttonText));\n                    }\n                }\n            } else {\n                buttonClasses.push(\"ui-button-text-only\");\n            }\n            buttonElement.addClass(buttonClasses.join(\" \"));\n        }\n    });\n\n    $.widget(\"ui.buttonset\", {\n        version: \"1.10.4\",\n        options: {\n            items: \"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)\"\n        },\n\n        _create: function () {\n            this.element.addClass(\"ui-buttonset\");\n        },\n\n        _init: function () {\n            this.refresh();\n        },\n\n        _setOption: function (key, value) {\n            if (key === \"disabled\") {\n                this.buttons.button(\"option\", key, value);\n            }\n\n            this._super(key, value);\n        },\n\n        refresh: function () {\n            var rtl = this.element.css(\"direction\") === \"rtl\";\n\n            this.buttons = this.element.find(this.options.items)\n                .filter(\":ui-button\")\n                .button(\"refresh\")\n                .end()\n                .not(\":ui-button\")\n                .button()\n                .end()\n                .map(function () {\n                    return $(this).button(\"widget\")[0];\n                })\n                .removeClass(\"ui-corner-all ui-corner-left ui-corner-right\")\n                .filter(\":first\")\n                .addClass(rtl ? \"ui-corner-right\" : \"ui-corner-left\")\n                .end()\n                .filter(\":last\")\n                .addClass(rtl ? \"ui-corner-left\" : \"ui-corner-right\")\n                .end()\n                .end();\n        },\n\n        _destroy: function () {\n            this.element.removeClass(\"ui-buttonset\");\n            this.buttons\n                .map(function () {\n                    return $(this).button(\"widget\")[0];\n                })\n                .removeClass(\"ui-corner-left ui-corner-right\")\n                .end()\n                .button(\"destroy\");\n        }\n    });\n\n});\n","jquery/ui-modules/sortable.js":"/*!\n * jQuery UI Sortable - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/sortable/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/core',\n    'jquery-ui-modules/mouse'\n], function ($, undefined) {\n\n    function isOverAxis(x, reference, size) {\n        return (x > reference) && (x < (reference + size));\n    }\n\n    function isFloating(item) {\n        return (/left|right/).test(item.css(\"float\")) || (/inline|table-cell/).test(item.css(\"display\"));\n    }\n\n    $.widget(\"ui.sortable\", $.ui.mouse, {\n        version: \"1.10.4\",\n        widgetEventPrefix: \"sort\",\n        ready: false,\n        options: {\n            appendTo: \"parent\",\n            axis: false,\n            connectWith: false,\n            containment: false,\n            cursor: \"auto\",\n            cursorAt: false,\n            dropOnEmpty: true,\n            forcePlaceholderSize: false,\n            forceHelperSize: false,\n            grid: false,\n            handle: false,\n            helper: \"original\",\n            items: \"> *\",\n            opacity: false,\n            placeholder: false,\n            revert: false,\n            scroll: true,\n            scrollSensitivity: 20,\n            scrollSpeed: 20,\n            scope: \"default\",\n            tolerance: \"intersect\",\n            zIndex: 1000,\n\n            // callbacks\n            activate: null,\n            beforeStop: null,\n            change: null,\n            deactivate: null,\n            out: null,\n            over: null,\n            receive: null,\n            remove: null,\n            sort: null,\n            start: null,\n            stop: null,\n            update: null\n        },\n        _create: function () {\n\n            var o = this.options;\n            this.containerCache = {};\n            this.element.addClass(\"ui-sortable\");\n\n            //Get the items\n            this.refresh();\n\n            //Let's determine if the items are being displayed horizontally\n            this.floating = this.items.length ? o.axis === \"x\" || isFloating(this.items[0].item) : false;\n\n            //Let's determine the parent's offset\n            this.offset = this.element.offset();\n\n            //Initialize mouse events for interaction\n            this._mouseInit();\n\n            //We're ready to go\n            this.ready = true;\n\n        },\n\n        _destroy: function () {\n            this.element\n                .removeClass(\"ui-sortable ui-sortable-disabled\");\n            this._mouseDestroy();\n\n            for (var i = this.items.length - 1; i >= 0; i--) {\n                this.items[i].item.removeData(this.widgetName + \"-item\");\n            }\n\n            return this;\n        },\n\n        _setOption: function (key, value) {\n            if (key === \"disabled\") {\n                this.options[key] = value;\n\n                this.widget().toggleClass(\"ui-sortable-disabled\", !!value);\n            } else {\n                // Don't call widget base _setOption for disable as it adds ui-state-disabled class\n                $.Widget.prototype._setOption.apply(this, arguments);\n            }\n        },\n\n        _mouseCapture: function (event, overrideHandle) {\n            var currentItem = null,\n                validHandle = false,\n                that = this;\n\n            if (this.reverting) {\n                return false;\n            }\n\n            if (this.options.disabled || this.options.type === \"static\") {\n                return false;\n            }\n\n            //We have to refresh the items data once first\n            this._refreshItems(event);\n\n            //Find out if the clicked node (or one of its parents) is a actual item in this.items\n            $(event.target).parents().each(function () {\n                if ($.data(this, that.widgetName + \"-item\") === that) {\n                    currentItem = $(this);\n                    return false;\n                }\n            });\n            if ($.data(event.target, that.widgetName + \"-item\") === that) {\n                currentItem = $(event.target);\n            }\n\n            if (!currentItem) {\n                return false;\n            }\n            if (this.options.handle && !overrideHandle) {\n                $(this.options.handle, currentItem).find(\"*\").addBack().each(function () {\n                    if (this === event.target) {\n                        validHandle = true;\n                    }\n                });\n                if (!validHandle) {\n                    return false;\n                }\n            }\n\n            this.currentItem = currentItem;\n            this._removeCurrentsFromItems();\n            return true;\n\n        },\n\n        _mouseStart: function (event, overrideHandle, noActivation) {\n\n            var i, body,\n                o = this.options;\n\n            this.currentContainer = this;\n\n            //We only need to call refreshPositions, because the refreshItems call has been moved to mouseCapture\n            this.refreshPositions();\n\n            //Create and append the visible helper\n            this.helper = this._createHelper(event);\n\n            //Cache the helper size\n            this._cacheHelperProportions();\n\n            /*\n             * - Position generation -\n             * This block generates everything position related - it's the core of draggables.\n             */\n\n            //Cache the margins of the original element\n            this._cacheMargins();\n\n            //Get the next scrolling parent\n            this.scrollParent = this.helper.scrollParent();\n\n            //The element's absolute position on the page minus margins\n            this.offset = this.currentItem.offset();\n            this.offset = {\n                top: this.offset.top - this.margins.top,\n                left: this.offset.left - this.margins.left\n            };\n\n            $.extend(this.offset, {\n                click: { //Where the click happened, relative to the element\n                    left: event.pageX - this.offset.left,\n                    top: event.pageY - this.offset.top\n                },\n                parent: this._getParentOffset(),\n                relative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper\n            });\n\n            // Only after we got the offset, we can change the helper's position to absolute\n            // TODO: Still need to figure out a way to make relative sorting possible\n            this.helper.css(\"position\", \"absolute\");\n            this.cssPosition = this.helper.css(\"position\");\n\n            //Generate the original position\n            this.originalPosition = this._generatePosition(event);\n            this.originalPageX = event.pageX;\n            this.originalPageY = event.pageY;\n\n            //Adjust the mouse offset relative to the helper if \"cursorAt\" is supplied\n            (o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt));\n\n            //Cache the former DOM position\n            this.domPosition = {prev: this.currentItem.prev()[0], parent: this.currentItem.parent()[0]};\n\n            //If the helper is not the original, hide the original so it's not playing any role during the drag, won't cause anything bad this way\n            if (this.helper[0] !== this.currentItem[0]) {\n                this.currentItem.hide();\n            }\n\n            //Create the placeholder\n            this._createPlaceholder();\n\n            //Set a containment if given in the options\n            if (o.containment) {\n                this._setContainment();\n            }\n\n            if (o.cursor && o.cursor !== \"auto\") { // cursor option\n                body = this.document.find(\"body\");\n\n                // support: IE\n                this.storedCursor = body.css(\"cursor\");\n                body.css(\"cursor\", o.cursor);\n\n                this.storedStylesheet = $(\"<style>*{ cursor: \" + o.cursor + \" !important; }</style>\").appendTo(body);\n            }\n\n            if (o.opacity) { // opacity option\n                if (this.helper.css(\"opacity\")) {\n                    this._storedOpacity = this.helper.css(\"opacity\");\n                }\n                this.helper.css(\"opacity\", o.opacity);\n            }\n\n            if (o.zIndex) { // zIndex option\n                if (this.helper.css(\"zIndex\")) {\n                    this._storedZIndex = this.helper.css(\"zIndex\");\n                }\n                this.helper.css(\"zIndex\", o.zIndex);\n            }\n\n            //Prepare scrolling\n            if (this.scrollParent[0] !== document && this.scrollParent[0].tagName !== \"HTML\") {\n                this.overflowOffset = this.scrollParent.offset();\n            }\n\n            //Call callbacks\n            this._trigger(\"start\", event, this._uiHash());\n\n            //Recache the helper size\n            if (!this._preserveHelperProportions) {\n                this._cacheHelperProportions();\n            }\n\n\n            //Post \"activate\" events to possible containers\n            if (!noActivation) {\n                for (i = this.containers.length - 1; i >= 0; i--) {\n                    this.containers[i]._trigger(\"activate\", event, this._uiHash(this));\n                }\n            }\n\n            //Prepare possible droppables\n            if ($.ui.ddmanager) {\n                $.ui.ddmanager.current = this;\n            }\n\n            if ($.ui.ddmanager && !o.dropBehaviour) {\n                $.ui.ddmanager.prepareOffsets(this, event);\n            }\n\n            this.dragging = true;\n\n            this.helper.addClass(\"ui-sortable-helper\");\n            this._mouseDrag(event); //Execute the drag once - this causes the helper not to be visible before getting its correct position\n            return true;\n\n        },\n\n        _mouseDrag: function (event) {\n            var i, item, itemElement, intersection,\n                o = this.options,\n                scrolled = false;\n\n            //Compute the helpers position\n            this.position = this._generatePosition(event);\n            this.positionAbs = this._convertPositionTo(\"absolute\");\n\n            if (!this.lastPositionAbs) {\n                this.lastPositionAbs = this.positionAbs;\n            }\n\n            //Do scrolling\n            if (this.options.scroll) {\n                if (this.scrollParent[0] !== document && this.scrollParent[0].tagName !== \"HTML\") {\n\n                    if ((this.overflowOffset.top + this.scrollParent[0].offsetHeight) - event.pageY < o.scrollSensitivity) {\n                        this.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop + o.scrollSpeed;\n                    } else if (event.pageY - this.overflowOffset.top < o.scrollSensitivity) {\n                        this.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop - o.scrollSpeed;\n                    }\n\n                    if ((this.overflowOffset.left + this.scrollParent[0].offsetWidth) - event.pageX < o.scrollSensitivity) {\n                        this.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft + o.scrollSpeed;\n                    } else if (event.pageX - this.overflowOffset.left < o.scrollSensitivity) {\n                        this.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft - o.scrollSpeed;\n                    }\n\n                } else {\n\n                    if (event.pageY - $(document).scrollTop() < o.scrollSensitivity) {\n                        scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);\n                    } else if ($(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity) {\n                        scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);\n                    }\n\n                    if (event.pageX - $(document).scrollLeft() < o.scrollSensitivity) {\n                        scrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);\n                    } else if ($(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity) {\n                        scrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);\n                    }\n\n                }\n\n                if (scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) {\n                    $.ui.ddmanager.prepareOffsets(this, event);\n                }\n            }\n\n            //Regenerate the absolute position used for position checks\n            this.positionAbs = this._convertPositionTo(\"absolute\");\n\n            //Set the helper position\n            if (!this.options.axis || this.options.axis !== \"y\") {\n                this.helper[0].style.left = this.position.left + \"px\";\n            }\n            if (!this.options.axis || this.options.axis !== \"x\") {\n                this.helper[0].style.top = this.position.top + \"px\";\n            }\n\n            //Rearrange\n            for (i = this.items.length - 1; i >= 0; i--) {\n\n                //Cache variables and intersection, continue if no intersection\n                item = this.items[i];\n                itemElement = item.item[0];\n                intersection = this._intersectsWithPointer(item);\n                if (!intersection) {\n                    continue;\n                }\n\n                // Only put the placeholder inside the current Container, skip all\n                // items from other containers. This works because when moving\n                // an item from one container to another the\n                // currentContainer is switched before the placeholder is moved.\n                //\n                // Without this, moving items in \"sub-sortables\" can cause\n                // the placeholder to jitter beetween the outer and inner container.\n                if (item.instance !== this.currentContainer) {\n                    continue;\n                }\n\n                // cannot intersect with itself\n                // no useless actions that have been done before\n                // no action if the item moved is the parent of the item checked\n                if (itemElement !== this.currentItem[0] &&\n                    this.placeholder[intersection === 1 ? \"next\" : \"prev\"]()[0] !== itemElement &&\n                    !$.contains(this.placeholder[0], itemElement) &&\n                    (this.options.type === \"semi-dynamic\" ? !$.contains(this.element[0], itemElement) : true)\n                ) {\n\n                    this.direction = intersection === 1 ? \"down\" : \"up\";\n\n                    if (this.options.tolerance === \"pointer\" || this._intersectsWithSides(item)) {\n                        this._rearrange(event, item);\n                    } else {\n                        break;\n                    }\n\n                    this._trigger(\"change\", event, this._uiHash());\n                    break;\n                }\n            }\n\n            //Post events to containers\n            this._contactContainers(event);\n\n            //Interconnect with droppables\n            if ($.ui.ddmanager) {\n                $.ui.ddmanager.drag(this, event);\n            }\n\n            //Call callbacks\n            this._trigger(\"sort\", event, this._uiHash());\n\n            this.lastPositionAbs = this.positionAbs;\n            return false;\n\n        },\n\n        _mouseStop: function (event, noPropagation) {\n\n            if (!event) {\n                return;\n            }\n\n            //If we are using droppables, inform the manager about the drop\n            if ($.ui.ddmanager && !this.options.dropBehaviour) {\n                $.ui.ddmanager.drop(this, event);\n            }\n\n            if (this.options.revert) {\n                var that = this,\n                    cur = this.placeholder.offset(),\n                    axis = this.options.axis,\n                    animation = {};\n\n                if (!axis || axis === \"x\") {\n                    animation.left = cur.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollLeft);\n                }\n                if (!axis || axis === \"y\") {\n                    animation.top = cur.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollTop);\n                }\n                this.reverting = true;\n                $(this.helper).animate(animation, parseInt(this.options.revert, 10) || 500, function () {\n                    that._clear(event);\n                });\n            } else {\n                this._clear(event, noPropagation);\n            }\n\n            return false;\n\n        },\n\n        cancel: function () {\n\n            if (this.dragging) {\n\n                this._mouseUp({target: null});\n\n                if (this.options.helper === \"original\") {\n                    this.currentItem.css(this._storedCSS).removeClass(\"ui-sortable-helper\");\n                } else {\n                    this.currentItem.show();\n                }\n\n                //Post deactivating events to containers\n                for (var i = this.containers.length - 1; i >= 0; i--) {\n                    this.containers[i]._trigger(\"deactivate\", null, this._uiHash(this));\n                    if (this.containers[i].containerCache.over) {\n                        this.containers[i]._trigger(\"out\", null, this._uiHash(this));\n                        this.containers[i].containerCache.over = 0;\n                    }\n                }\n\n            }\n\n            if (this.placeholder) {\n                //$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately, it unbinds ALL events from the original node!\n                if (this.placeholder[0].parentNode) {\n                    this.placeholder[0].parentNode.removeChild(this.placeholder[0]);\n                }\n                if (this.options.helper !== \"original\" && this.helper && this.helper[0].parentNode) {\n                    this.helper.remove();\n                }\n\n                $.extend(this, {\n                    helper: null,\n                    dragging: false,\n                    reverting: false,\n                    _noFinalSort: null\n                });\n\n                if (this.domPosition.prev) {\n                    $(this.domPosition.prev).after(this.currentItem);\n                } else {\n                    $(this.domPosition.parent).prepend(this.currentItem);\n                }\n            }\n\n            return this;\n\n        },\n\n        serialize: function (o) {\n\n            var items = this._getItemsAsjQuery(o && o.connected),\n                str = [];\n            o = o || {};\n\n            $(items).each(function () {\n                var res = ($(o.item || this).attr(o.attribute || \"id\") || \"\").match(o.expression || (/(.+)[\\-=_](.+)/));\n                if (res) {\n                    str.push((o.key || res[1] + \"[]\") + \"=\" + (o.key && o.expression ? res[1] : res[2]));\n                }\n            });\n\n            if (!str.length && o.key) {\n                str.push(o.key + \"=\");\n            }\n\n            return str.join(\"&\");\n\n        },\n\n        toArray: function (o) {\n\n            var items = this._getItemsAsjQuery(o && o.connected),\n                ret = [];\n\n            o = o || {};\n\n            items.each(function () {\n                ret.push($(o.item || this).attr(o.attribute || \"id\") || \"\");\n            });\n            return ret;\n\n        },\n\n        /* Be careful with the following core functions */\n        _intersectsWith: function (item) {\n\n            var x1 = this.positionAbs.left,\n                x2 = x1 + this.helperProportions.width,\n                y1 = this.positionAbs.top,\n                y2 = y1 + this.helperProportions.height,\n                l = item.left,\n                r = l + item.width,\n                t = item.top,\n                b = t + item.height,\n                dyClick = this.offset.click.top,\n                dxClick = this.offset.click.left,\n                isOverElementHeight = (this.options.axis === \"x\") || ((y1 + dyClick) > t && (y1 + dyClick) < b),\n                isOverElementWidth = (this.options.axis === \"y\") || ((x1 + dxClick) > l && (x1 + dxClick) < r),\n                isOverElement = isOverElementHeight && isOverElementWidth;\n\n            if (this.options.tolerance === \"pointer\" ||\n                this.options.forcePointerForContainers ||\n                (this.options.tolerance !== \"pointer\" && this.helperProportions[this.floating ? \"width\" : \"height\"] > item[this.floating ? \"width\" : \"height\"])\n            ) {\n                return isOverElement;\n            } else {\n\n                return (l < x1 + (this.helperProportions.width / 2) && // Right Half\n                    x2 - (this.helperProportions.width / 2) < r && // Left Half\n                    t < y1 + (this.helperProportions.height / 2) && // Bottom Half\n                    y2 - (this.helperProportions.height / 2) < b); // Top Half\n\n            }\n        },\n\n        _intersectsWithPointer: function (item) {\n\n            var isOverElementHeight = (this.options.axis === \"x\") || isOverAxis(this.positionAbs.top + this.offset.click.top, item.top, item.height),\n                isOverElementWidth = (this.options.axis === \"y\") || isOverAxis(this.positionAbs.left + this.offset.click.left, item.left, item.width),\n                isOverElement = isOverElementHeight && isOverElementWidth,\n                verticalDirection = this._getDragVerticalDirection(),\n                horizontalDirection = this._getDragHorizontalDirection();\n\n            if (!isOverElement) {\n                return false;\n            }\n\n            return this.floating ?\n                (((horizontalDirection && horizontalDirection === \"right\") || verticalDirection === \"down\") ? 2 : 1)\n                : (verticalDirection && (verticalDirection === \"down\" ? 2 : 1));\n\n        },\n\n        _intersectsWithSides: function (item) {\n\n            var isOverBottomHalf = isOverAxis(this.positionAbs.top + this.offset.click.top, item.top + (item.height / 2), item.height),\n                isOverRightHalf = isOverAxis(this.positionAbs.left + this.offset.click.left, item.left + (item.width / 2), item.width),\n                verticalDirection = this._getDragVerticalDirection(),\n                horizontalDirection = this._getDragHorizontalDirection();\n\n            if (this.floating && horizontalDirection) {\n                return ((horizontalDirection === \"right\" && isOverRightHalf) || (horizontalDirection === \"left\" && !isOverRightHalf));\n            } else {\n                return verticalDirection && ((verticalDirection === \"down\" && isOverBottomHalf) || (verticalDirection === \"up\" && !isOverBottomHalf));\n            }\n\n        },\n\n        _getDragVerticalDirection: function () {\n            var delta = this.positionAbs.top - this.lastPositionAbs.top;\n            return delta !== 0 && (delta > 0 ? \"down\" : \"up\");\n        },\n\n        _getDragHorizontalDirection: function () {\n            var delta = this.positionAbs.left - this.lastPositionAbs.left;\n            return delta !== 0 && (delta > 0 ? \"right\" : \"left\");\n        },\n\n        refresh: function (event) {\n            this._refreshItems(event);\n            this.refreshPositions();\n            return this;\n        },\n\n        _connectWith: function () {\n            var options = this.options;\n            return options.connectWith.constructor === String ? [options.connectWith] : options.connectWith;\n        },\n\n        _getItemsAsjQuery: function (connected) {\n\n            var i, j, cur, inst,\n                items = [],\n                queries = [],\n                connectWith = this._connectWith();\n\n            if (connectWith && connected) {\n                for (i = connectWith.length - 1; i >= 0; i--) {\n                    cur = $(connectWith[i]);\n                    for (j = cur.length - 1; j >= 0; j--) {\n                        inst = $.data(cur[j], this.widgetFullName);\n                        if (inst && inst !== this && !inst.options.disabled) {\n                            queries.push([$.isFunction(inst.options.items) ? inst.options.items.call(inst.element) : $(inst.options.items, inst.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"), inst]);\n                        }\n                    }\n                }\n            }\n\n            queries.push([$.isFunction(this.options.items) ? this.options.items.call(this.element, null, {\n                options: this.options,\n                item: this.currentItem\n            }) : $(this.options.items, this.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"), this]);\n\n            function addItems() {\n                items.push(this);\n            }\n\n            for (i = queries.length - 1; i >= 0; i--) {\n                queries[i][0].each(addItems);\n            }\n\n            return $(items);\n\n        },\n\n        _removeCurrentsFromItems: function () {\n\n            var list = this.currentItem.find(\":data(\" + this.widgetName + \"-item)\");\n\n            this.items = $.grep(this.items, function (item) {\n                for (var j = 0; j < list.length; j++) {\n                    if (list[j] === item.item[0]) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n\n        },\n\n        _refreshItems: function (event) {\n\n            this.items = [];\n            this.containers = [this];\n\n            var i, j, cur, inst, targetData, _queries, item, queriesLength,\n                items = this.items,\n                queries = [[$.isFunction(this.options.items) ? this.options.items.call(this.element[0], event, {item: this.currentItem}) : $(this.options.items, this.element), this]],\n                connectWith = this._connectWith();\n\n            if (connectWith && this.ready) { //Shouldn't be run the first time through due to massive slow-down\n                for (i = connectWith.length - 1; i >= 0; i--) {\n                    cur = $(connectWith[i]);\n                    for (j = cur.length - 1; j >= 0; j--) {\n                        inst = $.data(cur[j], this.widgetFullName);\n                        if (inst && inst !== this && !inst.options.disabled) {\n                            queries.push([$.isFunction(inst.options.items) ? inst.options.items.call(inst.element[0], event, {item: this.currentItem}) : $(inst.options.items, inst.element), inst]);\n                            this.containers.push(inst);\n                        }\n                    }\n                }\n            }\n\n            for (i = queries.length - 1; i >= 0; i--) {\n                targetData = queries[i][1];\n                _queries = queries[i][0];\n\n                for (j = 0, queriesLength = _queries.length; j < queriesLength; j++) {\n                    item = $(_queries[j]);\n\n                    item.data(this.widgetName + \"-item\", targetData); // Data for target checking (mouse manager)\n\n                    items.push({\n                        item: item,\n                        instance: targetData,\n                        width: 0, height: 0,\n                        left: 0, top: 0\n                    });\n                }\n            }\n\n        },\n\n        refreshPositions: function (fast) {\n\n            //This has to be redone because due to the item being moved out/into the offsetParent, the offsetParent's position will change\n            if (this.offsetParent && this.helper) {\n                this.offset.parent = this._getParentOffset();\n            }\n\n            var i, item, t, p;\n\n            for (i = this.items.length - 1; i >= 0; i--) {\n                item = this.items[i];\n\n                //We ignore calculating positions of all connected containers when we're not over them\n                if (item.instance !== this.currentContainer && this.currentContainer && item.item[0] !== this.currentItem[0]) {\n                    continue;\n                }\n\n                t = this.options.toleranceElement ? $(this.options.toleranceElement, item.item) : item.item;\n\n                if (!fast) {\n                    item.width = t.outerWidth();\n                    item.height = t.outerHeight();\n                }\n\n                p = t.offset();\n                item.left = p.left;\n                item.top = p.top;\n            }\n\n            if (this.options.custom && this.options.custom.refreshContainers) {\n                this.options.custom.refreshContainers.call(this);\n            } else {\n                for (i = this.containers.length - 1; i >= 0; i--) {\n                    p = this.containers[i].element.offset();\n                    this.containers[i].containerCache.left = p.left;\n                    this.containers[i].containerCache.top = p.top;\n                    this.containers[i].containerCache.width = this.containers[i].element.outerWidth();\n                    this.containers[i].containerCache.height = this.containers[i].element.outerHeight();\n                }\n            }\n\n            return this;\n        },\n\n        _createPlaceholder: function (that) {\n            that = that || this;\n            var className,\n                o = that.options;\n\n            if (!o.placeholder || o.placeholder.constructor === String) {\n                className = o.placeholder;\n                o.placeholder = {\n                    element: function () {\n\n                        var nodeName = that.currentItem[0].nodeName.toLowerCase(),\n                            element = $(\"<\" + nodeName + \">\", that.document[0])\n                                .addClass(className || that.currentItem[0].className + \" ui-sortable-placeholder\")\n                                .removeClass(\"ui-sortable-helper\");\n\n                        if (nodeName === \"tr\") {\n                            that.currentItem.children().each(function () {\n                                $(\"<td>&#160;</td>\", that.document[0])\n                                    .attr(\"colspan\", $(this).attr(\"colspan\") || 1)\n                                    .appendTo(element);\n                            });\n                        } else if (nodeName === \"img\") {\n                            element.attr(\"src\", that.currentItem.attr(\"src\"));\n                        }\n\n                        if (!className) {\n                            element.css(\"visibility\", \"hidden\");\n                        }\n\n                        return element;\n                    },\n                    update: function (container, p) {\n\n                        // 1. If a className is set as 'placeholder option, we don't force sizes - the class is responsible for that\n                        // 2. The option 'forcePlaceholderSize can be enabled to force it even if a class name is specified\n                        if (className && !o.forcePlaceholderSize) {\n                            return;\n                        }\n\n                        //If the element doesn't have a actual height by itself (without styles coming from a stylesheet), it receives the inline height from the dragged item\n                        if (!p.height()) {\n                            p.height(that.currentItem.innerHeight() - parseInt(that.currentItem.css(\"paddingTop\") || 0, 10) - parseInt(that.currentItem.css(\"paddingBottom\") || 0, 10));\n                        }\n                        if (!p.width()) {\n                            p.width(that.currentItem.innerWidth() - parseInt(that.currentItem.css(\"paddingLeft\") || 0, 10) - parseInt(that.currentItem.css(\"paddingRight\") || 0, 10));\n                        }\n                    }\n                };\n            }\n\n            //Create the placeholder\n            that.placeholder = $(o.placeholder.element.call(that.element, that.currentItem));\n\n            //Append it after the actual current item\n            that.currentItem.after(that.placeholder);\n\n            //Update the size of the placeholder (TODO: Logic to fuzzy, see line 316/317)\n            o.placeholder.update(that, that.placeholder);\n\n        },\n\n        _contactContainers: function (event) {\n            var i, j, dist, itemWithLeastDistance, posProperty, sizeProperty, base, cur, nearBottom, floating,\n                innermostContainer = null,\n                innermostIndex = null;\n\n            // get innermost container that intersects with item\n            for (i = this.containers.length - 1; i >= 0; i--) {\n\n                // never consider a container that's located within the item itself\n                if ($.contains(this.currentItem[0], this.containers[i].element[0])) {\n                    continue;\n                }\n\n                if (this._intersectsWith(this.containers[i].containerCache)) {\n\n                    // if we've already found a container and it's more \"inner\" than this, then continue\n                    if (innermostContainer && $.contains(this.containers[i].element[0], innermostContainer.element[0])) {\n                        continue;\n                    }\n\n                    innermostContainer = this.containers[i];\n                    innermostIndex = i;\n\n                } else {\n                    // container doesn't intersect. trigger \"out\" event if necessary\n                    if (this.containers[i].containerCache.over) {\n                        this.containers[i]._trigger(\"out\", event, this._uiHash(this));\n                        this.containers[i].containerCache.over = 0;\n                    }\n                }\n\n            }\n\n            // if no intersecting containers found, return\n            if (!innermostContainer) {\n                return;\n            }\n\n            // move the item into the container if it's not there already\n            if (this.containers.length === 1) {\n                if (!this.containers[innermostIndex].containerCache.over) {\n                    this.containers[innermostIndex]._trigger(\"over\", event, this._uiHash(this));\n                    this.containers[innermostIndex].containerCache.over = 1;\n                }\n            } else {\n\n                //When entering a new container, we will find the item with the least distance and append our item near it\n                dist = 10000;\n                itemWithLeastDistance = null;\n                floating = innermostContainer.floating || isFloating(this.currentItem);\n                posProperty = floating ? \"left\" : \"top\";\n                sizeProperty = floating ? \"width\" : \"height\";\n                base = this.positionAbs[posProperty] + this.offset.click[posProperty];\n                for (j = this.items.length - 1; j >= 0; j--) {\n                    if (!$.contains(this.containers[innermostIndex].element[0], this.items[j].item[0])) {\n                        continue;\n                    }\n                    if (this.items[j].item[0] === this.currentItem[0]) {\n                        continue;\n                    }\n                    if (floating && !isOverAxis(this.positionAbs.top + this.offset.click.top, this.items[j].top, this.items[j].height)) {\n                        continue;\n                    }\n                    cur = this.items[j].item.offset()[posProperty];\n                    nearBottom = false;\n                    if (Math.abs(cur - base) > Math.abs(cur + this.items[j][sizeProperty] - base)) {\n                        nearBottom = true;\n                        cur += this.items[j][sizeProperty];\n                    }\n\n                    if (Math.abs(cur - base) < dist) {\n                        dist = Math.abs(cur - base);\n                        itemWithLeastDistance = this.items[j];\n                        this.direction = nearBottom ? \"up\" : \"down\";\n                    }\n                }\n\n                //Check if dropOnEmpty is enabled\n                if (!itemWithLeastDistance && !this.options.dropOnEmpty) {\n                    return;\n                }\n\n                if (this.currentContainer === this.containers[innermostIndex]) {\n                    return;\n                }\n\n                itemWithLeastDistance ? this._rearrange(event, itemWithLeastDistance, null, true) : this._rearrange(event, null, this.containers[innermostIndex].element, true);\n                this._trigger(\"change\", event, this._uiHash());\n                this.containers[innermostIndex]._trigger(\"change\", event, this._uiHash(this));\n                this.currentContainer = this.containers[innermostIndex];\n\n                //Update the placeholder\n                this.options.placeholder.update(this.currentContainer, this.placeholder);\n\n                this.containers[innermostIndex]._trigger(\"over\", event, this._uiHash(this));\n                this.containers[innermostIndex].containerCache.over = 1;\n            }\n\n\n        },\n\n        _createHelper: function (event) {\n\n            var o = this.options,\n                helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event, this.currentItem])) : (o.helper === \"clone\" ? this.currentItem.clone() : this.currentItem);\n\n            //Add the helper to the DOM if that didn't happen already\n            if (!helper.parents(\"body\").length) {\n                $(o.appendTo !== \"parent\" ? o.appendTo : this.currentItem[0].parentNode)[0].appendChild(helper[0]);\n            }\n\n            if (helper[0] === this.currentItem[0]) {\n                this._storedCSS = {\n                    width: this.currentItem[0].style.width,\n                    height: this.currentItem[0].style.height,\n                    position: this.currentItem.css(\"position\"),\n                    top: this.currentItem.css(\"top\"),\n                    left: this.currentItem.css(\"left\")\n                };\n            }\n\n            if (!helper[0].style.width || o.forceHelperSize) {\n                helper.width(this.currentItem.width());\n            }\n            if (!helper[0].style.height || o.forceHelperSize) {\n                helper.height(this.currentItem.height());\n            }\n\n            return helper;\n\n        },\n\n        _adjustOffsetFromHelper: function (obj) {\n            if (typeof obj === \"string\") {\n                obj = obj.split(\" \");\n            }\n            if ($.isArray(obj)) {\n                obj = {left: +obj[0], top: +obj[1] || 0};\n            }\n            if (\"left\" in obj) {\n                this.offset.click.left = obj.left + this.margins.left;\n            }\n            if (\"right\" in obj) {\n                this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;\n            }\n            if (\"top\" in obj) {\n                this.offset.click.top = obj.top + this.margins.top;\n            }\n            if (\"bottom\" in obj) {\n                this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;\n            }\n        },\n\n        _getParentOffset: function () {\n\n\n            //Get the offsetParent and cache its position\n            this.offsetParent = this.helper.offsetParent();\n            var po = this.offsetParent.offset();\n\n            // This is a special case where we need to modify a offset calculated on start, since the following happened:\n            // 1. The position of the helper is absolute, so it's position is calculated based on the next positioned parent\n            // 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't the document, which means that\n            //    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag\n            if (this.cssPosition === \"absolute\" && this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) {\n                po.left += this.scrollParent.scrollLeft();\n                po.top += this.scrollParent.scrollTop();\n            }\n\n            // This needs to be actually done for all browsers, since pageX/pageY includes this information\n            // with an ugly IE fix\n            if (this.offsetParent[0] === document.body || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === \"html\" && $.ui.ie)) {\n                po = {top: 0, left: 0};\n            }\n\n            return {\n                top: po.top + (parseInt(this.offsetParent.css(\"borderTopWidth\"), 10) || 0),\n                left: po.left + (parseInt(this.offsetParent.css(\"borderLeftWidth\"), 10) || 0)\n            };\n\n        },\n\n        _getRelativeOffset: function () {\n\n            if (this.cssPosition === \"relative\") {\n                var p = this.currentItem.position();\n                return {\n                    top: p.top - (parseInt(this.helper.css(\"top\"), 10) || 0) + this.scrollParent.scrollTop(),\n                    left: p.left - (parseInt(this.helper.css(\"left\"), 10) || 0) + this.scrollParent.scrollLeft()\n                };\n            } else {\n                return {top: 0, left: 0};\n            }\n\n        },\n\n        _cacheMargins: function () {\n            this.margins = {\n                left: (parseInt(this.currentItem.css(\"marginLeft\"), 10) || 0),\n                top: (parseInt(this.currentItem.css(\"marginTop\"), 10) || 0)\n            };\n        },\n\n        _cacheHelperProportions: function () {\n            this.helperProportions = {\n                width: this.helper.outerWidth(),\n                height: this.helper.outerHeight()\n            };\n        },\n\n        _setContainment: function () {\n\n            var ce, co, over,\n                o = this.options;\n            if (o.containment === \"parent\") {\n                o.containment = this.helper[0].parentNode;\n            }\n            if (o.containment === \"document\" || o.containment === \"window\") {\n                this.containment = [\n                    0 - this.offset.relative.left - this.offset.parent.left,\n                    0 - this.offset.relative.top - this.offset.parent.top,\n                    $(o.containment === \"document\" ? document : window).width() - this.helperProportions.width - this.margins.left,\n                    ($(o.containment === \"document\" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top\n                ];\n            }\n\n            if (!(/^(document|window|parent)$/).test(o.containment)) {\n                ce = $(o.containment)[0];\n                co = $(o.containment).offset();\n                over = ($(ce).css(\"overflow\") !== \"hidden\");\n\n                this.containment = [\n                    co.left + (parseInt($(ce).css(\"borderLeftWidth\"), 10) || 0) + (parseInt($(ce).css(\"paddingLeft\"), 10) || 0) - this.margins.left,\n                    co.top + (parseInt($(ce).css(\"borderTopWidth\"), 10) || 0) + (parseInt($(ce).css(\"paddingTop\"), 10) || 0) - this.margins.top,\n                    co.left + (over ? Math.max(ce.scrollWidth, ce.offsetWidth) : ce.offsetWidth) - (parseInt($(ce).css(\"borderLeftWidth\"), 10) || 0) - (parseInt($(ce).css(\"paddingRight\"), 10) || 0) - this.helperProportions.width - this.margins.left,\n                    co.top + (over ? Math.max(ce.scrollHeight, ce.offsetHeight) : ce.offsetHeight) - (parseInt($(ce).css(\"borderTopWidth\"), 10) || 0) - (parseInt($(ce).css(\"paddingBottom\"), 10) || 0) - this.helperProportions.height - this.margins.top\n                ];\n            }\n\n        },\n\n        _convertPositionTo: function (d, pos) {\n\n            if (!pos) {\n                pos = this.position;\n            }\n            var mod = d === \"absolute\" ? 1 : -1,\n                scroll = this.cssPosition === \"absolute\" && !(this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,\n                scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);\n\n            return {\n                top: (\n                    pos.top +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The absolute mouse position\n                    this.offset.relative.top * mod +\t\t\t\t\t\t\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\n                    this.offset.parent.top * mod -\t\t\t\t\t\t\t\t\t\t\t// The offsetParent's offset without borders (offset + border)\n                    ((this.cssPosition === \"fixed\" ? -this.scrollParent.scrollTop() : (scrollIsRootNode ? 0 : scroll.scrollTop())) * mod)\n                ),\n                left: (\n                    pos.left +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The absolute mouse position\n                    this.offset.relative.left * mod +\t\t\t\t\t\t\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\n                    this.offset.parent.left * mod -\t\t\t\t\t\t\t\t\t\t// The offsetParent's offset without borders (offset + border)\n                    ((this.cssPosition === \"fixed\" ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft()) * mod)\n                )\n            };\n\n        },\n\n        _generatePosition: function (event) {\n\n            var top, left,\n                o = this.options,\n                pageX = event.pageX,\n                pageY = event.pageY,\n                scroll = this.cssPosition === \"absolute\" && !(this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,\n                scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);\n\n            // This is another very weird special case that only happens for relative elements:\n            // 1. If the css position is relative\n            // 2. and the scroll parent is the document or similar to the offset parent\n            // we have to refresh the relative offset during the scroll so there are no jumps\n            if (this.cssPosition === \"relative\" && !(this.scrollParent[0] !== document && this.scrollParent[0] !== this.offsetParent[0])) {\n                this.offset.relative = this._getRelativeOffset();\n            }\n\n            /*\n             * - Position constraining -\n             * Constrain the position to a mix of grid, containment.\n             */\n\n            if (this.originalPosition) { //If we are not dragging yet, we won't check for options\n\n                if (this.containment) {\n                    if (event.pageX - this.offset.click.left < this.containment[0]) {\n                        pageX = this.containment[0] + this.offset.click.left;\n                    }\n                    if (event.pageY - this.offset.click.top < this.containment[1]) {\n                        pageY = this.containment[1] + this.offset.click.top;\n                    }\n                    if (event.pageX - this.offset.click.left > this.containment[2]) {\n                        pageX = this.containment[2] + this.offset.click.left;\n                    }\n                    if (event.pageY - this.offset.click.top > this.containment[3]) {\n                        pageY = this.containment[3] + this.offset.click.top;\n                    }\n                }\n\n                if (o.grid) {\n                    top = this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1];\n                    pageY = this.containment ? ((top - this.offset.click.top >= this.containment[1] && top - this.offset.click.top <= this.containment[3]) ? top : ((top - this.offset.click.top >= this.containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;\n\n                    left = this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0];\n                    pageX = this.containment ? ((left - this.offset.click.left >= this.containment[0] && left - this.offset.click.left <= this.containment[2]) ? left : ((left - this.offset.click.left >= this.containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;\n                }\n\n            }\n\n            return {\n                top: (\n                    pageY -\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The absolute mouse position\n                    this.offset.click.top -\t\t\t\t\t\t\t\t\t\t\t\t\t// Click offset (relative to the element)\n                    this.offset.relative.top -\t\t\t\t\t\t\t\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\n                    this.offset.parent.top +\t\t\t\t\t\t\t\t\t\t\t\t// The offsetParent's offset without borders (offset + border)\n                    ((this.cssPosition === \"fixed\" ? -this.scrollParent.scrollTop() : (scrollIsRootNode ? 0 : scroll.scrollTop())))\n                ),\n                left: (\n                    pageX -\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The absolute mouse position\n                    this.offset.click.left -\t\t\t\t\t\t\t\t\t\t\t\t// Click offset (relative to the element)\n                    this.offset.relative.left -\t\t\t\t\t\t\t\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\n                    this.offset.parent.left +\t\t\t\t\t\t\t\t\t\t\t\t// The offsetParent's offset without borders (offset + border)\n                    ((this.cssPosition === \"fixed\" ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft()))\n                )\n            };\n\n        },\n\n        _rearrange: function (event, i, a, hardRefresh) {\n\n            a ? a[0].appendChild(this.placeholder[0]) : i.item[0].parentNode.insertBefore(this.placeholder[0], (this.direction === \"down\" ? i.item[0] : i.item[0].nextSibling));\n\n            //Various things done here to improve the performance:\n            // 1. we create a setTimeout, that calls refreshPositions\n            // 2. on the instance, we have a counter variable, that get's higher after every append\n            // 3. on the local scope, we copy the counter variable, and check in the timeout, if it's still the same\n            // 4. this lets only the last addition to the timeout stack through\n            this.counter = this.counter ? ++this.counter : 1;\n            var counter = this.counter;\n\n            this._delay(function () {\n                if (counter === this.counter) {\n                    this.refreshPositions(!hardRefresh); //Precompute after each DOM insertion, NOT on mousemove\n                }\n            });\n\n        },\n\n        _clear: function (event, noPropagation) {\n\n            this.reverting = false;\n            // We delay all events that have to be triggered to after the point where the placeholder has been removed and\n            // everything else normalized again\n            var i,\n                delayedTriggers = [];\n\n            // We first have to update the dom position of the actual currentItem\n            // Note: don't do it if the current item is already removed (by a user), or it gets reappended (see #4088)\n            if (!this._noFinalSort && this.currentItem.parent().length) {\n                this.placeholder.before(this.currentItem);\n            }\n            this._noFinalSort = null;\n\n            if (this.helper[0] === this.currentItem[0]) {\n                for (i in this._storedCSS) {\n                    if (this._storedCSS[i] === \"auto\" || this._storedCSS[i] === \"static\") {\n                        this._storedCSS[i] = \"\";\n                    }\n                }\n                this.currentItem.css(this._storedCSS).removeClass(\"ui-sortable-helper\");\n            } else {\n                this.currentItem.show();\n            }\n\n            if (this.fromOutside && !noPropagation) {\n                delayedTriggers.push(function (event) {\n                    this._trigger(\"receive\", event, this._uiHash(this.fromOutside));\n                });\n            }\n            if ((this.fromOutside || this.domPosition.prev !== this.currentItem.prev().not(\".ui-sortable-helper\")[0] || this.domPosition.parent !== this.currentItem.parent()[0]) && !noPropagation) {\n                delayedTriggers.push(function (event) {\n                    this._trigger(\"update\", event, this._uiHash());\n                }); //Trigger update callback if the DOM position has changed\n            }\n\n            // Check if the items Container has Changed and trigger appropriate\n            // events.\n            if (this !== this.currentContainer) {\n                if (!noPropagation) {\n                    delayedTriggers.push(function (event) {\n                        this._trigger(\"remove\", event, this._uiHash());\n                    });\n                    delayedTriggers.push((function (c) {\n                        return function (event) {\n                            c._trigger(\"receive\", event, this._uiHash(this));\n                        };\n                    }).call(this, this.currentContainer));\n                    delayedTriggers.push((function (c) {\n                        return function (event) {\n                            c._trigger(\"update\", event, this._uiHash(this));\n                        };\n                    }).call(this, this.currentContainer));\n                }\n            }\n\n\n            //Post events to containers\n            function delayEvent(type, instance, container) {\n                return function (event) {\n                    container._trigger(type, event, instance._uiHash(instance));\n                };\n            }\n\n            for (i = this.containers.length - 1; i >= 0; i--) {\n                if (!noPropagation) {\n                    delayedTriggers.push(delayEvent(\"deactivate\", this, this.containers[i]));\n                }\n                if (this.containers[i].containerCache.over) {\n                    delayedTriggers.push(delayEvent(\"out\", this, this.containers[i]));\n                    this.containers[i].containerCache.over = 0;\n                }\n            }\n\n            //Do what was originally in plugins\n            if (this.storedCursor) {\n                this.document.find(\"body\").css(\"cursor\", this.storedCursor);\n                this.storedStylesheet.remove();\n            }\n            if (this._storedOpacity) {\n                this.helper.css(\"opacity\", this._storedOpacity);\n            }\n            if (this._storedZIndex) {\n                this.helper.css(\"zIndex\", this._storedZIndex === \"auto\" ? \"\" : this._storedZIndex);\n            }\n\n            this.dragging = false;\n            if (this.cancelHelperRemoval) {\n                if (!noPropagation) {\n                    this._trigger(\"beforeStop\", event, this._uiHash());\n                    for (i = 0; i < delayedTriggers.length; i++) {\n                        delayedTriggers[i].call(this, event);\n                    } //Trigger all delayed events\n                    this._trigger(\"stop\", event, this._uiHash());\n                }\n\n                this.fromOutside = false;\n                return false;\n            }\n\n            if (!noPropagation) {\n                this._trigger(\"beforeStop\", event, this._uiHash());\n            }\n\n            //$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately, it unbinds ALL events from the original node!\n            this.placeholder[0].parentNode.removeChild(this.placeholder[0]);\n\n            if (this.helper[0] !== this.currentItem[0]) {\n                this.helper.remove();\n            }\n            this.helper = null;\n\n            if (!noPropagation) {\n                for (i = 0; i < delayedTriggers.length; i++) {\n                    delayedTriggers[i].call(this, event);\n                } //Trigger all delayed events\n                this._trigger(\"stop\", event, this._uiHash());\n            }\n\n            this.fromOutside = false;\n            return true;\n\n        },\n\n        _trigger: function () {\n            if ($.Widget.prototype._trigger.apply(this, arguments) === false) {\n                this.cancel();\n            }\n        },\n\n        _uiHash: function (_inst) {\n            var inst = _inst || this;\n            return {\n                helper: inst.helper,\n                placeholder: inst.placeholder || $([]),\n                position: inst.position,\n                originalPosition: inst.originalPosition,\n                offset: inst.positionAbs,\n                item: inst.currentItem,\n                sender: _inst ? _inst.element : null\n            };\n        }\n\n    });\n\n});\n","jquery/ui-modules/effect-fold.js":"/*!\n * jQuery UI Effects Fold - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/fold-effect/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($, undefined) {\n\n    $.effects.effect.fold = function (o, done) {\n\n        // Create element\n        var el = $(this),\n            props = [\"position\", \"top\", \"bottom\", \"left\", \"right\", \"height\", \"width\"],\n            mode = $.effects.setMode(el, o.mode || \"hide\"),\n            show = mode === \"show\",\n            hide = mode === \"hide\",\n            size = o.size || 15,\n            percent = /([0-9]+)%/.exec(size),\n            horizFirst = !!o.horizFirst,\n            widthFirst = show !== horizFirst,\n            ref = widthFirst ? [\"width\", \"height\"] : [\"height\", \"width\"],\n            duration = o.duration / 2,\n            wrapper, distance,\n            animation1 = {},\n            animation2 = {};\n\n        $.effects.save(el, props);\n        el.show();\n\n        // Create Wrapper\n        wrapper = $.effects.createWrapper(el).css({\n            overflow: \"hidden\"\n        });\n        distance = widthFirst ?\n            [wrapper.width(), wrapper.height()] :\n            [wrapper.height(), wrapper.width()];\n\n        if (percent) {\n            size = parseInt(percent[1], 10) / 100 * distance[hide ? 0 : 1];\n        }\n        if (show) {\n            wrapper.css(horizFirst ? {\n                height: 0,\n                width: size\n            } : {\n                height: size,\n                width: 0\n            });\n        }\n\n        // Animation\n        animation1[ref[0]] = show ? distance[0] : size;\n        animation2[ref[1]] = show ? distance[1] : 0;\n\n        // Animate\n        wrapper\n            .animate(animation1, duration, o.easing)\n            .animate(animation2, duration, o.easing, function () {\n                if (hide) {\n                    el.hide();\n                }\n                $.effects.restore(el, props);\n                $.effects.removeWrapper(el);\n                done();\n            });\n    };\n\n});\n","jquery/ui-modules/datepicker.js":"/*!\n * jQuery UI Datepicker - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/datepicker/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/core',\n], function ($, undefined) {\n\n    $.extend($.ui, {datepicker: {version: \"1.10.4\"}});\n\n    var PROP_NAME = \"datepicker\",\n        instActive;\n\n    /* Date picker manager.\n       Use the singleton instance of this class, $.datepicker, to interact with the date picker.\n       Settings for (groups of) date pickers are maintained in an instance object,\n       allowing multiple different settings on the same page. */\n\n    function Datepicker() {\n        this._curInst = null; // The current instance in use\n        this._keyEvent = false; // If the last event was a key event\n        this._disabledInputs = []; // List of date picker inputs that have been disabled\n        this._datepickerShowing = false; // True if the popup picker is showing , false if not\n        this._inDialog = false; // True if showing within a \"dialog\", false if not\n        this._mainDivId = \"ui-datepicker-div\"; // The ID of the main datepicker division\n        this._inlineClass = \"ui-datepicker-inline\"; // The name of the inline marker class\n        this._appendClass = \"ui-datepicker-append\"; // The name of the append marker class\n        this._triggerClass = \"ui-datepicker-trigger\"; // The name of the trigger marker class\n        this._dialogClass = \"ui-datepicker-dialog\"; // The name of the dialog marker class\n        this._disableClass = \"ui-datepicker-disabled\"; // The name of the disabled covering marker class\n        this._unselectableClass = \"ui-datepicker-unselectable\"; // The name of the unselectable cell marker class\n        this._currentClass = \"ui-datepicker-current-day\"; // The name of the current day marker class\n        this._dayOverClass = \"ui-datepicker-days-cell-over\"; // The name of the day hover marker class\n        this.regional = []; // Available regional settings, indexed by language code\n        this.regional[\"\"] = { // Default regional settings\n            closeText: \"Done\", // Display text for close link\n            prevText: \"Prev\", // Display text for previous month link\n            nextText: \"Next\", // Display text for next month link\n            currentText: \"Today\", // Display text for current month link\n            monthNames: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n                \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"], // Names of months for drop-down and formatting\n            monthNamesShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"], // For formatting\n            dayNames: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"], // For formatting\n            dayNamesShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"], // For formatting\n            dayNamesMin: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"], // Column headings for days starting at Sunday\n            weekHeader: \"Wk\", // Column header for week of the year\n            dateFormat: \"mm/dd/yy\", // See format options on parseDate\n            firstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...\n            isRTL: false, // True if right-to-left language, false if left-to-right\n            showMonthAfterYear: false, // True if the year select precedes month, false for month then year\n            yearSuffix: \"\" // Additional text to append to the year in the month headers\n        };\n        this._defaults = { // Global defaults for all the date picker instances\n            showOn: \"focus\", // \"focus\" for popup on focus,\n            // \"button\" for trigger button, or \"both\" for either\n            showAnim: \"fadeIn\", // Name of jQuery animation for popup\n            showOptions: {}, // Options for enhanced animations\n            defaultDate: null, // Used when field is blank: actual date,\n            // +/-number for offset from today, null for today\n            appendText: \"\", // Display text following the input box, e.g. showing the format\n            buttonText: \"...\", // Text for trigger button\n            buttonImage: \"\", // URL for trigger button image\n            buttonImageOnly: false, // True if the image appears alone, false if it appears on a button\n            hideIfNoPrevNext: false, // True to hide next/previous month links\n            // if not applicable, false to just disable them\n            navigationAsDateFormat: false, // True if date formatting applied to prev/today/next links\n            gotoCurrent: false, // True if today link goes back to current selection instead\n            changeMonth: false, // True if month can be selected directly, false if only prev/next\n            changeYear: false, // True if year can be selected directly, false if only prev/next\n            yearRange: \"c-10:c+10\", // Range of years to display in drop-down,\n            // either relative to today's year (-nn:+nn), relative to currently displayed year\n            // (c-nn:c+nn), absolute (nnnn:nnnn), or a combination of the above (nnnn:-n)\n            showOtherMonths: false, // True to show dates in other months, false to leave blank\n            selectOtherMonths: false, // True to allow selection of dates in other months, false for unselectable\n            showWeek: false, // True to show week of the year, false to not show it\n            calculateWeek: this.iso8601Week, // How to calculate the week of the year,\n            // takes a Date and returns the number of the week for it\n            shortYearCutoff: \"+10\", // Short year values < this are in the current century,\n            // > this are in the previous century,\n            // string value starting with \"+\" for current year + value\n            minDate: null, // The earliest selectable date, or null for no limit\n            maxDate: null, // The latest selectable date, or null for no limit\n            duration: \"fast\", // Duration of display/closure\n            beforeShowDay: null, // Function that takes a date and returns an array with\n            // [0] = true if selectable, false if not, [1] = custom CSS class name(s) or \"\",\n            // [2] = cell title (optional), e.g. $.datepicker.noWeekends\n            beforeShow: null, // Function that takes an input field and\n            // returns a set of custom settings for the date picker\n            onSelect: null, // Define a callback function when a date is selected\n            onChangeMonthYear: null, // Define a callback function when the month or year is changed\n            onClose: null, // Define a callback function when the datepicker is closed\n            numberOfMonths: 1, // Number of months to show at a time\n            showCurrentAtPos: 0, // The position in multipe months at which to show the current month (starting at 0)\n            stepMonths: 1, // Number of months to step back/forward\n            stepBigMonths: 12, // Number of months to step back/forward for the big links\n            altField: \"\", // Selector for an alternate field to store selected dates into\n            altFormat: \"\", // The date format to use for the alternate field\n            constrainInput: true, // The input is constrained by the current date format\n            showButtonPanel: false, // True to show button panel, false to not show it\n            autoSize: false, // True to size the input for the date format, false to leave as is\n            disabled: false // The initial disabled state\n        };\n        $.extend(this._defaults, this.regional[\"\"]);\n        this.dpDiv = bindHover($(\"<div id='\" + this._mainDivId + \"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>\"));\n    }\n\n    $.extend(Datepicker.prototype, {\n        /* Class name added to elements to indicate already configured with a date picker. */\n        markerClassName: \"hasDatepicker\",\n\n        //Keep track of the maximum number of rows displayed (see #7043)\n        maxRows: 4,\n\n        // TODO rename to \"widget\" when switching to widget factory\n        _widgetDatepicker: function () {\n            return this.dpDiv;\n        },\n\n        /* Override the default settings for all instances of the date picker.\n         * @param  settings  object - the new settings to use as defaults (anonymous object)\n         * @return the manager object\n         */\n        setDefaults: function (settings) {\n            extendRemove(this._defaults, settings || {});\n            return this;\n        },\n\n        /* Attach the date picker to a jQuery selection.\n         * @param  target\telement - the target input field or division or span\n         * @param  settings  object - the new settings to use for this date picker instance (anonymous)\n         */\n        _attachDatepicker: function (target, settings) {\n            var nodeName, inline, inst;\n            nodeName = target.nodeName.toLowerCase();\n            inline = (nodeName === \"div\" || nodeName === \"span\");\n            if (!target.id) {\n                this.uuid += 1;\n                target.id = \"dp\" + this.uuid;\n            }\n            inst = this._newInst($(target), inline);\n            inst.settings = $.extend({}, settings || {});\n            if (nodeName === \"input\") {\n                this._connectDatepicker(target, inst);\n            } else if (inline) {\n                this._inlineDatepicker(target, inst);\n            }\n        },\n\n        /* Create a new instance object. */\n        _newInst: function (target, inline) {\n            var id = target[0].id.replace(/([^A-Za-z0-9_\\-])/g, \"\\\\\\\\$1\"); // escape jQuery meta chars\n            return {\n                id: id, input: target, // associated target\n                selectedDay: 0, selectedMonth: 0, selectedYear: 0, // current selection\n                drawMonth: 0, drawYear: 0, // month being drawn\n                inline: inline, // is datepicker inline or not\n                dpDiv: (!inline ? this.dpDiv : // presentation div\n                    bindHover($(\"<div class='\" + this._inlineClass + \" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>\")))\n            };\n        },\n\n        /* Attach the date picker to an input field. */\n        _connectDatepicker: function (target, inst) {\n            var input = $(target);\n            inst.append = $([]);\n            inst.trigger = $([]);\n            if (input.hasClass(this.markerClassName)) {\n                return;\n            }\n            this._attachments(input, inst);\n            input.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp);\n            this._autoSize(inst);\n            $.data(target, PROP_NAME, inst);\n            //If disabled option is true, disable the datepicker once it has been attached to the input (see ticket #5665)\n            if (inst.settings.disabled) {\n                this._disableDatepicker(target);\n            }\n        },\n\n        /* Make attachments based on settings. */\n        _attachments: function (input, inst) {\n            var showOn, buttonText, buttonImage,\n                appendText = this._get(inst, \"appendText\"),\n                isRTL = this._get(inst, \"isRTL\");\n\n            if (inst.append) {\n                inst.append.remove();\n            }\n            if (appendText) {\n                inst.append = $(\"<span class='\" + this._appendClass + \"'>\" + appendText + \"</span>\");\n                input[isRTL ? \"before\" : \"after\"](inst.append);\n            }\n\n            input.unbind(\"focus\", this._showDatepicker);\n\n            if (inst.trigger) {\n                inst.trigger.remove();\n            }\n\n            showOn = this._get(inst, \"showOn\");\n            if (showOn === \"focus\" || showOn === \"both\") { // pop-up date picker when in the marked field\n                input.focus(this._showDatepicker);\n            }\n            if (showOn === \"button\" || showOn === \"both\") { // pop-up date picker when button clicked\n                buttonText = this._get(inst, \"buttonText\");\n                buttonImage = this._get(inst, \"buttonImage\");\n                inst.trigger = $(this._get(inst, \"buttonImageOnly\") ?\n                    $(\"<img/>\").addClass(this._triggerClass).attr({\n                        src: buttonImage,\n                        alt: buttonText,\n                        title: buttonText\n                    }) :\n                    $(\"<button type='button'></button>\").addClass(this._triggerClass).html(!buttonImage ? buttonText : $(\"<img/>\").attr(\n                        {src: buttonImage, alt: buttonText, title: buttonText})));\n                input[isRTL ? \"before\" : \"after\"](inst.trigger);\n                inst.trigger.click(function () {\n                    if ($.datepicker._datepickerShowing && $.datepicker._lastInput === input[0]) {\n                        $.datepicker._hideDatepicker();\n                    } else if ($.datepicker._datepickerShowing && $.datepicker._lastInput !== input[0]) {\n                        $.datepicker._hideDatepicker();\n                        $.datepicker._showDatepicker(input[0]);\n                    } else {\n                        $.datepicker._showDatepicker(input[0]);\n                    }\n                    return false;\n                });\n            }\n        },\n\n        /* Apply the maximum length for the date format. */\n        _autoSize: function (inst) {\n            if (this._get(inst, \"autoSize\") && !inst.inline) {\n                var findMax, max, maxI, i,\n                    date = new Date(2009, 12 - 1, 20), // Ensure double digits\n                    dateFormat = this._get(inst, \"dateFormat\");\n\n                if (dateFormat.match(/[DM]/)) {\n                    findMax = function (names) {\n                        max = 0;\n                        maxI = 0;\n                        for (i = 0; i < names.length; i++) {\n                            if (names[i].length > max) {\n                                max = names[i].length;\n                                maxI = i;\n                            }\n                        }\n                        return maxI;\n                    };\n                    date.setMonth(findMax(this._get(inst, (dateFormat.match(/MM/) ?\n                        \"monthNames\" : \"monthNamesShort\"))));\n                    date.setDate(findMax(this._get(inst, (dateFormat.match(/DD/) ?\n                        \"dayNames\" : \"dayNamesShort\"))) + 20 - date.getDay());\n                }\n                inst.input.attr(\"size\", this._formatDate(inst, date).length);\n            }\n        },\n\n        /* Attach an inline date picker to a div. */\n        _inlineDatepicker: function (target, inst) {\n            var divSpan = $(target);\n            if (divSpan.hasClass(this.markerClassName)) {\n                return;\n            }\n            divSpan.addClass(this.markerClassName).append(inst.dpDiv);\n            $.data(target, PROP_NAME, inst);\n            this._setDate(inst, this._getDefaultDate(inst), true);\n            this._updateDatepicker(inst);\n            this._updateAlternate(inst);\n            //If disabled option is true, disable the datepicker before showing it (see ticket #5665)\n            if (inst.settings.disabled) {\n                this._disableDatepicker(target);\n            }\n            // Set display:block in place of inst.dpDiv.show() which won't work on disconnected elements\n            // http://bugs.jqueryui.com/ticket/7552 - A Datepicker created on a detached div has zero height\n            inst.dpDiv.css(\"display\", \"block\");\n        },\n\n        /* Pop-up the date picker in a \"dialog\" box.\n         * @param  input element - ignored\n         * @param  date\tstring or Date - the initial date to display\n         * @param  onSelect  function - the function to call when a date is selected\n         * @param  settings  object - update the dialog date picker instance's settings (anonymous object)\n         * @param  pos int[2] - coordinates for the dialog's position within the screen or\n         *\t\t\t\t\tevent - with x/y coordinates or\n         *\t\t\t\t\tleave empty for default (screen centre)\n         * @return the manager object\n         */\n        _dialogDatepicker: function (input, date, onSelect, settings, pos) {\n            var id, browserWidth, browserHeight, scrollX, scrollY,\n                inst = this._dialogInst; // internal instance\n\n            if (!inst) {\n                this.uuid += 1;\n                id = \"dp\" + this.uuid;\n                this._dialogInput = $(\"<input type='text' id='\" + id +\n                    \"' style='position: absolute; top: -100px; width: 0px;'/>\");\n                this._dialogInput.keydown(this._doKeyDown);\n                $(\"body\").append(this._dialogInput);\n                inst = this._dialogInst = this._newInst(this._dialogInput, false);\n                inst.settings = {};\n                $.data(this._dialogInput[0], PROP_NAME, inst);\n            }\n            extendRemove(inst.settings, settings || {});\n            date = (date && date.constructor === Date ? this._formatDate(inst, date) : date);\n            this._dialogInput.val(date);\n\n            this._pos = (pos ? (pos.length ? pos : [pos.pageX, pos.pageY]) : null);\n            if (!this._pos) {\n                browserWidth = document.documentElement.clientWidth;\n                browserHeight = document.documentElement.clientHeight;\n                scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;\n                scrollY = document.documentElement.scrollTop || document.body.scrollTop;\n                this._pos = // should use actual width/height below\n                    [(browserWidth / 2) - 100 + scrollX, (browserHeight / 2) - 150 + scrollY];\n            }\n\n            // move input on screen for focus, but hidden behind dialog\n            this._dialogInput.css(\"left\", (this._pos[0] + 20) + \"px\").css(\"top\", this._pos[1] + \"px\");\n            inst.settings.onSelect = onSelect;\n            this._inDialog = true;\n            this.dpDiv.addClass(this._dialogClass);\n            this._showDatepicker(this._dialogInput[0]);\n            if ($.blockUI) {\n                $.blockUI(this.dpDiv);\n            }\n            $.data(this._dialogInput[0], PROP_NAME, inst);\n            return this;\n        },\n\n        /* Detach a datepicker from its control.\n         * @param  target\telement - the target input field or division or span\n         */\n        _destroyDatepicker: function (target) {\n            var nodeName,\n                $target = $(target),\n                inst = $.data(target, PROP_NAME);\n\n            if (!$target.hasClass(this.markerClassName)) {\n                return;\n            }\n\n            nodeName = target.nodeName.toLowerCase();\n            $.removeData(target, PROP_NAME);\n            if (nodeName === \"input\") {\n                inst.append.remove();\n                inst.trigger.remove();\n                $target.removeClass(this.markerClassName).unbind(\"focus\", this._showDatepicker).unbind(\"keydown\", this._doKeyDown).unbind(\"keypress\", this._doKeyPress).unbind(\"keyup\", this._doKeyUp);\n            } else if (nodeName === \"div\" || nodeName === \"span\") {\n                $target.removeClass(this.markerClassName).empty();\n            }\n        },\n\n        /* Enable the date picker to a jQuery selection.\n         * @param  target\telement - the target input field or division or span\n         */\n        _enableDatepicker: function (target) {\n            var nodeName, inline,\n                $target = $(target),\n                inst = $.data(target, PROP_NAME);\n\n            if (!$target.hasClass(this.markerClassName)) {\n                return;\n            }\n\n            nodeName = target.nodeName.toLowerCase();\n            if (nodeName === \"input\") {\n                target.disabled = false;\n                inst.trigger.filter(\"button\").each(function () {\n                    this.disabled = false;\n                }).end().filter(\"img\").css({opacity: \"1.0\", cursor: \"\"});\n            } else if (nodeName === \"div\" || nodeName === \"span\") {\n                inline = $target.children(\".\" + this._inlineClass);\n                inline.children().removeClass(\"ui-state-disabled\");\n                inline.find(\"select.ui-datepicker-month, select.ui-datepicker-year\").prop(\"disabled\", false);\n            }\n            this._disabledInputs = $.map(this._disabledInputs,\n                function (value) {\n                    return (value === target ? null : value);\n                }); // delete entry\n        },\n\n        /* Disable the date picker to a jQuery selection.\n         * @param  target\telement - the target input field or division or span\n         */\n        _disableDatepicker: function (target) {\n            var nodeName, inline,\n                $target = $(target),\n                inst = $.data(target, PROP_NAME);\n\n            if (!$target.hasClass(this.markerClassName)) {\n                return;\n            }\n\n            nodeName = target.nodeName.toLowerCase();\n            if (nodeName === \"input\") {\n                target.disabled = true;\n                inst.trigger.filter(\"button\").each(function () {\n                    this.disabled = true;\n                }).end().filter(\"img\").css({opacity: \"0.5\", cursor: \"default\"});\n            } else if (nodeName === \"div\" || nodeName === \"span\") {\n                inline = $target.children(\".\" + this._inlineClass);\n                inline.children().addClass(\"ui-state-disabled\");\n                inline.find(\"select.ui-datepicker-month, select.ui-datepicker-year\").prop(\"disabled\", true);\n            }\n            this._disabledInputs = $.map(this._disabledInputs,\n                function (value) {\n                    return (value === target ? null : value);\n                }); // delete entry\n            this._disabledInputs[this._disabledInputs.length] = target;\n        },\n\n        /* Is the first field in a jQuery collection disabled as a datepicker?\n         * @param  target\telement - the target input field or division or span\n         * @return boolean - true if disabled, false if enabled\n         */\n        _isDisabledDatepicker: function (target) {\n            if (!target) {\n                return false;\n            }\n            for (var i = 0; i < this._disabledInputs.length; i++) {\n                if (this._disabledInputs[i] === target) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        /* Retrieve the instance data for the target control.\n         * @param  target  element - the target input field or division or span\n         * @return  object - the associated instance data\n         * @throws  error if a jQuery problem getting data\n         */\n        _getInst: function (target) {\n            try {\n                return $.data(target, PROP_NAME);\n            } catch (err) {\n                throw \"Missing instance data for this datepicker\";\n            }\n        },\n\n        /* Update or retrieve the settings for a date picker attached to an input field or division.\n         * @param  target  element - the target input field or division or span\n         * @param  name\tobject - the new settings to update or\n         *\t\t\t\tstring - the name of the setting to change or retrieve,\n         *\t\t\t\twhen retrieving also \"all\" for all instance settings or\n         *\t\t\t\t\"defaults\" for all global defaults\n         * @param  value   any - the new value for the setting\n         *\t\t\t\t(omit if above is an object or to retrieve a value)\n         */\n        _optionDatepicker: function (target, name, value) {\n            var settings, date, minDate, maxDate,\n                inst = this._getInst(target);\n\n            if (arguments.length === 2 && typeof name === \"string\") {\n                return (name === \"defaults\" ? $.extend({}, $.datepicker._defaults) :\n                    (inst ? (name === \"all\" ? $.extend({}, inst.settings) :\n                        this._get(inst, name)) : null));\n            }\n\n            settings = name || {};\n            if (typeof name === \"string\") {\n                settings = {};\n                settings[name] = value;\n            }\n\n            if (inst) {\n                if (this._curInst === inst) {\n                    this._hideDatepicker();\n                }\n\n                date = this._getDateDatepicker(target, true);\n                minDate = this._getMinMaxDate(inst, \"min\");\n                maxDate = this._getMinMaxDate(inst, \"max\");\n                extendRemove(inst.settings, settings);\n                // reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn't provided\n                if (minDate !== null && settings.dateFormat !== undefined && settings.minDate === undefined) {\n                    inst.settings.minDate = this._formatDate(inst, minDate);\n                }\n                if (maxDate !== null && settings.dateFormat !== undefined && settings.maxDate === undefined) {\n                    inst.settings.maxDate = this._formatDate(inst, maxDate);\n                }\n                if (\"disabled\" in settings) {\n                    if (settings.disabled) {\n                        this._disableDatepicker(target);\n                    } else {\n                        this._enableDatepicker(target);\n                    }\n                }\n                this._attachments($(target), inst);\n                this._autoSize(inst);\n                this._setDate(inst, date);\n                this._updateAlternate(inst);\n                this._updateDatepicker(inst);\n            }\n        },\n\n        // change method deprecated\n        _changeDatepicker: function (target, name, value) {\n            this._optionDatepicker(target, name, value);\n        },\n\n        /* Redraw the date picker attached to an input field or division.\n         * @param  target  element - the target input field or division or span\n         */\n        _refreshDatepicker: function (target) {\n            var inst = this._getInst(target);\n            if (inst) {\n                this._updateDatepicker(inst);\n            }\n        },\n\n        /* Set the dates for a jQuery selection.\n         * @param  target element - the target input field or division or span\n         * @param  date\tDate - the new date\n         */\n        _setDateDatepicker: function (target, date) {\n            var inst = this._getInst(target);\n            if (inst) {\n                this._setDate(inst, date);\n                this._updateDatepicker(inst);\n                this._updateAlternate(inst);\n            }\n        },\n\n        /* Get the date(s) for the first entry in a jQuery selection.\n         * @param  target element - the target input field or division or span\n         * @param  noDefault boolean - true if no default date is to be used\n         * @return Date - the current date\n         */\n        _getDateDatepicker: function (target, noDefault) {\n            var inst = this._getInst(target);\n            if (inst && !inst.inline) {\n                this._setDateFromField(inst, noDefault);\n            }\n            return (inst ? this._getDate(inst) : null);\n        },\n\n        /* Handle keystrokes. */\n        _doKeyDown: function (event) {\n            var onSelect, dateStr, sel,\n                inst = $.datepicker._getInst(event.target),\n                handled = true,\n                isRTL = inst.dpDiv.is(\".ui-datepicker-rtl\");\n\n            inst._keyEvent = true;\n            if ($.datepicker._datepickerShowing) {\n                switch (event.keyCode) {\n                    case 9:\n                        $.datepicker._hideDatepicker();\n                        handled = false;\n                        break; // hide on tab out\n                    case 13:\n                        sel = $(\"td.\" + $.datepicker._dayOverClass + \":not(.\" +\n                            $.datepicker._currentClass + \")\", inst.dpDiv);\n                        if (sel[0]) {\n                            $.datepicker._selectDay(event.target, inst.selectedMonth, inst.selectedYear, sel[0]);\n                        }\n\n                        onSelect = $.datepicker._get(inst, \"onSelect\");\n                        if (onSelect) {\n                            dateStr = $.datepicker._formatDate(inst);\n\n                            // trigger custom callback\n                            onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);\n                        } else {\n                            $.datepicker._hideDatepicker();\n                        }\n\n                        return false; // don't submit the form\n                    case 27:\n                        $.datepicker._hideDatepicker();\n                        break; // hide on escape\n                    case 33:\n                        $.datepicker._adjustDate(event.target, (event.ctrlKey ?\n                            -$.datepicker._get(inst, \"stepBigMonths\") :\n                            -$.datepicker._get(inst, \"stepMonths\")), \"M\");\n                        break; // previous month/year on page up/+ ctrl\n                    case 34:\n                        $.datepicker._adjustDate(event.target, (event.ctrlKey ?\n                            +$.datepicker._get(inst, \"stepBigMonths\") :\n                            +$.datepicker._get(inst, \"stepMonths\")), \"M\");\n                        break; // next month/year on page down/+ ctrl\n                    case 35:\n                        if (event.ctrlKey || event.metaKey) {\n                            $.datepicker._clearDate(event.target);\n                        }\n                        handled = event.ctrlKey || event.metaKey;\n                        break; // clear on ctrl or command +end\n                    case 36:\n                        if (event.ctrlKey || event.metaKey) {\n                            $.datepicker._gotoToday(event.target);\n                        }\n                        handled = event.ctrlKey || event.metaKey;\n                        break; // current on ctrl or command +home\n                    case 37:\n                        if (event.ctrlKey || event.metaKey) {\n                            $.datepicker._adjustDate(event.target, (isRTL ? +1 : -1), \"D\");\n                        }\n                        handled = event.ctrlKey || event.metaKey;\n                        // -1 day on ctrl or command +left\n                        if (event.originalEvent.altKey) {\n                            $.datepicker._adjustDate(event.target, (event.ctrlKey ?\n                                -$.datepicker._get(inst, \"stepBigMonths\") :\n                                -$.datepicker._get(inst, \"stepMonths\")), \"M\");\n                        }\n                        // next month/year on alt +left on Mac\n                        break;\n                    case 38:\n                        if (event.ctrlKey || event.metaKey) {\n                            $.datepicker._adjustDate(event.target, -7, \"D\");\n                        }\n                        handled = event.ctrlKey || event.metaKey;\n                        break; // -1 week on ctrl or command +up\n                    case 39:\n                        if (event.ctrlKey || event.metaKey) {\n                            $.datepicker._adjustDate(event.target, (isRTL ? -1 : +1), \"D\");\n                        }\n                        handled = event.ctrlKey || event.metaKey;\n                        // +1 day on ctrl or command +right\n                        if (event.originalEvent.altKey) {\n                            $.datepicker._adjustDate(event.target, (event.ctrlKey ?\n                                +$.datepicker._get(inst, \"stepBigMonths\") :\n                                +$.datepicker._get(inst, \"stepMonths\")), \"M\");\n                        }\n                        // next month/year on alt +right\n                        break;\n                    case 40:\n                        if (event.ctrlKey || event.metaKey) {\n                            $.datepicker._adjustDate(event.target, +7, \"D\");\n                        }\n                        handled = event.ctrlKey || event.metaKey;\n                        break; // +1 week on ctrl or command +down\n                    default:\n                        handled = false;\n                }\n            } else if (event.keyCode === 36 && event.ctrlKey) { // display the date picker on ctrl+home\n                $.datepicker._showDatepicker(this);\n            } else {\n                handled = false;\n            }\n\n            if (handled) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        },\n\n        /* Filter entered characters - based on date format. */\n        _doKeyPress: function (event) {\n            var chars, chr,\n                inst = $.datepicker._getInst(event.target);\n\n            if ($.datepicker._get(inst, \"constrainInput\")) {\n                chars = $.datepicker._possibleChars($.datepicker._get(inst, \"dateFormat\"));\n                chr = String.fromCharCode(event.charCode == null ? event.keyCode : event.charCode);\n                return event.ctrlKey || event.metaKey || (chr < \" \" || !chars || chars.indexOf(chr) > -1);\n            }\n        },\n\n        /* Synchronise manual entry and field/alternate field. */\n        _doKeyUp: function (event) {\n            var date,\n                inst = $.datepicker._getInst(event.target);\n\n            if (inst.input.val() !== inst.lastVal) {\n                try {\n                    date = $.datepicker.parseDate($.datepicker._get(inst, \"dateFormat\"),\n                        (inst.input ? inst.input.val() : null),\n                        $.datepicker._getFormatConfig(inst));\n\n                    if (date) { // only if valid\n                        $.datepicker._setDateFromField(inst);\n                        $.datepicker._updateAlternate(inst);\n                        $.datepicker._updateDatepicker(inst);\n                    }\n                } catch (err) {\n                }\n            }\n            return true;\n        },\n\n        /* Pop-up the date picker for a given input field.\n         * If false returned from beforeShow event handler do not show.\n         * @param  input  element - the input field attached to the date picker or\n         *\t\t\t\t\tevent - if triggered by focus\n         */\n        _showDatepicker: function (input) {\n            input = input.target || input;\n            if (input.nodeName.toLowerCase() !== \"input\") { // find from button/image trigger\n                input = $(\"input\", input.parentNode)[0];\n            }\n\n            if ($.datepicker._isDisabledDatepicker(input) || $.datepicker._lastInput === input) { // already here\n                return;\n            }\n\n            var inst, beforeShow, beforeShowSettings, isFixed,\n                offset, showAnim, duration;\n\n            inst = $.datepicker._getInst(input);\n            if ($.datepicker._curInst && $.datepicker._curInst !== inst) {\n                $.datepicker._curInst.dpDiv.stop(true, true);\n                if (inst && $.datepicker._datepickerShowing) {\n                    $.datepicker._hideDatepicker($.datepicker._curInst.input[0]);\n                }\n            }\n\n            beforeShow = $.datepicker._get(inst, \"beforeShow\");\n            beforeShowSettings = beforeShow ? beforeShow.apply(input, [input, inst]) : {};\n            if (beforeShowSettings === false) {\n                return;\n            }\n            extendRemove(inst.settings, beforeShowSettings);\n\n            inst.lastVal = null;\n            $.datepicker._lastInput = input;\n            $.datepicker._setDateFromField(inst);\n\n            if ($.datepicker._inDialog) { // hide cursor\n                input.value = \"\";\n            }\n            if (!$.datepicker._pos) { // position below input\n                $.datepicker._pos = $.datepicker._findPos(input);\n                $.datepicker._pos[1] += input.offsetHeight; // add the height\n            }\n\n            isFixed = false;\n            $(input).parents().each(function () {\n                isFixed |= $(this).css(\"position\") === \"fixed\";\n                return !isFixed;\n            });\n\n            offset = {left: $.datepicker._pos[0], top: $.datepicker._pos[1]};\n            $.datepicker._pos = null;\n            //to avoid flashes on Firefox\n            inst.dpDiv.empty();\n            // determine sizing offscreen\n            inst.dpDiv.css({position: \"absolute\", display: \"block\", top: \"-1000px\"});\n            $.datepicker._updateDatepicker(inst);\n            // fix width for dynamic number of date pickers\n            // and adjust position before showing\n            offset = $.datepicker._checkOffset(inst, offset, isFixed);\n            inst.dpDiv.css({\n                position: ($.datepicker._inDialog && $.blockUI ?\n                    \"static\" : (isFixed ? \"fixed\" : \"absolute\")), display: \"none\",\n                left: offset.left + \"px\", top: offset.top + \"px\"\n            });\n\n            if (!inst.inline) {\n                showAnim = $.datepicker._get(inst, \"showAnim\");\n                duration = $.datepicker._get(inst, \"duration\");\n                inst.dpDiv.zIndex($(input).zIndex() + 1);\n                $.datepicker._datepickerShowing = true;\n\n                if ($.effects && $.effects.effect[showAnim]) {\n                    inst.dpDiv.show(showAnim, $.datepicker._get(inst, \"showOptions\"), duration);\n                } else {\n                    inst.dpDiv[showAnim || \"show\"](showAnim ? duration : null);\n                }\n\n                if ($.datepicker._shouldFocusInput(inst)) {\n                    inst.input.focus();\n                }\n\n                $.datepicker._curInst = inst;\n            }\n        },\n\n        /* Generate the date picker content. */\n        _updateDatepicker: function (inst) {\n            this.maxRows = 4; //Reset the max number of rows being displayed (see #7043)\n            instActive = inst; // for delegate hover events\n            inst.dpDiv.empty().append(this._generateHTML(inst));\n            this._attachHandlers(inst);\n            inst.dpDiv.find(\".\" + this._dayOverClass + \" a\").mouseover();\n\n            var origyearshtml,\n                numMonths = this._getNumberOfMonths(inst),\n                cols = numMonths[1],\n                width = 17;\n\n            inst.dpDiv.removeClass(\"ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4\").width(\"\");\n            if (cols > 1) {\n                inst.dpDiv.addClass(\"ui-datepicker-multi-\" + cols).css(\"width\", (width * cols) + \"em\");\n            }\n            inst.dpDiv[(numMonths[0] !== 1 || numMonths[1] !== 1 ? \"add\" : \"remove\") +\n            \"Class\"](\"ui-datepicker-multi\");\n            inst.dpDiv[(this._get(inst, \"isRTL\") ? \"add\" : \"remove\") +\n            \"Class\"](\"ui-datepicker-rtl\");\n\n            if (inst === $.datepicker._curInst && $.datepicker._datepickerShowing && $.datepicker._shouldFocusInput(inst)) {\n                inst.input.focus();\n            }\n\n            // deffered render of the years select (to avoid flashes on Firefox)\n            if (inst.yearshtml) {\n                origyearshtml = inst.yearshtml;\n                setTimeout(function () {\n                    //assure that inst.yearshtml didn't change.\n                    if (origyearshtml === inst.yearshtml && inst.yearshtml) {\n                        inst.dpDiv.find(\"select.ui-datepicker-year:first\").replaceWith(inst.yearshtml);\n                    }\n                    origyearshtml = inst.yearshtml = null;\n                }, 0);\n            }\n        },\n\n        // #6694 - don't focus the input if it's already focused\n        // this breaks the change event in IE\n        // Support: IE and jQuery <1.9\n        _shouldFocusInput: function (inst) {\n            return inst.input && inst.input.is(\":visible\") && !inst.input.is(\":disabled\") && !inst.input.is(\":focus\");\n        },\n\n        /* Check positioning to remain on screen. */\n        _checkOffset: function (inst, offset, isFixed) {\n            var dpWidth = inst.dpDiv.outerWidth(),\n                dpHeight = inst.dpDiv.outerHeight(),\n                inputWidth = inst.input ? inst.input.outerWidth() : 0,\n                inputHeight = inst.input ? inst.input.outerHeight() : 0,\n                viewWidth = document.documentElement.clientWidth + (isFixed ? 0 : $(document).scrollLeft()),\n                viewHeight = document.documentElement.clientHeight + (isFixed ? 0 : $(document).scrollTop());\n\n            offset.left -= (this._get(inst, \"isRTL\") ? (dpWidth - inputWidth) : 0);\n            offset.left -= (isFixed && offset.left === inst.input.offset().left) ? $(document).scrollLeft() : 0;\n            offset.top -= (isFixed && offset.top === (inst.input.offset().top + inputHeight)) ? $(document).scrollTop() : 0;\n\n            // now check if datepicker is showing outside window viewport - move to a better place if so.\n            offset.left -= Math.min(offset.left, (offset.left + dpWidth > viewWidth && viewWidth > dpWidth) ?\n                Math.abs(offset.left + dpWidth - viewWidth) : 0);\n            offset.top -= Math.min(offset.top, (offset.top + dpHeight > viewHeight && viewHeight > dpHeight) ?\n                Math.abs(dpHeight + inputHeight) : 0);\n\n            return offset;\n        },\n\n        /* Find an object's position on the screen. */\n        _findPos: function (obj) {\n            var position,\n                inst = this._getInst(obj),\n                isRTL = this._get(inst, \"isRTL\");\n\n            while (obj && (obj.type === \"hidden\" || obj.nodeType !== 1 || $.expr.filters.hidden(obj))) {\n                obj = obj[isRTL ? \"previousSibling\" : \"nextSibling\"];\n            }\n\n            position = $(obj).offset();\n            return [position.left, position.top];\n        },\n\n        /* Hide the date picker from view.\n         * @param  input  element - the input field attached to the date picker\n         */\n        _hideDatepicker: function (input) {\n            var showAnim, duration, postProcess, onClose,\n                inst = this._curInst;\n\n            if (!inst || (input && inst !== $.data(input, PROP_NAME))) {\n                return;\n            }\n\n            if (this._datepickerShowing) {\n                showAnim = this._get(inst, \"showAnim\");\n                duration = this._get(inst, \"duration\");\n                postProcess = function () {\n                    $.datepicker._tidyDialog(inst);\n                };\n\n                // DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed\n                if ($.effects && ($.effects.effect[showAnim] || $.effects[showAnim])) {\n                    inst.dpDiv.hide(showAnim, $.datepicker._get(inst, \"showOptions\"), duration, postProcess);\n                } else {\n                    inst.dpDiv[(showAnim === \"slideDown\" ? \"slideUp\" :\n                        (showAnim === \"fadeIn\" ? \"fadeOut\" : \"hide\"))]((showAnim ? duration : null), postProcess);\n                }\n\n                if (!showAnim) {\n                    postProcess();\n                }\n                this._datepickerShowing = false;\n\n                onClose = this._get(inst, \"onClose\");\n                if (onClose) {\n                    onClose.apply((inst.input ? inst.input[0] : null), [(inst.input ? inst.input.val() : \"\"), inst]);\n                }\n\n                this._lastInput = null;\n                if (this._inDialog) {\n                    this._dialogInput.css({position: \"absolute\", left: \"0\", top: \"-100px\"});\n                    if ($.blockUI) {\n                        $.unblockUI();\n                        $(\"body\").append(this.dpDiv);\n                    }\n                }\n                this._inDialog = false;\n            }\n        },\n\n        /* Tidy up after a dialog display. */\n        _tidyDialog: function (inst) {\n            inst.dpDiv.removeClass(this._dialogClass).unbind(\".ui-datepicker-calendar\");\n        },\n\n        /* Close date picker if clicked elsewhere. */\n        _checkExternalClick: function (event) {\n            if (!$.datepicker._curInst) {\n                return;\n            }\n\n            var $target = $(event.target),\n                inst = $.datepicker._getInst($target[0]);\n\n            if ((($target[0].id !== $.datepicker._mainDivId &&\n                $target.parents(\"#\" + $.datepicker._mainDivId).length === 0 &&\n                !$target.hasClass($.datepicker.markerClassName) &&\n                !$target.closest(\".\" + $.datepicker._triggerClass).length &&\n                $.datepicker._datepickerShowing && !($.datepicker._inDialog && $.blockUI))) ||\n                ($target.hasClass($.datepicker.markerClassName) && $.datepicker._curInst !== inst)) {\n                $.datepicker._hideDatepicker();\n            }\n        },\n\n        /* Adjust one of the date sub-fields. */\n        _adjustDate: function (id, offset, period) {\n            var target = $(id),\n                inst = this._getInst(target[0]);\n\n            if (this._isDisabledDatepicker(target[0])) {\n                return;\n            }\n            this._adjustInstDate(inst, offset +\n                (period === \"M\" ? this._get(inst, \"showCurrentAtPos\") : 0), // undo positioning\n                period);\n            this._updateDatepicker(inst);\n        },\n\n        /* Action for current link. */\n        _gotoToday: function (id) {\n            var date,\n                target = $(id),\n                inst = this._getInst(target[0]);\n\n            if (this._get(inst, \"gotoCurrent\") && inst.currentDay) {\n                inst.selectedDay = inst.currentDay;\n                inst.drawMonth = inst.selectedMonth = inst.currentMonth;\n                inst.drawYear = inst.selectedYear = inst.currentYear;\n            } else {\n                date = new Date();\n                inst.selectedDay = date.getDate();\n                inst.drawMonth = inst.selectedMonth = date.getMonth();\n                inst.drawYear = inst.selectedYear = date.getFullYear();\n            }\n            this._notifyChange(inst);\n            this._adjustDate(target);\n        },\n\n        /* Action for selecting a new month/year. */\n        _selectMonthYear: function (id, select, period) {\n            var target = $(id),\n                inst = this._getInst(target[0]);\n\n            inst[\"selected\" + (period === \"M\" ? \"Month\" : \"Year\")] =\n                inst[\"draw\" + (period === \"M\" ? \"Month\" : \"Year\")] =\n                    parseInt(select.options[select.selectedIndex].value, 10);\n\n            this._notifyChange(inst);\n            this._adjustDate(target);\n        },\n\n        /* Action for selecting a day. */\n        _selectDay: function (id, month, year, td) {\n            var inst,\n                target = $(id);\n\n            if ($(td).hasClass(this._unselectableClass) || this._isDisabledDatepicker(target[0])) {\n                return;\n            }\n\n            inst = this._getInst(target[0]);\n            inst.selectedDay = inst.currentDay = $(\"a\", td).html();\n            inst.selectedMonth = inst.currentMonth = month;\n            inst.selectedYear = inst.currentYear = year;\n            this._selectDate(id, this._formatDate(inst,\n                inst.currentDay, inst.currentMonth, inst.currentYear));\n        },\n\n        /* Erase the input field and hide the date picker. */\n        _clearDate: function (id) {\n            var target = $(id);\n            this._selectDate(target, \"\");\n        },\n\n        /* Update the input field with the selected date. */\n        _selectDate: function (id, dateStr) {\n            var onSelect,\n                target = $(id),\n                inst = this._getInst(target[0]);\n\n            dateStr = (dateStr != null ? dateStr : this._formatDate(inst));\n            if (inst.input) {\n                inst.input.val(dateStr);\n            }\n            this._updateAlternate(inst);\n\n            onSelect = this._get(inst, \"onSelect\");\n            if (onSelect) {\n                onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);  // trigger custom callback\n            } else if (inst.input) {\n                inst.input.trigger(\"change\"); // fire the change event\n            }\n\n            if (inst.inline) {\n                this._updateDatepicker(inst);\n            } else {\n                this._hideDatepicker();\n                this._lastInput = inst.input[0];\n                if (typeof (inst.input[0]) !== \"object\") {\n                    inst.input.focus(); // restore focus\n                }\n                this._lastInput = null;\n            }\n        },\n\n        /* Update any alternate field to synchronise with the main field. */\n        _updateAlternate: function (inst) {\n            var altFormat, date, dateStr,\n                altField = this._get(inst, \"altField\");\n\n            if (altField) { // update alternate field too\n                altFormat = this._get(inst, \"altFormat\") || this._get(inst, \"dateFormat\");\n                date = this._getDate(inst);\n                dateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst));\n                $(altField).each(function () {\n                    $(this).val(dateStr);\n                });\n            }\n        },\n\n        /* Set as beforeShowDay function to prevent selection of weekends.\n         * @param  date  Date - the date to customise\n         * @return [boolean, string] - is this date selectable?, what is its CSS class?\n         */\n        noWeekends: function (date) {\n            var day = date.getDay();\n            return [(day > 0 && day < 6), \"\"];\n        },\n\n        /* Set as calculateWeek to determine the week of the year based on the ISO 8601 definition.\n         * @param  date  Date - the date to get the week for\n         * @return  number - the number of the week within the year that contains this date\n         */\n        iso8601Week: function (date) {\n            var time,\n                checkDate = new Date(date.getTime());\n\n            // Find Thursday of this week starting on Monday\n            checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));\n\n            time = checkDate.getTime();\n            checkDate.setMonth(0); // Compare with Jan 1\n            checkDate.setDate(1);\n            return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;\n        },\n\n        /* Parse a string value into a date object.\n         * See formatDate below for the possible formats.\n         *\n         * @param  format string - the expected format of the date\n         * @param  value string - the date in the above format\n         * @param  settings Object - attributes include:\n         *\t\t\t\t\tshortYearCutoff  number - the cutoff year for determining the century (optional)\n         *\t\t\t\t\tdayNamesShort\tstring[7] - abbreviated names of the days from Sunday (optional)\n         *\t\t\t\t\tdayNames\t\tstring[7] - names of the days from Sunday (optional)\n         *\t\t\t\t\tmonthNamesShort string[12] - abbreviated names of the months (optional)\n         *\t\t\t\t\tmonthNames\t\tstring[12] - names of the months (optional)\n         * @return  Date - the extracted date value or null if value is blank\n         */\n        parseDate: function (format, value, settings) {\n            if (format == null || value == null) {\n                throw \"Invalid arguments\";\n            }\n\n            value = (typeof value === \"object\" ? value.toString() : value + \"\");\n            if (value === \"\") {\n                return null;\n            }\n\n            var iFormat, dim, extra,\n                iValue = 0,\n                shortYearCutoffTemp = (settings ? settings.shortYearCutoff : null) || this._defaults.shortYearCutoff,\n                shortYearCutoff = (typeof shortYearCutoffTemp !== \"string\" ? shortYearCutoffTemp :\n                    new Date().getFullYear() % 100 + parseInt(shortYearCutoffTemp, 10)),\n                dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,\n                dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,\n                monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,\n                monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,\n                year = -1,\n                month = -1,\n                day = -1,\n                doy = -1,\n                literal = false,\n                date,\n                // Check whether a format character is doubled\n                lookAhead = function (match) {\n                    var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);\n                    if (matches) {\n                        iFormat++;\n                    }\n                    return matches;\n                },\n                // Extract a number from the string value\n                getNumber = function (match) {\n                    var isDoubled = lookAhead(match),\n                        size = (match === \"@\" ? 14 : (match === \"!\" ? 20 :\n                            (match === \"y\" && isDoubled ? 4 : (match === \"o\" ? 3 : 2)))),\n                        digits = new RegExp(\"^\\\\d{1,\" + size + \"}\"),\n                        num = value.substring(iValue).match(digits);\n                    if (!num) {\n                        throw \"Missing number at position \" + iValue;\n                    }\n                    iValue += num[0].length;\n                    return parseInt(num[0], 10);\n                },\n                // Extract a name from the string value and convert to an index\n                getName = function (match, shortNames, longNames) {\n                    var index = -1,\n                        names = $.map(lookAhead(match) ? longNames : shortNames, function (v, k) {\n                            return [[k, v]];\n                        }).sort(function (a, b) {\n                            return -(a[1].length - b[1].length);\n                        });\n\n                    $.each(names, function (i, pair) {\n                        var name = pair[1];\n                        if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {\n                            index = pair[0];\n                            iValue += name.length;\n                            return false;\n                        }\n                    });\n                    if (index !== -1) {\n                        return index + 1;\n                    } else {\n                        throw \"Unknown name at position \" + iValue;\n                    }\n                },\n                // Confirm that a literal character matches the string value\n                checkLiteral = function () {\n                    if (value.charAt(iValue) !== format.charAt(iFormat)) {\n                        throw \"Unexpected literal at position \" + iValue;\n                    }\n                    iValue++;\n                };\n\n            for (iFormat = 0; iFormat < format.length; iFormat++) {\n                if (literal) {\n                    if (format.charAt(iFormat) === \"'\" && !lookAhead(\"'\")) {\n                        literal = false;\n                    } else {\n                        checkLiteral();\n                    }\n                } else {\n                    switch (format.charAt(iFormat)) {\n                        case \"d\":\n                            day = getNumber(\"d\");\n                            break;\n                        case \"D\":\n                            getName(\"D\", dayNamesShort, dayNames);\n                            break;\n                        case \"o\":\n                            doy = getNumber(\"o\");\n                            break;\n                        case \"m\":\n                            month = getNumber(\"m\");\n                            break;\n                        case \"M\":\n                            month = getName(\"M\", monthNamesShort, monthNames);\n                            break;\n                        case \"y\":\n                            year = getNumber(\"y\");\n                            break;\n                        case \"@\":\n                            date = new Date(getNumber(\"@\"));\n                            year = date.getFullYear();\n                            month = date.getMonth() + 1;\n                            day = date.getDate();\n                            break;\n                        case \"!\":\n                            date = new Date((getNumber(\"!\") - this._ticksTo1970) / 10000);\n                            year = date.getFullYear();\n                            month = date.getMonth() + 1;\n                            day = date.getDate();\n                            break;\n                        case \"'\":\n                            if (lookAhead(\"'\")) {\n                                checkLiteral();\n                            } else {\n                                literal = true;\n                            }\n                            break;\n                        default:\n                            checkLiteral();\n                    }\n                }\n            }\n\n            if (iValue < value.length) {\n                extra = value.substr(iValue);\n                if (!/^\\s+/.test(extra)) {\n                    throw \"Extra/unparsed characters found in date: \" + extra;\n                }\n            }\n\n            if (year === -1) {\n                year = new Date().getFullYear();\n            } else if (year < 100) {\n                year += new Date().getFullYear() - new Date().getFullYear() % 100 +\n                    (year <= shortYearCutoff ? 0 : -100);\n            }\n\n            if (doy > -1) {\n                month = 1;\n                day = doy;\n                do {\n                    dim = this._getDaysInMonth(year, month - 1);\n                    if (day <= dim) {\n                        break;\n                    }\n                    month++;\n                    day -= dim;\n                } while (true);\n            }\n\n            date = this._daylightSavingAdjust(new Date(year, month - 1, day));\n            if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {\n                throw \"Invalid date\"; // E.g. 31/02/00\n            }\n            return date;\n        },\n\n        /* Standard date formats. */\n        ATOM: \"yy-mm-dd\", // RFC 3339 (ISO 8601)\n        COOKIE: \"D, dd M yy\",\n        ISO_8601: \"yy-mm-dd\",\n        RFC_822: \"D, d M y\",\n        RFC_850: \"DD, dd-M-y\",\n        RFC_1036: \"D, d M y\",\n        RFC_1123: \"D, d M yy\",\n        RFC_2822: \"D, d M yy\",\n        RSS: \"D, d M y\", // RFC 822\n        TICKS: \"!\",\n        TIMESTAMP: \"@\",\n        W3C: \"yy-mm-dd\", // ISO 8601\n\n        _ticksTo1970: (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) +\n            Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000),\n\n        /* Format a date object into a string value.\n         * The format can be combinations of the following:\n         * d  - day of month (no leading zero)\n         * dd - day of month (two digit)\n         * o  - day of year (no leading zeros)\n         * oo - day of year (three digit)\n         * D  - day name short\n         * DD - day name long\n         * m  - month of year (no leading zero)\n         * mm - month of year (two digit)\n         * M  - month name short\n         * MM - month name long\n         * y  - year (two digit)\n         * yy - year (four digit)\n         * @ - Unix timestamp (ms since 01/01/1970)\n         * ! - Windows ticks (100ns since 01/01/0001)\n         * \"...\" - literal text\n         * '' - single quote\n         *\n         * @param  format string - the desired format of the date\n         * @param  date Date - the date value to format\n         * @param  settings Object - attributes include:\n         *\t\t\t\t\tdayNamesShort\tstring[7] - abbreviated names of the days from Sunday (optional)\n         *\t\t\t\t\tdayNames\t\tstring[7] - names of the days from Sunday (optional)\n         *\t\t\t\t\tmonthNamesShort string[12] - abbreviated names of the months (optional)\n         *\t\t\t\t\tmonthNames\t\tstring[12] - names of the months (optional)\n         * @return  string - the date in the above format\n         */\n        formatDate: function (format, date, settings) {\n            if (!date) {\n                return \"\";\n            }\n\n            var iFormat,\n                dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,\n                dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,\n                monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,\n                monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,\n                // Check whether a format character is doubled\n                lookAhead = function (match) {\n                    var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);\n                    if (matches) {\n                        iFormat++;\n                    }\n                    return matches;\n                },\n                // Format a number, with leading zero if necessary\n                formatNumber = function (match, value, len) {\n                    var num = \"\" + value;\n                    if (lookAhead(match)) {\n                        while (num.length < len) {\n                            num = \"0\" + num;\n                        }\n                    }\n                    return num;\n                },\n                // Format a name, short or long as requested\n                formatName = function (match, value, shortNames, longNames) {\n                    return (lookAhead(match) ? longNames[value] : shortNames[value]);\n                },\n                output = \"\",\n                literal = false;\n\n            if (date) {\n                for (iFormat = 0; iFormat < format.length; iFormat++) {\n                    if (literal) {\n                        if (format.charAt(iFormat) === \"'\" && !lookAhead(\"'\")) {\n                            literal = false;\n                        } else {\n                            output += format.charAt(iFormat);\n                        }\n                    } else {\n                        switch (format.charAt(iFormat)) {\n                            case \"d\":\n                                output += formatNumber(\"d\", date.getDate(), 2);\n                                break;\n                            case \"D\":\n                                output += formatName(\"D\", date.getDay(), dayNamesShort, dayNames);\n                                break;\n                            case \"o\":\n                                output += formatNumber(\"o\",\n                                    Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);\n                                break;\n                            case \"m\":\n                                output += formatNumber(\"m\", date.getMonth() + 1, 2);\n                                break;\n                            case \"M\":\n                                output += formatName(\"M\", date.getMonth(), monthNamesShort, monthNames);\n                                break;\n                            case \"y\":\n                                output += (lookAhead(\"y\") ? date.getFullYear() :\n                                    (date.getYear() % 100 < 10 ? \"0\" : \"\") + date.getYear() % 100);\n                                break;\n                            case \"@\":\n                                output += date.getTime();\n                                break;\n                            case \"!\":\n                                output += date.getTime() * 10000 + this._ticksTo1970;\n                                break;\n                            case \"'\":\n                                if (lookAhead(\"'\")) {\n                                    output += \"'\";\n                                } else {\n                                    literal = true;\n                                }\n                                break;\n                            default:\n                                output += format.charAt(iFormat);\n                        }\n                    }\n                }\n            }\n            return output;\n        },\n\n        /* Extract all possible characters from the date format. */\n        _possibleChars: function (format) {\n            var iFormat,\n                chars = \"\",\n                literal = false,\n                // Check whether a format character is doubled\n                lookAhead = function (match) {\n                    var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);\n                    if (matches) {\n                        iFormat++;\n                    }\n                    return matches;\n                };\n\n            for (iFormat = 0; iFormat < format.length; iFormat++) {\n                if (literal) {\n                    if (format.charAt(iFormat) === \"'\" && !lookAhead(\"'\")) {\n                        literal = false;\n                    } else {\n                        chars += format.charAt(iFormat);\n                    }\n                } else {\n                    switch (format.charAt(iFormat)) {\n                        case \"d\":\n                        case \"m\":\n                        case \"y\":\n                        case \"@\":\n                            chars += \"0123456789\";\n                            break;\n                        case \"D\":\n                        case \"M\":\n                            return null; // Accept anything\n                        case \"'\":\n                            if (lookAhead(\"'\")) {\n                                chars += \"'\";\n                            } else {\n                                literal = true;\n                            }\n                            break;\n                        default:\n                            chars += format.charAt(iFormat);\n                    }\n                }\n            }\n            return chars;\n        },\n\n        /* Get a setting value, defaulting if necessary. */\n        _get: function (inst, name) {\n            return inst.settings[name] !== undefined ?\n                inst.settings[name] : this._defaults[name];\n        },\n\n        /* Parse existing date and initialise date picker. */\n        _setDateFromField: function (inst, noDefault) {\n            if (inst.input.val() === inst.lastVal) {\n                return;\n            }\n\n            var dateFormat = this._get(inst, \"dateFormat\"),\n                dates = inst.lastVal = inst.input ? inst.input.val() : null,\n                defaultDate = this._getDefaultDate(inst),\n                date = defaultDate,\n                settings = this._getFormatConfig(inst);\n\n            try {\n                date = this.parseDate(dateFormat, dates, settings) || defaultDate;\n            } catch (event) {\n                dates = (noDefault ? \"\" : dates);\n            }\n            inst.selectedDay = date.getDate();\n            inst.drawMonth = inst.selectedMonth = date.getMonth();\n            inst.drawYear = inst.selectedYear = date.getFullYear();\n            inst.currentDay = (dates ? date.getDate() : 0);\n            inst.currentMonth = (dates ? date.getMonth() : 0);\n            inst.currentYear = (dates ? date.getFullYear() : 0);\n            this._adjustInstDate(inst);\n        },\n\n        /* Retrieve the default date shown on opening. */\n        _getDefaultDate: function (inst) {\n            return this._restrictMinMax(inst,\n                this._determineDate(inst, this._get(inst, \"defaultDate\"), new Date()));\n        },\n\n        /* A date may be specified as an exact value or a relative one. */\n        _determineDate: function (inst, date, defaultDate) {\n            var offsetNumeric = function (offset) {\n                    var date = new Date();\n                    date.setDate(date.getDate() + offset);\n                    return date;\n                },\n                offsetString = function (offset) {\n                    try {\n                        return $.datepicker.parseDate($.datepicker._get(inst, \"dateFormat\"),\n                            offset, $.datepicker._getFormatConfig(inst));\n                    } catch (e) {\n                        // Ignore\n                    }\n\n                    var date = (offset.toLowerCase().match(/^c/) ?\n                        $.datepicker._getDate(inst) : null) || new Date(),\n                        year = date.getFullYear(),\n                        month = date.getMonth(),\n                        day = date.getDate(),\n                        pattern = /([+\\-]?[0-9]+)\\s*(d|D|w|W|m|M|y|Y)?/g,\n                        matches = pattern.exec(offset);\n\n                    while (matches) {\n                        switch (matches[2] || \"d\") {\n                            case \"d\" :\n                            case \"D\" :\n                                day += parseInt(matches[1], 10);\n                                break;\n                            case \"w\" :\n                            case \"W\" :\n                                day += parseInt(matches[1], 10) * 7;\n                                break;\n                            case \"m\" :\n                            case \"M\" :\n                                month += parseInt(matches[1], 10);\n                                day = Math.min(day, $.datepicker._getDaysInMonth(year, month));\n                                break;\n                            case \"y\":\n                            case \"Y\" :\n                                year += parseInt(matches[1], 10);\n                                day = Math.min(day, $.datepicker._getDaysInMonth(year, month));\n                                break;\n                        }\n                        matches = pattern.exec(offset);\n                    }\n                    return new Date(year, month, day);\n                },\n                newDate = (date == null || date === \"\" ? defaultDate : (typeof date === \"string\" ? offsetString(date) :\n                    (typeof date === \"number\" ? (isNaN(date) ? defaultDate : offsetNumeric(date)) : new Date(date.getTime()))));\n\n            newDate = (newDate && newDate.toString() === \"Invalid Date\" ? defaultDate : newDate);\n            if (newDate) {\n                newDate.setHours(0);\n                newDate.setMinutes(0);\n                newDate.setSeconds(0);\n                newDate.setMilliseconds(0);\n            }\n            return this._daylightSavingAdjust(newDate);\n        },\n\n        /* Handle switch to/from daylight saving.\n         * Hours may be non-zero on daylight saving cut-over:\n         * > 12 when midnight changeover, but then cannot generate\n         * midnight datetime, so jump to 1AM, otherwise reset.\n         * @param  date  (Date) the date to check\n         * @return  (Date) the corrected date\n         */\n        _daylightSavingAdjust: function (date) {\n            if (!date) {\n                return null;\n            }\n            date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\n            return date;\n        },\n\n        /* Set the date(s) directly. */\n        _setDate: function (inst, date, noChange) {\n            var clear = !date,\n                origMonth = inst.selectedMonth,\n                origYear = inst.selectedYear,\n                newDate = this._restrictMinMax(inst, this._determineDate(inst, date, new Date()));\n\n            inst.selectedDay = inst.currentDay = newDate.getDate();\n            inst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();\n            inst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();\n            if ((origMonth !== inst.selectedMonth || origYear !== inst.selectedYear) && !noChange) {\n                this._notifyChange(inst);\n            }\n            this._adjustInstDate(inst);\n            if (inst.input) {\n                inst.input.val(clear ? \"\" : this._formatDate(inst));\n            }\n        },\n\n        /* Retrieve the date(s) directly. */\n        _getDate: function (inst) {\n            var startDate = (!inst.currentYear || (inst.input && inst.input.val() === \"\") ? null :\n                this._daylightSavingAdjust(new Date(\n                    inst.currentYear, inst.currentMonth, inst.currentDay)));\n            return startDate;\n        },\n\n        /* Attach the onxxx handlers.  These are declared statically so\n         * they work with static code transformers like Caja.\n         */\n        _attachHandlers: function (inst) {\n            var stepMonths = this._get(inst, \"stepMonths\"),\n                id = \"#\" + inst.id.replace(/\\\\\\\\/g, \"\\\\\");\n            inst.dpDiv.find(\"[data-handler]\").map(function () {\n                var handler = {\n                    prev: function () {\n                        $.datepicker._adjustDate(id, -stepMonths, \"M\");\n                    },\n                    next: function () {\n                        $.datepicker._adjustDate(id, +stepMonths, \"M\");\n                    },\n                    hide: function () {\n                        $.datepicker._hideDatepicker();\n                    },\n                    today: function () {\n                        $.datepicker._gotoToday(id);\n                    },\n                    selectDay: function () {\n                        $.datepicker._selectDay(id, +this.getAttribute(\"data-month\"), +this.getAttribute(\"data-year\"), this);\n                        return false;\n                    },\n                    selectMonth: function () {\n                        $.datepicker._selectMonthYear(id, this, \"M\");\n                        return false;\n                    },\n                    selectYear: function () {\n                        $.datepicker._selectMonthYear(id, this, \"Y\");\n                        return false;\n                    }\n                };\n                $(this).bind(this.getAttribute(\"data-event\"), handler[this.getAttribute(\"data-handler\")]);\n            });\n        },\n\n        /* Generate the HTML for the current state of the date picker. */\n        _generateHTML: function (inst) {\n            var maxDraw, prevText, prev, nextText, next, currentText, gotoDate,\n                controls, buttonPanel, firstDay, showWeek, dayNames, dayNamesMin,\n                monthNames, monthNamesShort, beforeShowDay, showOtherMonths,\n                selectOtherMonths, defaultDate, html, dow, row, group, col, selectedDate,\n                cornerClass, calender, thead, day, daysInMonth, leadDays, curRows, numRows,\n                printDate, dRow, tbody, daySettings, otherMonth, unselectable,\n                tempDate = new Date(),\n                today = this._daylightSavingAdjust(\n                    new Date(tempDate.getFullYear(), tempDate.getMonth(), tempDate.getDate())), // clear time\n                isRTL = this._get(inst, \"isRTL\"),\n                showButtonPanel = this._get(inst, \"showButtonPanel\"),\n                hideIfNoPrevNext = this._get(inst, \"hideIfNoPrevNext\"),\n                navigationAsDateFormat = this._get(inst, \"navigationAsDateFormat\"),\n                numMonths = this._getNumberOfMonths(inst),\n                showCurrentAtPos = this._get(inst, \"showCurrentAtPos\"),\n                stepMonths = this._get(inst, \"stepMonths\"),\n                isMultiMonth = (numMonths[0] !== 1 || numMonths[1] !== 1),\n                currentDate = this._daylightSavingAdjust((!inst.currentDay ? new Date(9999, 9, 9) :\n                    new Date(inst.currentYear, inst.currentMonth, inst.currentDay))),\n                minDate = this._getMinMaxDate(inst, \"min\"),\n                maxDate = this._getMinMaxDate(inst, \"max\"),\n                drawMonth = inst.drawMonth - showCurrentAtPos,\n                drawYear = inst.drawYear;\n\n            if (drawMonth < 0) {\n                drawMonth += 12;\n                drawYear--;\n            }\n            if (maxDate) {\n                maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(),\n                    maxDate.getMonth() - (numMonths[0] * numMonths[1]) + 1, maxDate.getDate()));\n                maxDraw = (minDate && maxDraw < minDate ? minDate : maxDraw);\n                while (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw) {\n                    drawMonth--;\n                    if (drawMonth < 0) {\n                        drawMonth = 11;\n                        drawYear--;\n                    }\n                }\n            }\n            inst.drawMonth = drawMonth;\n            inst.drawYear = drawYear;\n\n            prevText = this._get(inst, \"prevText\");\n            prevText = (!navigationAsDateFormat ? prevText : this.formatDate(prevText,\n                this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)),\n                this._getFormatConfig(inst)));\n\n            prev = (this._canAdjustMonth(inst, -1, drawYear, drawMonth) ?\n                \"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click'\" +\n                \" title='\" + prevText + \"'><span class='ui-icon ui-icon-circle-triangle-\" + (isRTL ? \"e\" : \"w\") + \"'>\" + prevText + \"</span></a>\" :\n                (hideIfNoPrevNext ? \"\" : \"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='\" + prevText + \"'><span class='ui-icon ui-icon-circle-triangle-\" + (isRTL ? \"e\" : \"w\") + \"'>\" + prevText + \"</span></a>\"));\n\n            nextText = this._get(inst, \"nextText\");\n            nextText = (!navigationAsDateFormat ? nextText : this.formatDate(nextText,\n                this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)),\n                this._getFormatConfig(inst)));\n\n            next = (this._canAdjustMonth(inst, +1, drawYear, drawMonth) ?\n                \"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click'\" +\n                \" title='\" + nextText + \"'><span class='ui-icon ui-icon-circle-triangle-\" + (isRTL ? \"w\" : \"e\") + \"'>\" + nextText + \"</span></a>\" :\n                (hideIfNoPrevNext ? \"\" : \"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='\" + nextText + \"'><span class='ui-icon ui-icon-circle-triangle-\" + (isRTL ? \"w\" : \"e\") + \"'>\" + nextText + \"</span></a>\"));\n\n            currentText = this._get(inst, \"currentText\");\n            gotoDate = (this._get(inst, \"gotoCurrent\") && inst.currentDay ? currentDate : today);\n            currentText = (!navigationAsDateFormat ? currentText :\n                this.formatDate(currentText, gotoDate, this._getFormatConfig(inst)));\n\n            controls = (!inst.inline ? \"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>\" +\n                this._get(inst, \"closeText\") + \"</button>\" : \"\");\n\n            buttonPanel = (showButtonPanel) ? \"<div class='ui-datepicker-buttonpane ui-widget-content'>\" + (isRTL ? controls : \"\") +\n                (this._isInRange(inst, gotoDate) ? \"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'\" +\n                    \">\" + currentText + \"</button>\" : \"\") + (isRTL ? \"\" : controls) + \"</div>\" : \"\";\n\n            firstDay = parseInt(this._get(inst, \"firstDay\"), 10);\n            firstDay = (isNaN(firstDay) ? 0 : firstDay);\n\n            showWeek = this._get(inst, \"showWeek\");\n            dayNames = this._get(inst, \"dayNames\");\n            dayNamesMin = this._get(inst, \"dayNamesMin\");\n            monthNames = this._get(inst, \"monthNames\");\n            monthNamesShort = this._get(inst, \"monthNamesShort\");\n            beforeShowDay = this._get(inst, \"beforeShowDay\");\n            showOtherMonths = this._get(inst, \"showOtherMonths\");\n            selectOtherMonths = this._get(inst, \"selectOtherMonths\");\n            defaultDate = this._getDefaultDate(inst);\n            html = \"\";\n            dow;\n            for (row = 0; row < numMonths[0]; row++) {\n                group = \"\";\n                this.maxRows = 4;\n                for (col = 0; col < numMonths[1]; col++) {\n                    selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));\n                    cornerClass = \" ui-corner-all\";\n                    calender = \"\";\n                    if (isMultiMonth) {\n                        calender += \"<div class='ui-datepicker-group\";\n                        if (numMonths[1] > 1) {\n                            switch (col) {\n                                case 0:\n                                    calender += \" ui-datepicker-group-first\";\n                                    cornerClass = \" ui-corner-\" + (isRTL ? \"right\" : \"left\");\n                                    break;\n                                case numMonths[1] - 1:\n                                    calender += \" ui-datepicker-group-last\";\n                                    cornerClass = \" ui-corner-\" + (isRTL ? \"left\" : \"right\");\n                                    break;\n                                default:\n                                    calender += \" ui-datepicker-group-middle\";\n                                    cornerClass = \"\";\n                                    break;\n                            }\n                        }\n                        calender += \"'>\";\n                    }\n                    calender += \"<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix\" + cornerClass + \"'>\" +\n                        (/all|left/.test(cornerClass) && row === 0 ? (isRTL ? next : prev) : \"\") +\n                        (/all|right/.test(cornerClass) && row === 0 ? (isRTL ? prev : next) : \"\") +\n                        this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate,\n                            row > 0 || col > 0, monthNames, monthNamesShort) + // draw month headers\n                        \"</div><table class='ui-datepicker-calendar'><thead>\" +\n                        \"<tr>\";\n                    thead = (showWeek ? \"<th class='ui-datepicker-week-col'>\" + this._get(inst, \"weekHeader\") + \"</th>\" : \"\");\n                    for (dow = 0; dow < 7; dow++) { // days of the week\n                        day = (dow + firstDay) % 7;\n                        thead += \"<th\" + ((dow + firstDay + 6) % 7 >= 5 ? \" class='ui-datepicker-week-end'\" : \"\") + \">\" +\n                            \"<span title='\" + dayNames[day] + \"'>\" + dayNamesMin[day] + \"</span></th>\";\n                    }\n                    calender += thead + \"</tr></thead><tbody>\";\n                    daysInMonth = this._getDaysInMonth(drawYear, drawMonth);\n                    if (drawYear === inst.selectedYear && drawMonth === inst.selectedMonth) {\n                        inst.selectedDay = Math.min(inst.selectedDay, daysInMonth);\n                    }\n                    leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;\n                    curRows = Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate\n                    numRows = (isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows); //If multiple months, use the higher number of rows (see #7043)\n                    this.maxRows = numRows;\n                    printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));\n                    for (dRow = 0; dRow < numRows; dRow++) { // create date picker rows\n                        calender += \"<tr>\";\n                        tbody = (!showWeek ? \"\" : \"<td class='ui-datepicker-week-col'>\" +\n                            this._get(inst, \"calculateWeek\")(printDate) + \"</td>\");\n                        for (dow = 0; dow < 7; dow++) { // create date picker days\n                            daySettings = (beforeShowDay ?\n                                beforeShowDay.apply((inst.input ? inst.input[0] : null), [printDate]) : [true, \"\"]);\n                            otherMonth = (printDate.getMonth() !== drawMonth);\n                            unselectable = (otherMonth && !selectOtherMonths) || !daySettings[0] ||\n                                (minDate && printDate < minDate) || (maxDate && printDate > maxDate);\n                            tbody += \"<td class='\" +\n                                ((dow + firstDay + 6) % 7 >= 5 ? \" ui-datepicker-week-end\" : \"\") + // highlight weekends\n                                (otherMonth ? \" ui-datepicker-other-month\" : \"\") + // highlight days from other months\n                                ((printDate.getTime() === selectedDate.getTime() && drawMonth === inst.selectedMonth && inst._keyEvent) || // user pressed key\n                                (defaultDate.getTime() === printDate.getTime() && defaultDate.getTime() === selectedDate.getTime()) ?\n                                    // or defaultDate is current printedDate and defaultDate is selectedDate\n                                    \" \" + this._dayOverClass : \"\") + // highlight selected day\n                                (unselectable ? \" \" + this._unselectableClass + \" ui-state-disabled\" : \"\") +  // highlight unselectable days\n                                (otherMonth && !showOtherMonths ? \"\" : \" \" + daySettings[1] + // highlight custom dates\n                                    (printDate.getTime() === currentDate.getTime() ? \" \" + this._currentClass : \"\") + // highlight selected day\n                                    (printDate.getTime() === today.getTime() ? \" ui-datepicker-today\" : \"\")) + \"'\" + // highlight today (if different)\n                                ((!otherMonth || showOtherMonths) && daySettings[2] ? \" title='\" + daySettings[2].replace(/'/g, \"&#39;\") + \"'\" : \"\") + // cell title\n                                (unselectable ? \"\" : \" data-handler='selectDay' data-event='click' data-month='\" + printDate.getMonth() + \"' data-year='\" + printDate.getFullYear() + \"'\") + \">\" + // actions\n                                (otherMonth && !showOtherMonths ? \"&#xa0;\" : // display for other months\n                                    (unselectable ? \"<span class='ui-state-default'>\" + printDate.getDate() + \"</span>\" : \"<a class='ui-state-default\" +\n                                        (printDate.getTime() === today.getTime() ? \" ui-state-highlight\" : \"\") +\n                                        (printDate.getTime() === currentDate.getTime() ? \" ui-state-active\" : \"\") + // highlight selected day\n                                        (otherMonth ? \" ui-priority-secondary\" : \"\") + // distinguish dates from other months\n                                        \"' href='#'>\" + printDate.getDate() + \"</a>\")) + \"</td>\"; // display selectable date\n                            printDate.setDate(printDate.getDate() + 1);\n                            printDate = this._daylightSavingAdjust(printDate);\n                        }\n                        calender += tbody + \"</tr>\";\n                    }\n                    drawMonth++;\n                    if (drawMonth > 11) {\n                        drawMonth = 0;\n                        drawYear++;\n                    }\n                    calender += \"</tbody></table>\" + (isMultiMonth ? \"</div>\" +\n                        ((numMonths[0] > 0 && col === numMonths[1] - 1) ? \"<div class='ui-datepicker-row-break'></div>\" : \"\") : \"\");\n                    group += calender;\n                }\n                html += group;\n            }\n            html += buttonPanel;\n            inst._keyEvent = false;\n            return html;\n        },\n\n        /* Generate the month and year header. */\n        _generateMonthYearHeader: function (inst, drawMonth, drawYear, minDate, maxDate,\n                                            secondary, monthNames, monthNamesShort) {\n\n            var inMinYear, inMaxYear, month, years, thisYear, determineYear, year, endYear,\n                changeMonth = this._get(inst, \"changeMonth\"),\n                changeYear = this._get(inst, \"changeYear\"),\n                showMonthAfterYear = this._get(inst, \"showMonthAfterYear\"),\n                html = \"<div class='ui-datepicker-title'>\",\n                monthHtml = \"\";\n\n            // month selection\n            if (secondary || !changeMonth) {\n                monthHtml += \"<span class='ui-datepicker-month'>\" + monthNames[drawMonth] + \"</span>\";\n            } else {\n                inMinYear = (minDate && minDate.getFullYear() === drawYear);\n                inMaxYear = (maxDate && maxDate.getFullYear() === drawYear);\n                monthHtml += \"<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>\";\n                for (month = 0; month < 12; month++) {\n                    if ((!inMinYear || month >= minDate.getMonth()) && (!inMaxYear || month <= maxDate.getMonth())) {\n                        monthHtml += \"<option value='\" + month + \"'\" +\n                            (month === drawMonth ? \" selected='selected'\" : \"\") +\n                            \">\" + monthNamesShort[month] + \"</option>\";\n                    }\n                }\n                monthHtml += \"</select>\";\n            }\n\n            if (!showMonthAfterYear) {\n                html += monthHtml + (secondary || !(changeMonth && changeYear) ? \"&#xa0;\" : \"\");\n            }\n\n            // year selection\n            if (!inst.yearshtml) {\n                inst.yearshtml = \"\";\n                if (secondary || !changeYear) {\n                    html += \"<span class='ui-datepicker-year'>\" + drawYear + \"</span>\";\n                } else {\n                    // determine range of years to display\n                    years = this._get(inst, \"yearRange\").split(\":\");\n                    thisYear = new Date().getFullYear();\n                    determineYear = function (value) {\n                        var year = (value.match(/c[+\\-].*/) ? drawYear + parseInt(value.substring(1), 10) :\n                            (value.match(/[+\\-].*/) ? thisYear + parseInt(value, 10) :\n                                parseInt(value, 10)));\n                        return (isNaN(year) ? thisYear : year);\n                    };\n                    year = determineYear(years[0]);\n                    endYear = Math.max(year, determineYear(years[1] || \"\"));\n                    year = (minDate ? Math.max(year, minDate.getFullYear()) : year);\n                    endYear = (maxDate ? Math.min(endYear, maxDate.getFullYear()) : endYear);\n                    inst.yearshtml += \"<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>\";\n                    for (; year <= endYear; year++) {\n                        inst.yearshtml += \"<option value='\" + year + \"'\" +\n                            (year === drawYear ? \" selected='selected'\" : \"\") +\n                            \">\" + year + \"</option>\";\n                    }\n                    inst.yearshtml += \"</select>\";\n\n                    html += inst.yearshtml;\n                    inst.yearshtml = null;\n                }\n            }\n\n            html += this._get(inst, \"yearSuffix\");\n            if (showMonthAfterYear) {\n                html += (secondary || !(changeMonth && changeYear) ? \"&#xa0;\" : \"\") + monthHtml;\n            }\n            html += \"</div>\"; // Close datepicker_header\n            return html;\n        },\n\n        /* Adjust one of the date sub-fields. */\n        _adjustInstDate: function (inst, offset, period) {\n            var year = inst.drawYear + (period === \"Y\" ? offset : 0),\n                month = inst.drawMonth + (period === \"M\" ? offset : 0),\n                day = Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) + (period === \"D\" ? offset : 0),\n                date = this._restrictMinMax(inst, this._daylightSavingAdjust(new Date(year, month, day)));\n\n            inst.selectedDay = date.getDate();\n            inst.drawMonth = inst.selectedMonth = date.getMonth();\n            inst.drawYear = inst.selectedYear = date.getFullYear();\n            if (period === \"M\" || period === \"Y\") {\n                this._notifyChange(inst);\n            }\n        },\n\n        /* Ensure a date is within any min/max bounds. */\n        _restrictMinMax: function (inst, date) {\n            var minDate = this._getMinMaxDate(inst, \"min\"),\n                maxDate = this._getMinMaxDate(inst, \"max\"),\n                newDate = (minDate && date < minDate ? minDate : date);\n            return (maxDate && newDate > maxDate ? maxDate : newDate);\n        },\n\n        /* Notify change of month/year. */\n        _notifyChange: function (inst) {\n            var onChange = this._get(inst, \"onChangeMonthYear\");\n            if (onChange) {\n                onChange.apply((inst.input ? inst.input[0] : null),\n                    [inst.selectedYear, inst.selectedMonth + 1, inst]);\n            }\n        },\n\n        /* Determine the number of months to show. */\n        _getNumberOfMonths: function (inst) {\n            var numMonths = this._get(inst, \"numberOfMonths\");\n            return (numMonths == null ? [1, 1] : (typeof numMonths === \"number\" ? [1, numMonths] : numMonths));\n        },\n\n        /* Determine the current maximum date - ensure no time components are set. */\n        _getMinMaxDate: function (inst, minMax) {\n            return this._determineDate(inst, this._get(inst, minMax + \"Date\"), null);\n        },\n\n        /* Find the number of days in a given month. */\n        _getDaysInMonth: function (year, month) {\n            return 32 - this._daylightSavingAdjust(new Date(year, month, 32)).getDate();\n        },\n\n        /* Find the day of the week of the first of a month. */\n        _getFirstDayOfMonth: function (year, month) {\n            return new Date(year, month, 1).getDay();\n        },\n\n        /* Determines if we should allow a \"next/prev\" month display change. */\n        _canAdjustMonth: function (inst, offset, curYear, curMonth) {\n            var numMonths = this._getNumberOfMonths(inst),\n                date = this._daylightSavingAdjust(new Date(curYear,\n                    curMonth + (offset < 0 ? offset : numMonths[0] * numMonths[1]), 1));\n\n            if (offset < 0) {\n                date.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth()));\n            }\n            return this._isInRange(inst, date);\n        },\n\n        /* Is the given date in the accepted range? */\n        _isInRange: function (inst, date) {\n            var yearSplit, currentYear,\n                minDate = this._getMinMaxDate(inst, \"min\"),\n                maxDate = this._getMinMaxDate(inst, \"max\"),\n                minYear = null,\n                maxYear = null,\n                years = this._get(inst, \"yearRange\");\n            if (years) {\n                yearSplit = years.split(\":\");\n                currentYear = new Date().getFullYear();\n                minYear = parseInt(yearSplit[0], 10);\n                maxYear = parseInt(yearSplit[1], 10);\n                if (yearSplit[0].match(/[+\\-].*/)) {\n                    minYear += currentYear;\n                }\n                if (yearSplit[1].match(/[+\\-].*/)) {\n                    maxYear += currentYear;\n                }\n            }\n\n            return ((!minDate || date.getTime() >= minDate.getTime()) &&\n                (!maxDate || date.getTime() <= maxDate.getTime()) &&\n                (!minYear || date.getFullYear() >= minYear) &&\n                (!maxYear || date.getFullYear() <= maxYear));\n        },\n\n        /* Provide the configuration settings for formatting/parsing. */\n        _getFormatConfig: function (inst) {\n            var shortYearCutoff = this._get(inst, \"shortYearCutoff\");\n            shortYearCutoff = (typeof shortYearCutoff !== \"string\" ? shortYearCutoff :\n                new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));\n            return {\n                shortYearCutoff: shortYearCutoff,\n                dayNamesShort: this._get(inst, \"dayNamesShort\"), dayNames: this._get(inst, \"dayNames\"),\n                monthNamesShort: this._get(inst, \"monthNamesShort\"), monthNames: this._get(inst, \"monthNames\")\n            };\n        },\n\n        /* Format the given date for display. */\n        _formatDate: function (inst, day, month, year) {\n            if (!day) {\n                inst.currentDay = inst.selectedDay;\n                inst.currentMonth = inst.selectedMonth;\n                inst.currentYear = inst.selectedYear;\n            }\n            var date = (day ? (typeof day === \"object\" ? day :\n                this._daylightSavingAdjust(new Date(year, month, day))) :\n                this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));\n            return this.formatDate(this._get(inst, \"dateFormat\"), date, this._getFormatConfig(inst));\n        }\n    });\n\n    /*\n     * Bind hover events for datepicker elements.\n     * Done via delegate so the binding only occurs once in the lifetime of the parent div.\n     * Global instActive, set by _updateDatepicker allows the handlers to find their way back to the active picker.\n     */\n    function bindHover(dpDiv) {\n        var selector = \"button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a\";\n        return dpDiv.delegate(selector, \"mouseout\", function () {\n            $(this).removeClass(\"ui-state-hover\");\n            if (this.className.indexOf(\"ui-datepicker-prev\") !== -1) {\n                $(this).removeClass(\"ui-datepicker-prev-hover\");\n            }\n            if (this.className.indexOf(\"ui-datepicker-next\") !== -1) {\n                $(this).removeClass(\"ui-datepicker-next-hover\");\n            }\n        })\n            .delegate(selector, \"mouseover\", function () {\n                if (!$.datepicker._isDisabledDatepicker(instActive.inline ? dpDiv.parent()[0] : instActive.input[0])) {\n                    $(this).parents(\".ui-datepicker-calendar\").find(\"a\").removeClass(\"ui-state-hover\");\n                    $(this).addClass(\"ui-state-hover\");\n                    if (this.className.indexOf(\"ui-datepicker-prev\") !== -1) {\n                        $(this).addClass(\"ui-datepicker-prev-hover\");\n                    }\n                    if (this.className.indexOf(\"ui-datepicker-next\") !== -1) {\n                        $(this).addClass(\"ui-datepicker-next-hover\");\n                    }\n                }\n            });\n    }\n\n    /* jQuery extend now ignores nulls! */\n    function extendRemove(target, props) {\n        $.extend(target, props);\n        for (var name in props) {\n            if (props[name] == null) {\n                target[name] = props[name];\n            }\n        }\n        return target;\n    }\n\n    /* Invoke the datepicker functionality.\n       @param  options  string - a command, optionally followed by additional parameters or\n                        Object - settings for attaching new datepicker functionality\n       @return  jQuery object */\n    $.fn.datepicker = function (options) {\n\n        /* Verify an empty collection wasn't passed - Fixes #6976 */\n        if (!this.length) {\n            return this;\n        }\n\n        /* Initialise the date picker. */\n        if (!$.datepicker.initialized) {\n            $(document).mousedown($.datepicker._checkExternalClick);\n            $.datepicker.initialized = true;\n        }\n\n        /* Append datepicker main container to body if not exist. */\n        if ($(\"#\" + $.datepicker._mainDivId).length === 0) {\n            $(\"body\").append($.datepicker.dpDiv);\n        }\n\n        var otherArgs = Array.prototype.slice.call(arguments, 1);\n        if (typeof options === \"string\" && (options === \"isDisabled\" || options === \"getDate\" || options === \"widget\")) {\n            return $.datepicker[\"_\" + options + \"Datepicker\"].apply($.datepicker, [this[0]].concat(otherArgs));\n        }\n        if (options === \"option\" && arguments.length === 2 && typeof arguments[1] === \"string\") {\n            return $.datepicker[\"_\" + options + \"Datepicker\"].apply($.datepicker, [this[0]].concat(otherArgs));\n        }\n        return this.each(function () {\n            typeof options === \"string\" ?\n                $.datepicker[\"_\" + options + \"Datepicker\"].apply($.datepicker, [this].concat(otherArgs)) :\n                $.datepicker._attachDatepicker(this, options);\n        });\n    };\n\n    $.datepicker = new Datepicker(); // singleton instance\n    $.datepicker.initialized = false;\n    $.datepicker.uuid = new Date().getTime();\n    $.datepicker.version = \"1.10.4\";\n\n});\n","jquery/ui-modules/resizable.js":"/*!\n * jQuery UI Resizable - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/resizable/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/core',\n    'jquery-ui-modules/mouse'\n], function ($, undefined) {\n\n    function num(v) {\n        return parseInt(v, 10) || 0;\n    }\n\n    function isNumber(value) {\n        return !isNaN(parseInt(value, 10));\n    }\n\n    $.widget(\"ui.resizable\", $.ui.mouse, {\n        version: \"1.10.4\",\n        widgetEventPrefix: \"resize\",\n        options: {\n            alsoResize: false,\n            animate: false,\n            animateDuration: \"slow\",\n            animateEasing: \"swing\",\n            aspectRatio: false,\n            autoHide: false,\n            containment: false,\n            ghost: false,\n            grid: false,\n            handles: \"e,s,se\",\n            helper: false,\n            maxHeight: null,\n            maxWidth: null,\n            minHeight: 10,\n            minWidth: 10,\n            // See #7960\n            zIndex: 90,\n\n            // callbacks\n            resize: null,\n            start: null,\n            stop: null\n        },\n        _create: function () {\n\n            var n, i, handle, axis, hname,\n                that = this,\n                o = this.options;\n            this.element.addClass(\"ui-resizable\");\n\n            $.extend(this, {\n                _aspectRatio: !!(o.aspectRatio),\n                aspectRatio: o.aspectRatio,\n                originalElement: this.element,\n                _proportionallyResizeElements: [],\n                _helper: o.helper || o.ghost || o.animate ? o.helper || \"ui-resizable-helper\" : null\n            });\n\n            //Wrap the element if it cannot hold child nodes\n            if (this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) {\n\n                //Create a wrapper element and set the wrapper to the new current internal element\n                this.element.wrap(\n                    $(\"<div class='ui-wrapper' style='overflow: hidden;'></div>\").css({\n                        position: this.element.css(\"position\"),\n                        width: this.element.outerWidth(),\n                        height: this.element.outerHeight(),\n                        top: this.element.css(\"top\"),\n                        left: this.element.css(\"left\")\n                    })\n                );\n\n                //Overwrite the original this.element\n                this.element = this.element.parent().data(\n                    \"ui-resizable\", this.element.data(\"ui-resizable\")\n                );\n\n                this.elementIsWrapper = true;\n\n                //Move margins to the wrapper\n                this.element.css({\n                    marginLeft: this.originalElement.css(\"marginLeft\"),\n                    marginTop: this.originalElement.css(\"marginTop\"),\n                    marginRight: this.originalElement.css(\"marginRight\"),\n                    marginBottom: this.originalElement.css(\"marginBottom\")\n                });\n                this.originalElement.css({marginLeft: 0, marginTop: 0, marginRight: 0, marginBottom: 0});\n\n                //Prevent Safari textarea resize\n                this.originalResizeStyle = this.originalElement.css(\"resize\");\n                this.originalElement.css(\"resize\", \"none\");\n\n                //Push the actual element to our proportionallyResize internal array\n                this._proportionallyResizeElements.push(this.originalElement.css({\n                    position: \"static\",\n                    zoom: 1,\n                    display: \"block\"\n                }));\n\n                // avoid IE jump (hard set the margin)\n                this.originalElement.css({margin: this.originalElement.css(\"margin\")});\n\n                // fix handlers offset\n                this._proportionallyResize();\n\n            }\n\n            this.handles = o.handles || (!$(\".ui-resizable-handle\", this.element).length ? \"e,s,se\" : {\n                n: \".ui-resizable-n\",\n                e: \".ui-resizable-e\",\n                s: \".ui-resizable-s\",\n                w: \".ui-resizable-w\",\n                se: \".ui-resizable-se\",\n                sw: \".ui-resizable-sw\",\n                ne: \".ui-resizable-ne\",\n                nw: \".ui-resizable-nw\"\n            });\n            if (this.handles.constructor === String) {\n\n                if (this.handles === \"all\") {\n                    this.handles = \"n,e,s,w,se,sw,ne,nw\";\n                }\n\n                n = this.handles.split(\",\");\n                this.handles = {};\n\n                for (i = 0; i < n.length; i++) {\n\n                    handle = $.trim(n[i]);\n                    hname = \"ui-resizable-\" + handle;\n                    axis = $(\"<div class='ui-resizable-handle \" + hname + \"'></div>\");\n\n                    // Apply zIndex to all handles - see #7960\n                    axis.css({zIndex: o.zIndex});\n\n                    //TODO : What's going on here?\n                    if (\"se\" === handle) {\n                        axis.addClass(\"ui-icon ui-icon-gripsmall-diagonal-se\");\n                    }\n\n                    //Insert into internal handles object and append to element\n                    this.handles[handle] = \".ui-resizable-\" + handle;\n                    this.element.append(axis);\n                }\n\n            }\n\n            this._renderAxis = function (target) {\n\n                var i, axis, padPos, padWrapper;\n\n                target = target || this.element;\n\n                for (i in this.handles) {\n\n                    if (this.handles[i].constructor === String) {\n                        this.handles[i] = $(this.handles[i], this.element).show();\n                    }\n\n                    //Apply pad to wrapper element, needed to fix axis position (textarea, inputs, scrolls)\n                    if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {\n\n                        axis = $(this.handles[i], this.element);\n\n                        //Checking the correct pad and border\n                        padWrapper = /sw|ne|nw|se|n|s/.test(i) ? axis.outerHeight() : axis.outerWidth();\n\n                        //The padding type i have to apply...\n                        padPos = [\"padding\",\n                            /ne|nw|n/.test(i) ? \"Top\" :\n                                /se|sw|s/.test(i) ? \"Bottom\" :\n                                    /^e$/.test(i) ? \"Right\" : \"Left\"].join(\"\");\n\n                        target.css(padPos, padWrapper);\n\n                        this._proportionallyResize();\n\n                    }\n\n                    //TODO: What's that good for? There's not anything to be executed left\n                    if (!$(this.handles[i]).length) {\n                        continue;\n                    }\n                }\n            };\n\n            //TODO: make renderAxis a prototype function\n            this._renderAxis(this.element);\n\n            this._handles = $(\".ui-resizable-handle\", this.element)\n                .disableSelection();\n\n            //Matching axis name\n            this._handles.mouseover(function () {\n                if (!that.resizing) {\n                    if (this.className) {\n                        axis = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);\n                    }\n                    //Axis, default = se\n                    that.axis = axis && axis[1] ? axis[1] : \"se\";\n                }\n            });\n\n            //If we want to auto hide the elements\n            if (o.autoHide) {\n                this._handles.hide();\n                $(this.element)\n                    .addClass(\"ui-resizable-autohide\")\n                    .mouseenter(function () {\n                        if (o.disabled) {\n                            return;\n                        }\n                        $(this).removeClass(\"ui-resizable-autohide\");\n                        that._handles.show();\n                    })\n                    .mouseleave(function () {\n                        if (o.disabled) {\n                            return;\n                        }\n                        if (!that.resizing) {\n                            $(this).addClass(\"ui-resizable-autohide\");\n                            that._handles.hide();\n                        }\n                    });\n            }\n\n            //Initialize the mouse interaction\n            this._mouseInit();\n\n        },\n\n        _destroy: function () {\n\n            this._mouseDestroy();\n\n            var wrapper,\n                _destroy = function (exp) {\n                    $(exp).removeClass(\"ui-resizable ui-resizable-disabled ui-resizable-resizing\")\n                        .removeData(\"resizable\").removeData(\"ui-resizable\").unbind(\".resizable\").find(\".ui-resizable-handle\").remove();\n                };\n\n            //TODO: Unwrap at same DOM position\n            if (this.elementIsWrapper) {\n                _destroy(this.element);\n                wrapper = this.element;\n                this.originalElement.css({\n                    position: wrapper.css(\"position\"),\n                    width: wrapper.outerWidth(),\n                    height: wrapper.outerHeight(),\n                    top: wrapper.css(\"top\"),\n                    left: wrapper.css(\"left\")\n                }).insertAfter(wrapper);\n                wrapper.remove();\n            }\n\n            this.originalElement.css(\"resize\", this.originalResizeStyle);\n            _destroy(this.originalElement);\n\n            return this;\n        },\n\n        _mouseCapture: function (event) {\n            var i, handle,\n                capture = false;\n\n            for (i in this.handles) {\n                handle = $(this.handles[i])[0];\n                if (handle === event.target || $.contains(handle, event.target)) {\n                    capture = true;\n                }\n            }\n\n            return !this.options.disabled && capture;\n        },\n\n        _mouseStart: function (event) {\n\n            var curleft, curtop, cursor,\n                o = this.options,\n                iniPos = this.element.position(),\n                el = this.element;\n\n            this.resizing = true;\n\n            // bugfix for http://dev.jquery.com/ticket/1749\n            if ((/absolute/).test(el.css(\"position\"))) {\n                el.css({position: \"absolute\", top: el.css(\"top\"), left: el.css(\"left\")});\n            } else if (el.is(\".ui-draggable\")) {\n                el.css({position: \"absolute\", top: iniPos.top, left: iniPos.left});\n            }\n\n            this._renderProxy();\n\n            curleft = num(this.helper.css(\"left\"));\n            curtop = num(this.helper.css(\"top\"));\n\n            if (o.containment) {\n                curleft += $(o.containment).scrollLeft() || 0;\n                curtop += $(o.containment).scrollTop() || 0;\n            }\n\n            //Store needed variables\n            this.offset = this.helper.offset();\n            this.position = {left: curleft, top: curtop};\n            this.size = this._helper ? {width: this.helper.width(), height: this.helper.height()} : {\n                width: el.width(),\n                height: el.height()\n            };\n            this.originalSize = this._helper ? {width: el.outerWidth(), height: el.outerHeight()} : {\n                width: el.width(),\n                height: el.height()\n            };\n            this.originalPosition = {left: curleft, top: curtop};\n            this.sizeDiff = {width: el.outerWidth() - el.width(), height: el.outerHeight() - el.height()};\n            this.originalMousePosition = {left: event.pageX, top: event.pageY};\n\n            //Aspect Ratio\n            this.aspectRatio = (typeof o.aspectRatio === \"number\") ? o.aspectRatio : ((this.originalSize.width / this.originalSize.height) || 1);\n\n            cursor = $(\".ui-resizable-\" + this.axis).css(\"cursor\");\n            $(\"body\").css(\"cursor\", cursor === \"auto\" ? this.axis + \"-resize\" : cursor);\n\n            el.addClass(\"ui-resizable-resizing\");\n            this._propagate(\"start\", event);\n            return true;\n        },\n\n        _mouseDrag: function (event) {\n\n            //Increase performance, avoid regex\n            var data,\n                el = this.helper, props = {},\n                smp = this.originalMousePosition,\n                a = this.axis,\n                prevTop = this.position.top,\n                prevLeft = this.position.left,\n                prevWidth = this.size.width,\n                prevHeight = this.size.height,\n                dx = (event.pageX - smp.left) || 0,\n                dy = (event.pageY - smp.top) || 0,\n                trigger = this._change[a];\n\n            if (!trigger) {\n                return false;\n            }\n\n            // Calculate the attrs that will be change\n            data = trigger.apply(this, [event, dx, dy]);\n\n            // Put this in the mouseDrag handler since the user can start pressing shift while resizing\n            this._updateVirtualBoundaries(event.shiftKey);\n            if (this._aspectRatio || event.shiftKey) {\n                data = this._updateRatio(data, event);\n            }\n\n            data = this._respectSize(data, event);\n\n            this._updateCache(data);\n\n            // plugins callbacks need to be called first\n            this._propagate(\"resize\", event);\n\n            if (this.position.top !== prevTop) {\n                props.top = this.position.top + \"px\";\n            }\n            if (this.position.left !== prevLeft) {\n                props.left = this.position.left + \"px\";\n            }\n            if (this.size.width !== prevWidth) {\n                props.width = this.size.width + \"px\";\n            }\n            if (this.size.height !== prevHeight) {\n                props.height = this.size.height + \"px\";\n            }\n            el.css(props);\n\n            if (!this._helper && this._proportionallyResizeElements.length) {\n                this._proportionallyResize();\n            }\n\n            // Call the user callback if the element was resized\n            if (!$.isEmptyObject(props)) {\n                this._trigger(\"resize\", event, this.ui());\n            }\n\n            return false;\n        },\n\n        _mouseStop: function (event) {\n\n            this.resizing = false;\n            var pr, ista, soffseth, soffsetw, s, left, top,\n                o = this.options, that = this;\n\n            if (this._helper) {\n\n                pr = this._proportionallyResizeElements;\n                ista = pr.length && (/textarea/i).test(pr[0].nodeName);\n                soffseth = ista && $.ui.hasScroll(pr[0], \"left\") /* TODO - jump height */ ? 0 : that.sizeDiff.height;\n                soffsetw = ista ? 0 : that.sizeDiff.width;\n\n                s = {width: (that.helper.width() - soffsetw), height: (that.helper.height() - soffseth)};\n                left = (parseInt(that.element.css(\"left\"), 10) + (that.position.left - that.originalPosition.left)) || null;\n                top = (parseInt(that.element.css(\"top\"), 10) + (that.position.top - that.originalPosition.top)) || null;\n\n                if (!o.animate) {\n                    this.element.css($.extend(s, {top: top, left: left}));\n                }\n\n                that.helper.height(that.size.height);\n                that.helper.width(that.size.width);\n\n                if (this._helper && !o.animate) {\n                    this._proportionallyResize();\n                }\n            }\n\n            $(\"body\").css(\"cursor\", \"auto\");\n\n            this.element.removeClass(\"ui-resizable-resizing\");\n\n            this._propagate(\"stop\", event);\n\n            if (this._helper) {\n                this.helper.remove();\n            }\n\n            return false;\n\n        },\n\n        _updateVirtualBoundaries: function (forceAspectRatio) {\n            var pMinWidth, pMaxWidth, pMinHeight, pMaxHeight, b,\n                o = this.options;\n\n            b = {\n                minWidth: isNumber(o.minWidth) ? o.minWidth : 0,\n                maxWidth: isNumber(o.maxWidth) ? o.maxWidth : Infinity,\n                minHeight: isNumber(o.minHeight) ? o.minHeight : 0,\n                maxHeight: isNumber(o.maxHeight) ? o.maxHeight : Infinity\n            };\n\n            if (this._aspectRatio || forceAspectRatio) {\n                // We want to create an enclosing box whose aspect ration is the requested one\n                // First, compute the \"projected\" size for each dimension based on the aspect ratio and other dimension\n                pMinWidth = b.minHeight * this.aspectRatio;\n                pMinHeight = b.minWidth / this.aspectRatio;\n                pMaxWidth = b.maxHeight * this.aspectRatio;\n                pMaxHeight = b.maxWidth / this.aspectRatio;\n\n                if (pMinWidth > b.minWidth) {\n                    b.minWidth = pMinWidth;\n                }\n                if (pMinHeight > b.minHeight) {\n                    b.minHeight = pMinHeight;\n                }\n                if (pMaxWidth < b.maxWidth) {\n                    b.maxWidth = pMaxWidth;\n                }\n                if (pMaxHeight < b.maxHeight) {\n                    b.maxHeight = pMaxHeight;\n                }\n            }\n            this._vBoundaries = b;\n        },\n\n        _updateCache: function (data) {\n            this.offset = this.helper.offset();\n            if (isNumber(data.left)) {\n                this.position.left = data.left;\n            }\n            if (isNumber(data.top)) {\n                this.position.top = data.top;\n            }\n            if (isNumber(data.height)) {\n                this.size.height = data.height;\n            }\n            if (isNumber(data.width)) {\n                this.size.width = data.width;\n            }\n        },\n\n        _updateRatio: function (data) {\n\n            var cpos = this.position,\n                csize = this.size,\n                a = this.axis;\n\n            if (isNumber(data.height)) {\n                data.width = (data.height * this.aspectRatio);\n            } else if (isNumber(data.width)) {\n                data.height = (data.width / this.aspectRatio);\n            }\n\n            if (a === \"sw\") {\n                data.left = cpos.left + (csize.width - data.width);\n                data.top = null;\n            }\n            if (a === \"nw\") {\n                data.top = cpos.top + (csize.height - data.height);\n                data.left = cpos.left + (csize.width - data.width);\n            }\n\n            return data;\n        },\n\n        _respectSize: function (data) {\n\n            var o = this._vBoundaries,\n                a = this.axis,\n                ismaxw = isNumber(data.width) && o.maxWidth && (o.maxWidth < data.width),\n                ismaxh = isNumber(data.height) && o.maxHeight && (o.maxHeight < data.height),\n                isminw = isNumber(data.width) && o.minWidth && (o.minWidth > data.width),\n                isminh = isNumber(data.height) && o.minHeight && (o.minHeight > data.height),\n                dw = this.originalPosition.left + this.originalSize.width,\n                dh = this.position.top + this.size.height,\n                cw = /sw|nw|w/.test(a), ch = /nw|ne|n/.test(a);\n            if (isminw) {\n                data.width = o.minWidth;\n            }\n            if (isminh) {\n                data.height = o.minHeight;\n            }\n            if (ismaxw) {\n                data.width = o.maxWidth;\n            }\n            if (ismaxh) {\n                data.height = o.maxHeight;\n            }\n\n            if (isminw && cw) {\n                data.left = dw - o.minWidth;\n            }\n            if (ismaxw && cw) {\n                data.left = dw - o.maxWidth;\n            }\n            if (isminh && ch) {\n                data.top = dh - o.minHeight;\n            }\n            if (ismaxh && ch) {\n                data.top = dh - o.maxHeight;\n            }\n\n            // fixing jump error on top/left - bug #2330\n            if (!data.width && !data.height && !data.left && data.top) {\n                data.top = null;\n            } else if (!data.width && !data.height && !data.top && data.left) {\n                data.left = null;\n            }\n\n            return data;\n        },\n\n        _proportionallyResize: function () {\n\n            if (!this._proportionallyResizeElements.length) {\n                return;\n            }\n\n            var i, j, borders, paddings, prel,\n                element = this.helper || this.element;\n\n            for (i = 0; i < this._proportionallyResizeElements.length; i++) {\n\n                prel = this._proportionallyResizeElements[i];\n\n                if (!this.borderDif) {\n                    this.borderDif = [];\n                    borders = [prel.css(\"borderTopWidth\"), prel.css(\"borderRightWidth\"), prel.css(\"borderBottomWidth\"), prel.css(\"borderLeftWidth\")];\n                    paddings = [prel.css(\"paddingTop\"), prel.css(\"paddingRight\"), prel.css(\"paddingBottom\"), prel.css(\"paddingLeft\")];\n\n                    for (j = 0; j < borders.length; j++) {\n                        this.borderDif[j] = (parseInt(borders[j], 10) || 0) + (parseInt(paddings[j], 10) || 0);\n                    }\n                }\n\n                prel.css({\n                    height: (element.height() - this.borderDif[0] - this.borderDif[2]) || 0,\n                    width: (element.width() - this.borderDif[1] - this.borderDif[3]) || 0\n                });\n\n            }\n\n        },\n\n        _renderProxy: function () {\n\n            var el = this.element, o = this.options;\n            this.elementOffset = el.offset();\n\n            if (this._helper) {\n\n                this.helper = this.helper || $(\"<div style='overflow:hidden;'></div>\");\n\n                this.helper.addClass(this._helper).css({\n                    width: this.element.outerWidth() - 1,\n                    height: this.element.outerHeight() - 1,\n                    position: \"absolute\",\n                    left: this.elementOffset.left + \"px\",\n                    top: this.elementOffset.top + \"px\",\n                    zIndex: ++o.zIndex //TODO: Don't modify option\n                });\n\n                this.helper\n                    .appendTo(\"body\")\n                    .disableSelection();\n\n            } else {\n                this.helper = this.element;\n            }\n\n        },\n\n        _change: {\n            e: function (event, dx) {\n                return {width: this.originalSize.width + dx};\n            },\n            w: function (event, dx) {\n                var cs = this.originalSize, sp = this.originalPosition;\n                return {left: sp.left + dx, width: cs.width - dx};\n            },\n            n: function (event, dx, dy) {\n                var cs = this.originalSize, sp = this.originalPosition;\n                return {top: sp.top + dy, height: cs.height - dy};\n            },\n            s: function (event, dx, dy) {\n                return {height: this.originalSize.height + dy};\n            },\n            se: function (event, dx, dy) {\n                return $.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [event, dx, dy]));\n            },\n            sw: function (event, dx, dy) {\n                return $.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [event, dx, dy]));\n            },\n            ne: function (event, dx, dy) {\n                return $.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [event, dx, dy]));\n            },\n            nw: function (event, dx, dy) {\n                return $.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [event, dx, dy]));\n            }\n        },\n\n        _propagate: function (n, event) {\n            $.ui.plugin.call(this, n, [event, this.ui()]);\n            (n !== \"resize\" && this._trigger(n, event, this.ui()));\n        },\n\n        plugins: {},\n\n        ui: function () {\n            return {\n                originalElement: this.originalElement,\n                element: this.element,\n                helper: this.helper,\n                position: this.position,\n                size: this.size,\n                originalSize: this.originalSize,\n                originalPosition: this.originalPosition\n            };\n        }\n\n    });\n\n    /*\n     * Resizable Extensions\n     */\n\n    $.ui.plugin.add(\"resizable\", \"animate\", {\n\n        stop: function (event) {\n            var that = $(this).data(\"ui-resizable\"),\n                o = that.options,\n                pr = that._proportionallyResizeElements,\n                ista = pr.length && (/textarea/i).test(pr[0].nodeName),\n                soffseth = ista && $.ui.hasScroll(pr[0], \"left\") /* TODO - jump height */ ? 0 : that.sizeDiff.height,\n                soffsetw = ista ? 0 : that.sizeDiff.width,\n                style = {width: (that.size.width - soffsetw), height: (that.size.height - soffseth)},\n                left = (parseInt(that.element.css(\"left\"), 10) + (that.position.left - that.originalPosition.left)) || null,\n                top = (parseInt(that.element.css(\"top\"), 10) + (that.position.top - that.originalPosition.top)) || null;\n\n            that.element.animate(\n                $.extend(style, top && left ? {top: top, left: left} : {}), {\n                    duration: o.animateDuration,\n                    easing: o.animateEasing,\n                    step: function () {\n\n                        var data = {\n                            width: parseInt(that.element.css(\"width\"), 10),\n                            height: parseInt(that.element.css(\"height\"), 10),\n                            top: parseInt(that.element.css(\"top\"), 10),\n                            left: parseInt(that.element.css(\"left\"), 10)\n                        };\n\n                        if (pr && pr.length) {\n                            $(pr[0]).css({width: data.width, height: data.height});\n                        }\n\n                        // propagating resize, and updating values for each animation step\n                        that._updateCache(data);\n                        that._propagate(\"resize\", event);\n\n                    }\n                }\n            );\n        }\n\n    });\n\n    $.ui.plugin.add(\"resizable\", \"containment\", {\n\n        start: function () {\n            var element, p, co, ch, cw, width, height,\n                that = $(this).data(\"ui-resizable\"),\n                o = that.options,\n                el = that.element,\n                oc = o.containment,\n                ce = (oc instanceof $) ? oc.get(0) : (/parent/.test(oc)) ? el.parent().get(0) : oc;\n\n            if (!ce) {\n                return;\n            }\n\n            that.containerElement = $(ce);\n\n            if (/document/.test(oc) || oc === document) {\n                that.containerOffset = {left: 0, top: 0};\n                that.containerPosition = {left: 0, top: 0};\n\n                that.parentData = {\n                    element: $(document), left: 0, top: 0,\n                    width: $(document).width(), height: $(document).height() || document.body.parentNode.scrollHeight\n                };\n            }\n\n            // i'm a node, so compute top, left, right, bottom\n            else {\n                element = $(ce);\n                p = [];\n                $([\"Top\", \"Right\", \"Left\", \"Bottom\"]).each(function (i, name) {\n                    p[i] = num(element.css(\"padding\" + name));\n                });\n\n                that.containerOffset = element.offset();\n                that.containerPosition = element.position();\n                that.containerSize = {height: (element.innerHeight() - p[3]), width: (element.innerWidth() - p[1])};\n\n                co = that.containerOffset;\n                ch = that.containerSize.height;\n                cw = that.containerSize.width;\n                width = ($.ui.hasScroll(ce, \"left\") ? ce.scrollWidth : cw);\n                height = ($.ui.hasScroll(ce) ? ce.scrollHeight : ch);\n\n                that.parentData = {\n                    element: ce, left: co.left, top: co.top, width: width, height: height\n                };\n            }\n        },\n\n        resize: function (event) {\n            var woset, hoset, isParent, isOffsetRelative,\n                that = $(this).data(\"ui-resizable\"),\n                o = that.options,\n                co = that.containerOffset, cp = that.position,\n                pRatio = that._aspectRatio || event.shiftKey,\n                cop = {top: 0, left: 0}, ce = that.containerElement;\n\n            if (ce[0] !== document && (/static/).test(ce.css(\"position\"))) {\n                cop = co;\n            }\n\n            if (cp.left < (that._helper ? co.left : 0)) {\n                that.size.width = that.size.width + (that._helper ? (that.position.left - co.left) : (that.position.left - cop.left));\n                if (pRatio) {\n                    that.size.height = that.size.width / that.aspectRatio;\n                }\n                that.position.left = o.helper ? co.left : 0;\n            }\n\n            if (cp.top < (that._helper ? co.top : 0)) {\n                that.size.height = that.size.height + (that._helper ? (that.position.top - co.top) : that.position.top);\n                if (pRatio) {\n                    that.size.width = that.size.height * that.aspectRatio;\n                }\n                that.position.top = that._helper ? co.top : 0;\n            }\n\n            that.offset.left = that.parentData.left + that.position.left;\n            that.offset.top = that.parentData.top + that.position.top;\n\n            woset = Math.abs((that._helper ? that.offset.left - cop.left : (that.offset.left - cop.left)) + that.sizeDiff.width);\n            hoset = Math.abs((that._helper ? that.offset.top - cop.top : (that.offset.top - co.top)) + that.sizeDiff.height);\n\n            isParent = that.containerElement.get(0) === that.element.parent().get(0);\n            isOffsetRelative = /relative|absolute/.test(that.containerElement.css(\"position\"));\n\n            if (isParent && isOffsetRelative) {\n                woset -= Math.abs(that.parentData.left);\n            }\n\n            if (woset + that.size.width >= that.parentData.width) {\n                that.size.width = that.parentData.width - woset;\n                if (pRatio) {\n                    that.size.height = that.size.width / that.aspectRatio;\n                }\n            }\n\n            if (hoset + that.size.height >= that.parentData.height) {\n                that.size.height = that.parentData.height - hoset;\n                if (pRatio) {\n                    that.size.width = that.size.height * that.aspectRatio;\n                }\n            }\n        },\n\n        stop: function () {\n            var that = $(this).data(\"ui-resizable\"),\n                o = that.options,\n                co = that.containerOffset,\n                cop = that.containerPosition,\n                ce = that.containerElement,\n                helper = $(that.helper),\n                ho = helper.offset(),\n                w = helper.outerWidth() - that.sizeDiff.width,\n                h = helper.outerHeight() - that.sizeDiff.height;\n\n            if (that._helper && !o.animate && (/relative/).test(ce.css(\"position\"))) {\n                $(this).css({left: ho.left - cop.left - co.left, width: w, height: h});\n            }\n\n            if (that._helper && !o.animate && (/static/).test(ce.css(\"position\"))) {\n                $(this).css({left: ho.left - cop.left - co.left, width: w, height: h});\n            }\n\n        }\n    });\n\n    $.ui.plugin.add(\"resizable\", \"alsoResize\", {\n\n        start: function () {\n            var that = $(this).data(\"ui-resizable\"),\n                o = that.options,\n                _store = function (exp) {\n                    $(exp).each(function () {\n                        var el = $(this);\n                        el.data(\"ui-resizable-alsoresize\", {\n                            width: parseInt(el.width(), 10), height: parseInt(el.height(), 10),\n                            left: parseInt(el.css(\"left\"), 10), top: parseInt(el.css(\"top\"), 10)\n                        });\n                    });\n                };\n\n            if (typeof (o.alsoResize) === \"object\" && !o.alsoResize.parentNode) {\n                if (o.alsoResize.length) {\n                    o.alsoResize = o.alsoResize[0];\n                    _store(o.alsoResize);\n                } else {\n                    $.each(o.alsoResize, function (exp) {\n                        _store(exp);\n                    });\n                }\n            } else {\n                _store(o.alsoResize);\n            }\n        },\n\n        resize: function (event, ui) {\n            var that = $(this).data(\"ui-resizable\"),\n                o = that.options,\n                os = that.originalSize,\n                op = that.originalPosition,\n                delta = {\n                    height: (that.size.height - os.height) || 0, width: (that.size.width - os.width) || 0,\n                    top: (that.position.top - op.top) || 0, left: (that.position.left - op.left) || 0\n                },\n\n                _alsoResize = function (exp, c) {\n                    $(exp).each(function () {\n                        var el = $(this), start = $(this).data(\"ui-resizable-alsoresize\"), style = {},\n                            css = c && c.length ? c : el.parents(ui.originalElement[0]).length ? [\"width\", \"height\"] : [\"width\", \"height\", \"top\", \"left\"];\n\n                        $.each(css, function (i, prop) {\n                            var sum = (start[prop] || 0) + (delta[prop] || 0);\n                            if (sum && sum >= 0) {\n                                style[prop] = sum || null;\n                            }\n                        });\n\n                        el.css(style);\n                    });\n                };\n\n            if (typeof (o.alsoResize) === \"object\" && !o.alsoResize.nodeType) {\n                $.each(o.alsoResize, function (exp, c) {\n                    _alsoResize(exp, c);\n                });\n            } else {\n                _alsoResize(o.alsoResize);\n            }\n        },\n\n        stop: function () {\n            $(this).removeData(\"resizable-alsoresize\");\n        }\n    });\n\n    $.ui.plugin.add(\"resizable\", \"ghost\", {\n\n        start: function () {\n\n            var that = $(this).data(\"ui-resizable\"), o = that.options, cs = that.size;\n\n            that.ghost = that.originalElement.clone();\n            that.ghost\n                .css({\n                    opacity: 0.25,\n                    display: \"block\",\n                    position: \"relative\",\n                    height: cs.height,\n                    width: cs.width,\n                    margin: 0,\n                    left: 0,\n                    top: 0\n                })\n                .addClass(\"ui-resizable-ghost\")\n                .addClass(typeof o.ghost === \"string\" ? o.ghost : \"\");\n\n            that.ghost.appendTo(that.helper);\n\n        },\n\n        resize: function () {\n            var that = $(this).data(\"ui-resizable\");\n            if (that.ghost) {\n                that.ghost.css({position: \"relative\", height: that.size.height, width: that.size.width});\n            }\n        },\n\n        stop: function () {\n            var that = $(this).data(\"ui-resizable\");\n            if (that.ghost && that.helper) {\n                that.helper.get(0).removeChild(that.ghost.get(0));\n            }\n        }\n\n    });\n\n    $.ui.plugin.add(\"resizable\", \"grid\", {\n\n        resize: function () {\n            var that = $(this).data(\"ui-resizable\"),\n                o = that.options,\n                cs = that.size,\n                os = that.originalSize,\n                op = that.originalPosition,\n                a = that.axis,\n                grid = typeof o.grid === \"number\" ? [o.grid, o.grid] : o.grid,\n                gridX = (grid[0] || 1),\n                gridY = (grid[1] || 1),\n                ox = Math.round((cs.width - os.width) / gridX) * gridX,\n                oy = Math.round((cs.height - os.height) / gridY) * gridY,\n                newWidth = os.width + ox,\n                newHeight = os.height + oy,\n                isMaxWidth = o.maxWidth && (o.maxWidth < newWidth),\n                isMaxHeight = o.maxHeight && (o.maxHeight < newHeight),\n                isMinWidth = o.minWidth && (o.minWidth > newWidth),\n                isMinHeight = o.minHeight && (o.minHeight > newHeight);\n\n            o.grid = grid;\n\n            if (isMinWidth) {\n                newWidth = newWidth + gridX;\n            }\n            if (isMinHeight) {\n                newHeight = newHeight + gridY;\n            }\n            if (isMaxWidth) {\n                newWidth = newWidth - gridX;\n            }\n            if (isMaxHeight) {\n                newHeight = newHeight - gridY;\n            }\n\n            if (/^(se|s|e)$/.test(a)) {\n                that.size.width = newWidth;\n                that.size.height = newHeight;\n            } else if (/^(ne)$/.test(a)) {\n                that.size.width = newWidth;\n                that.size.height = newHeight;\n                that.position.top = op.top - oy;\n            } else if (/^(sw)$/.test(a)) {\n                that.size.width = newWidth;\n                that.size.height = newHeight;\n                that.position.left = op.left - ox;\n            } else {\n                if (newHeight - gridY > 0) {\n                    that.size.height = newHeight;\n                    that.position.top = op.top - oy;\n                } else {\n                    that.size.height = gridY;\n                    that.position.top = op.top + os.height - gridY;\n                }\n                if (newWidth - gridX > 0) {\n                    that.size.width = newWidth;\n                    that.position.left = op.left - ox;\n                } else {\n                    that.size.width = gridX;\n                    that.position.left = op.left + os.width - gridX;\n                }\n            }\n        }\n\n    });\n\n});\n","jquery/ui-modules/effect-scale.js":"/*!\n * jQuery UI Effects Scale - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/scale-effect/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($, undefined) {\n\n    $.effects.effect.puff = function (o, done) {\n        var elem = $(this),\n            mode = $.effects.setMode(elem, o.mode || \"hide\"),\n            hide = mode === \"hide\",\n            percent = parseInt(o.percent, 10) || 150,\n            factor = percent / 100,\n            original = {\n                height: elem.height(),\n                width: elem.width(),\n                outerHeight: elem.outerHeight(),\n                outerWidth: elem.outerWidth()\n            };\n\n        $.extend(o, {\n            effect: \"scale\",\n            queue: false,\n            fade: true,\n            mode: mode,\n            complete: done,\n            percent: hide ? percent : 100,\n            from: hide ?\n                original :\n                {\n                    height: original.height * factor,\n                    width: original.width * factor,\n                    outerHeight: original.outerHeight * factor,\n                    outerWidth: original.outerWidth * factor\n                }\n        });\n\n        elem.effect(o);\n    };\n\n    $.effects.effect.scale = function (o, done) {\n\n        // Create element\n        var el = $(this),\n            options = $.extend(true, {}, o),\n            mode = $.effects.setMode(el, o.mode || \"effect\"),\n            percent = parseInt(o.percent, 10) ||\n                (parseInt(o.percent, 10) === 0 ? 0 : (mode === \"hide\" ? 0 : 100)),\n            direction = o.direction || \"both\",\n            origin = o.origin,\n            original = {\n                height: el.height(),\n                width: el.width(),\n                outerHeight: el.outerHeight(),\n                outerWidth: el.outerWidth()\n            },\n            factor = {\n                y: direction !== \"horizontal\" ? (percent / 100) : 1,\n                x: direction !== \"vertical\" ? (percent / 100) : 1\n            };\n\n        // We are going to pass this effect to the size effect:\n        options.effect = \"size\";\n        options.queue = false;\n        options.complete = done;\n\n        // Set default origin and restore for show/hide\n        if (mode !== \"effect\") {\n            options.origin = origin || [\"middle\", \"center\"];\n            options.restore = true;\n        }\n\n        options.from = o.from || (mode === \"show\" ? {\n            height: 0,\n            width: 0,\n            outerHeight: 0,\n            outerWidth: 0\n        } : original);\n        options.to = {\n            height: original.height * factor.y,\n            width: original.width * factor.x,\n            outerHeight: original.outerHeight * factor.y,\n            outerWidth: original.outerWidth * factor.x\n        };\n\n        // Fade option to support puff\n        if (options.fade) {\n            if (mode === \"show\") {\n                options.from.opacity = 0;\n                options.to.opacity = 1;\n            }\n            if (mode === \"hide\") {\n                options.from.opacity = 1;\n                options.to.opacity = 0;\n            }\n        }\n\n        // Animate\n        el.effect(options);\n\n    };\n\n    $.effects.effect.size = function (o, done) {\n\n        // Create element\n        var original, baseline, factor,\n            el = $(this),\n            props0 = [\"position\", \"top\", \"bottom\", \"left\", \"right\", \"width\", \"height\", \"overflow\", \"opacity\"],\n\n            // Always restore\n            props1 = [\"position\", \"top\", \"bottom\", \"left\", \"right\", \"overflow\", \"opacity\"],\n\n            // Copy for children\n            props2 = [\"width\", \"height\", \"overflow\"],\n            cProps = [\"fontSize\"],\n            vProps = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"],\n            hProps = [\"borderLeftWidth\", \"borderRightWidth\", \"paddingLeft\", \"paddingRight\"],\n\n            // Set options\n            mode = $.effects.setMode(el, o.mode || \"effect\"),\n            restore = o.restore || mode !== \"effect\",\n            scale = o.scale || \"both\",\n            origin = o.origin || [\"middle\", \"center\"],\n            position = el.css(\"position\"),\n            props = restore ? props0 : props1,\n            zero = {\n                height: 0,\n                width: 0,\n                outerHeight: 0,\n                outerWidth: 0\n            };\n\n        if (mode === \"show\") {\n            el.show();\n        }\n        original = {\n            height: el.height(),\n            width: el.width(),\n            outerHeight: el.outerHeight(),\n            outerWidth: el.outerWidth()\n        };\n\n        if (o.mode === \"toggle\" && mode === \"show\") {\n            el.from = o.to || zero;\n            el.to = o.from || original;\n        } else {\n            el.from = o.from || (mode === \"show\" ? zero : original);\n            el.to = o.to || (mode === \"hide\" ? zero : original);\n        }\n\n        // Set scaling factor\n        factor = {\n            from: {\n                y: el.from.height / original.height,\n                x: el.from.width / original.width\n            },\n            to: {\n                y: el.to.height / original.height,\n                x: el.to.width / original.width\n            }\n        };\n\n        // Scale the css box\n        if (scale === \"box\" || scale === \"both\") {\n\n            // Vertical props scaling\n            if (factor.from.y !== factor.to.y) {\n                props = props.concat(vProps);\n                el.from = $.effects.setTransition(el, vProps, factor.from.y, el.from);\n                el.to = $.effects.setTransition(el, vProps, factor.to.y, el.to);\n            }\n\n            // Horizontal props scaling\n            if (factor.from.x !== factor.to.x) {\n                props = props.concat(hProps);\n                el.from = $.effects.setTransition(el, hProps, factor.from.x, el.from);\n                el.to = $.effects.setTransition(el, hProps, factor.to.x, el.to);\n            }\n        }\n\n        // Scale the content\n        if (scale === \"content\" || scale === \"both\") {\n\n            // Vertical props scaling\n            if (factor.from.y !== factor.to.y) {\n                props = props.concat(cProps).concat(props2);\n                el.from = $.effects.setTransition(el, cProps, factor.from.y, el.from);\n                el.to = $.effects.setTransition(el, cProps, factor.to.y, el.to);\n            }\n        }\n\n        $.effects.save(el, props);\n        el.show();\n        $.effects.createWrapper(el);\n        el.css(\"overflow\", \"hidden\").css(el.from);\n\n        // Adjust\n        if (origin) { // Calculate baseline shifts\n            baseline = $.effects.getBaseline(origin, original);\n            el.from.top = (original.outerHeight - el.outerHeight()) * baseline.y;\n            el.from.left = (original.outerWidth - el.outerWidth()) * baseline.x;\n            el.to.top = (original.outerHeight - el.to.outerHeight) * baseline.y;\n            el.to.left = (original.outerWidth - el.to.outerWidth) * baseline.x;\n        }\n        el.css(el.from); // set top & left\n\n        // Animate\n        if (scale === \"content\" || scale === \"both\") { // Scale the children\n\n            // Add margins/font-size\n            vProps = vProps.concat([\"marginTop\", \"marginBottom\"]).concat(cProps);\n            hProps = hProps.concat([\"marginLeft\", \"marginRight\"]);\n            props2 = props0.concat(vProps).concat(hProps);\n\n            el.find(\"*[width]\").each(function () {\n                var child = $(this),\n                    c_original = {\n                        height: child.height(),\n                        width: child.width(),\n                        outerHeight: child.outerHeight(),\n                        outerWidth: child.outerWidth()\n                    };\n                if (restore) {\n                    $.effects.save(child, props2);\n                }\n\n                child.from = {\n                    height: c_original.height * factor.from.y,\n                    width: c_original.width * factor.from.x,\n                    outerHeight: c_original.outerHeight * factor.from.y,\n                    outerWidth: c_original.outerWidth * factor.from.x\n                };\n                child.to = {\n                    height: c_original.height * factor.to.y,\n                    width: c_original.width * factor.to.x,\n                    outerHeight: c_original.height * factor.to.y,\n                    outerWidth: c_original.width * factor.to.x\n                };\n\n                // Vertical props scaling\n                if (factor.from.y !== factor.to.y) {\n                    child.from = $.effects.setTransition(child, vProps, factor.from.y, child.from);\n                    child.to = $.effects.setTransition(child, vProps, factor.to.y, child.to);\n                }\n\n                // Horizontal props scaling\n                if (factor.from.x !== factor.to.x) {\n                    child.from = $.effects.setTransition(child, hProps, factor.from.x, child.from);\n                    child.to = $.effects.setTransition(child, hProps, factor.to.x, child.to);\n                }\n\n                // Animate children\n                child.css(child.from);\n                child.animate(child.to, o.duration, o.easing, function () {\n\n                    // Restore children\n                    if (restore) {\n                        $.effects.restore(child, props2);\n                    }\n                });\n            });\n        }\n\n        // Animate\n        el.animate(el.to, {\n            queue: false,\n            duration: o.duration,\n            easing: o.easing,\n            complete: function () {\n                if (el.to.opacity === 0) {\n                    el.css(\"opacity\", el.from.opacity);\n                }\n                if (mode === \"hide\") {\n                    el.hide();\n                }\n                $.effects.restore(el, props);\n                if (!restore) {\n\n                    // we need to calculate our new positioning based on the scaling\n                    if (position === \"static\") {\n                        el.css({\n                            position: \"relative\",\n                            top: el.to.top,\n                            left: el.to.left\n                        });\n                    } else {\n                        $.each([\"top\", \"left\"], function (idx, pos) {\n                            el.css(pos, function (_, str) {\n                                var val = parseInt(str, 10),\n                                    toRef = idx ? el.to.left : el.to.top;\n\n                                // if original was \"auto\", recalculate the new value from wrapper\n                                if (str === \"auto\") {\n                                    return toRef + \"px\";\n                                }\n\n                                return val + toRef + \"px\";\n                            });\n                        });\n                    }\n                }\n\n                $.effects.removeWrapper(el);\n                done();\n            }\n        });\n\n    };\n\n});\n","jquery/ui-modules/effect-shake.js":"/*!\n * jQuery UI Effects Shake - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/shake-effect/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($, undefined) {\n\n    $.effects.effect.shake = function (o, done) {\n\n        var el = $(this),\n            props = [\"position\", \"top\", \"bottom\", \"left\", \"right\", \"height\", \"width\"],\n            mode = $.effects.setMode(el, o.mode || \"effect\"),\n            direction = o.direction || \"left\",\n            distance = o.distance || 20,\n            times = o.times || 3,\n            anims = times * 2 + 1,\n            speed = Math.round(o.duration / anims),\n            ref = (direction === \"up\" || direction === \"down\") ? \"top\" : \"left\",\n            positiveMotion = (direction === \"up\" || direction === \"left\"),\n            animation = {},\n            animation1 = {},\n            animation2 = {},\n            i,\n\n            // we will need to re-assemble the queue to stack our animations in place\n            queue = el.queue(),\n            queuelen = queue.length;\n\n        $.effects.save(el, props);\n        el.show();\n        $.effects.createWrapper(el);\n\n        // Animation\n        animation[ref] = (positiveMotion ? \"-=\" : \"+=\") + distance;\n        animation1[ref] = (positiveMotion ? \"+=\" : \"-=\") + distance * 2;\n        animation2[ref] = (positiveMotion ? \"-=\" : \"+=\") + distance * 2;\n\n        // Animate\n        el.animate(animation, speed, o.easing);\n\n        // Shakes\n        for (i = 1; i < times; i++) {\n            el.animate(animation1, speed, o.easing).animate(animation2, speed, o.easing);\n        }\n        el\n            .animate(animation1, speed, o.easing)\n            .animate(animation, speed / 2, o.easing)\n            .queue(function () {\n                if (mode === \"hide\") {\n                    el.hide();\n                }\n                $.effects.restore(el, props);\n                $.effects.removeWrapper(el);\n                done();\n            });\n\n        // inject all the animations we just queued to be first in line (after \"inprogress\")\n        if (queuelen > 1) {\n            queue.splice.apply(queue,\n                [1, 0].concat(queue.splice(queuelen, anims + 1)));\n        }\n        el.dequeue();\n\n    };\n\n});\n","jquery/ui-modules/effect-fade.js":"/*!\n * jQuery UI Effects Fade - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/fade-effect/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($, undefined) {\n\n    $.effects.effect.fade = function (o, done) {\n        var el = $(this),\n            mode = $.effects.setMode(el, o.mode || \"toggle\");\n\n        el.animate({\n            opacity: mode\n        }, {\n            queue: false,\n            duration: o.duration,\n            easing: o.easing,\n            complete: done\n        });\n    };\n\n});\n","jquery/ui-modules/autocomplete.js":"/*!\n * jQuery UI Autocomplete - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/autocomplete/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/menu'\n], function ($, undefined) {\n\n    $.widget(\"ui.autocomplete\", {\n        version: \"1.10.4\",\n        defaultElement: \"<input>\",\n        options: {\n            appendTo: null,\n            autoFocus: false,\n            delay: 300,\n            minLength: 1,\n            position: {\n                my: \"left top\",\n                at: \"left bottom\",\n                collision: \"none\"\n            },\n            source: null,\n\n            // callbacks\n            change: null,\n            close: null,\n            focus: null,\n            open: null,\n            response: null,\n            search: null,\n            select: null\n        },\n\n        requestIndex: 0,\n        pending: 0,\n\n        _create: function () {\n            // Some browsers only repeat keydown events, not keypress events,\n            // so we use the suppressKeyPress flag to determine if we've already\n            // handled the keydown event. #7269\n            // Unfortunately the code for & in keypress is the same as the up arrow,\n            // so we use the suppressKeyPressRepeat flag to avoid handling keypress\n            // events when we know the keydown event was used to modify the\n            // search term. #7799\n            var suppressKeyPress, suppressKeyPressRepeat, suppressInput,\n                nodeName = this.element[0].nodeName.toLowerCase(),\n                isTextarea = nodeName === \"textarea\",\n                isInput = nodeName === \"input\";\n\n            this.isMultiLine =\n                // Textareas are always multi-line\n                isTextarea ? true :\n                    // Inputs are always single-line, even if inside a contentEditable element\n                    // IE also treats inputs as contentEditable\n                    isInput ? false :\n                        // All other element types are determined by whether or not they're contentEditable\n                        this.element.prop(\"isContentEditable\");\n\n            this.valueMethod = this.element[isTextarea || isInput ? \"val\" : \"text\"];\n            this.isNewMenu = true;\n\n            this.element\n                .addClass(\"ui-autocomplete-input\")\n                .attr(\"autocomplete\", \"off\");\n\n            this._on(this.element, {\n                keydown: function (event) {\n                    if (this.element.prop(\"readOnly\")) {\n                        suppressKeyPress = true;\n                        suppressInput = true;\n                        suppressKeyPressRepeat = true;\n                        return;\n                    }\n\n                    suppressKeyPress = false;\n                    suppressInput = false;\n                    suppressKeyPressRepeat = false;\n                    var keyCode = $.ui.keyCode;\n                    switch (event.keyCode) {\n                        case keyCode.PAGE_UP:\n                            suppressKeyPress = true;\n                            this._move(\"previousPage\", event);\n                            break;\n                        case keyCode.PAGE_DOWN:\n                            suppressKeyPress = true;\n                            this._move(\"nextPage\", event);\n                            break;\n                        case keyCode.UP:\n                            suppressKeyPress = true;\n                            this._keyEvent(\"previous\", event);\n                            break;\n                        case keyCode.DOWN:\n                            suppressKeyPress = true;\n                            this._keyEvent(\"next\", event);\n                            break;\n                        case keyCode.ENTER:\n                        case keyCode.NUMPAD_ENTER:\n                            // when menu is open and has focus\n                            if (this.menu.active) {\n                                // #6055 - Opera still allows the keypress to occur\n                                // which causes forms to submit\n                                suppressKeyPress = true;\n                                event.preventDefault();\n                                this.menu.select(event);\n                            }\n                            break;\n                        case keyCode.TAB:\n                            if (this.menu.active) {\n                                this.menu.select(event);\n                            }\n                            break;\n                        case keyCode.ESCAPE:\n                            if (this.menu.element.is(\":visible\")) {\n                                this._value(this.term);\n                                this.close(event);\n                                // Different browsers have different default behavior for escape\n                                // Single press can mean undo or clear\n                                // Double press in IE means clear the whole form\n                                event.preventDefault();\n                            }\n                            break;\n                        default:\n                            suppressKeyPressRepeat = true;\n                            // search timeout should be triggered before the input value is changed\n                            this._searchTimeout(event);\n                            break;\n                    }\n                },\n                keypress: function (event) {\n                    if (suppressKeyPress) {\n                        suppressKeyPress = false;\n                        if (!this.isMultiLine || this.menu.element.is(\":visible\")) {\n                            event.preventDefault();\n                        }\n                        return;\n                    }\n                    if (suppressKeyPressRepeat) {\n                        return;\n                    }\n\n                    // replicate some key handlers to allow them to repeat in Firefox and Opera\n                    var keyCode = $.ui.keyCode;\n                    switch (event.keyCode) {\n                        case keyCode.PAGE_UP:\n                            this._move(\"previousPage\", event);\n                            break;\n                        case keyCode.PAGE_DOWN:\n                            this._move(\"nextPage\", event);\n                            break;\n                        case keyCode.UP:\n                            this._keyEvent(\"previous\", event);\n                            break;\n                        case keyCode.DOWN:\n                            this._keyEvent(\"next\", event);\n                            break;\n                    }\n                },\n                input: function (event) {\n                    if (suppressInput) {\n                        suppressInput = false;\n                        event.preventDefault();\n                        return;\n                    }\n                    this._searchTimeout(event);\n                },\n                focus: function () {\n                    this.selectedItem = null;\n                    this.previous = this._value();\n                },\n                blur: function (event) {\n                    if (this.cancelBlur) {\n                        delete this.cancelBlur;\n                        return;\n                    }\n\n                    clearTimeout(this.searching);\n                    this.close(event);\n                    this._change(event);\n                }\n            });\n\n            this._initSource();\n            this.menu = $(\"<ul>\")\n                .addClass(\"ui-autocomplete ui-front\")\n                .appendTo(this._appendTo())\n                .menu({\n                    // disable ARIA support, the live region takes care of that\n                    role: null\n                })\n                .hide()\n                .data(\"ui-menu\");\n\n            this._on(this.menu.element, {\n                mousedown: function (event) {\n                    // prevent moving focus out of the text field\n                    event.preventDefault();\n\n                    // IE doesn't prevent moving focus even with event.preventDefault()\n                    // so we set a flag to know when we should ignore the blur event\n                    this.cancelBlur = true;\n                    this._delay(function () {\n                        delete this.cancelBlur;\n                    });\n\n                    // clicking on the scrollbar causes focus to shift to the body\n                    // but we can't detect a mouseup or a click immediately afterward\n                    // so we have to track the next mousedown and close the menu if\n                    // the user clicks somewhere outside of the autocomplete\n                    var menuElement = this.menu.element[0];\n                    if (!$(event.target).closest(\".ui-menu-item\").length) {\n                        this._delay(function () {\n                            var that = this;\n                            this.document.one(\"mousedown\", function (event) {\n                                if (event.target !== that.element[0] &&\n                                    event.target !== menuElement &&\n                                    !$.contains(menuElement, event.target)) {\n                                    that.close();\n                                }\n                            });\n                        });\n                    }\n                },\n                menufocus: function (event, ui) {\n                    // support: Firefox\n                    // Prevent accidental activation of menu items in Firefox (#7024 #9118)\n                    if (this.isNewMenu) {\n                        this.isNewMenu = false;\n                        if (event.originalEvent && /^mouse/.test(event.originalEvent.type)) {\n                            this.menu.blur();\n\n                            this.document.one(\"mousemove\", function () {\n                                $(event.target).trigger(event.originalEvent);\n                            });\n\n                            return;\n                        }\n                    }\n\n                    var item = ui.item.data(\"ui-autocomplete-item\");\n                    if (false !== this._trigger(\"focus\", event, {item: item})) {\n                        // use value to match what will end up in the input, if it was a key event\n                        if (event.originalEvent && /^key/.test(event.originalEvent.type)) {\n                            this._value(item.value);\n                        }\n                    } else {\n                        // Normally the input is populated with the item's value as the\n                        // menu is navigated, causing screen readers to notice a change and\n                        // announce the item. Since the focus event was canceled, this doesn't\n                        // happen, so we update the live region so that screen readers can\n                        // still notice the change and announce it.\n                        this.liveRegion.text(item.value);\n                    }\n                },\n                menuselect: function (event, ui) {\n                    var item = ui.item.data(\"ui-autocomplete-item\"),\n                        previous = this.previous;\n\n                    // only trigger when focus was lost (click on menu)\n                    if (this.element[0] !== this.document[0].activeElement) {\n                        this.element.focus();\n                        this.previous = previous;\n                        // #6109 - IE triggers two focus events and the second\n                        // is asynchronous, so we need to reset the previous\n                        // term synchronously and asynchronously :-(\n                        this._delay(function () {\n                            this.previous = previous;\n                            this.selectedItem = item;\n                        });\n                    }\n\n                    if (false !== this._trigger(\"select\", event, {item: item})) {\n                        this._value(item.value);\n                    }\n                    // reset the term after the select event\n                    // this allows custom select handling to work properly\n                    this.term = this._value();\n\n                    this.close(event);\n                    this.selectedItem = item;\n                }\n            });\n\n            this.liveRegion = $(\"<span>\", {\n                role: \"status\",\n                \"aria-live\": \"polite\"\n            })\n                .addClass(\"ui-helper-hidden-accessible\")\n                .insertBefore(this.element);\n\n            // turning off autocomplete prevents the browser from remembering the\n            // value when navigating through history, so we re-enable autocomplete\n            // if the page is unloaded before the widget is destroyed. #7790\n            this._on(this.window, {\n                beforeunload: function () {\n                    this.element.removeAttr(\"autocomplete\");\n                }\n            });\n        },\n\n        _destroy: function () {\n            clearTimeout(this.searching);\n            this.element\n                .removeClass(\"ui-autocomplete-input\")\n                .removeAttr(\"autocomplete\");\n            this.menu.element.remove();\n            this.liveRegion.remove();\n        },\n\n        _setOption: function (key, value) {\n            this._super(key, value);\n            if (key === \"source\") {\n                this._initSource();\n            }\n            if (key === \"appendTo\") {\n                this.menu.element.appendTo(this._appendTo());\n            }\n            if (key === \"disabled\" && value && this.xhr) {\n                this.xhr.abort();\n            }\n        },\n\n        _appendTo: function () {\n            var element = this.options.appendTo;\n\n            if (element) {\n                element = element.jquery || element.nodeType ?\n                    $(element) :\n                    this.document.find(element).eq(0);\n            }\n\n            if (!element) {\n                element = this.element.closest(\".ui-front\");\n            }\n\n            if (!element.length) {\n                element = this.document[0].body;\n            }\n\n            return element;\n        },\n\n        _initSource: function () {\n            var array, url,\n                that = this;\n            if ($.isArray(this.options.source)) {\n                array = this.options.source;\n                this.source = function (request, response) {\n                    response($.ui.autocomplete.filter(array, request.term));\n                };\n            } else if (typeof this.options.source === \"string\") {\n                url = this.options.source;\n                this.source = function (request, response) {\n                    if (that.xhr) {\n                        that.xhr.abort();\n                    }\n                    that.xhr = $.ajax({\n                        url: url,\n                        data: request,\n                        dataType: \"json\",\n                        success: function (data) {\n                            response(data);\n                        },\n                        error: function () {\n                            response([]);\n                        }\n                    });\n                };\n            } else {\n                this.source = this.options.source;\n            }\n        },\n\n        _searchTimeout: function (event) {\n            clearTimeout(this.searching);\n            this.searching = this._delay(function () {\n                // only search if the value has changed\n                if (this.term !== this._value()) {\n                    this.selectedItem = null;\n                    this.search(null, event);\n                }\n            }, this.options.delay);\n        },\n\n        search: function (value, event) {\n            value = value != null ? value : this._value();\n\n            // always save the actual value, not the one passed as an argument\n            this.term = this._value();\n\n            if (value.length < this.options.minLength) {\n                return this.close(event);\n            }\n\n            if (this._trigger(\"search\", event) === false) {\n                return;\n            }\n\n            return this._search(value);\n        },\n\n        _search: function (value) {\n            this.pending++;\n            this.element.addClass(\"ui-autocomplete-loading\");\n            this.cancelSearch = false;\n\n            this.source({term: value}, this._response());\n        },\n\n        _response: function () {\n            var index = ++this.requestIndex;\n\n            return $.proxy(function (content) {\n                if (index === this.requestIndex) {\n                    this.__response(content);\n                }\n\n                this.pending--;\n                if (!this.pending) {\n                    this.element.removeClass(\"ui-autocomplete-loading\");\n                }\n            }, this);\n        },\n\n        __response: function (content) {\n            if (content) {\n                content = this._normalize(content);\n            }\n            this._trigger(\"response\", null, {content: content});\n            if (!this.options.disabled && content && content.length && !this.cancelSearch) {\n                this._suggest(content);\n                this._trigger(\"open\");\n            } else {\n                // use ._close() instead of .close() so we don't cancel future searches\n                this._close();\n            }\n        },\n\n        close: function (event) {\n            this.cancelSearch = true;\n            this._close(event);\n        },\n\n        _close: function (event) {\n            if (this.menu.element.is(\":visible\")) {\n                this.menu.element.hide();\n                this.menu.blur();\n                this.isNewMenu = true;\n                this._trigger(\"close\", event);\n            }\n        },\n\n        _change: function (event) {\n            if (this.previous !== this._value()) {\n                this._trigger(\"change\", event, {item: this.selectedItem});\n            }\n        },\n\n        _normalize: function (items) {\n            // assume all items have the right format when the first item is complete\n            if (items.length && items[0].label && items[0].value) {\n                return items;\n            }\n            return $.map(items, function (item) {\n                if (typeof item === \"string\") {\n                    return {\n                        label: item,\n                        value: item\n                    };\n                }\n                return $.extend({\n                    label: item.label || item.value,\n                    value: item.value || item.label\n                }, item);\n            });\n        },\n\n        _suggest: function (items) {\n            var ul = this.menu.element.empty();\n            this._renderMenu(ul, items);\n            this.isNewMenu = true;\n            this.menu.refresh();\n\n            // size and position menu\n            ul.show();\n            this._resizeMenu();\n            ul.position($.extend({\n                of: this.element\n            }, this.options.position));\n\n            if (this.options.autoFocus) {\n                this.menu.next();\n            }\n        },\n\n        _resizeMenu: function () {\n            var ul = this.menu.element;\n            ul.outerWidth(Math.max(\n                // Firefox wraps long text (possibly a rounding bug)\n                // so we add 1px to avoid the wrapping (#7513)\n                ul.width(\"\").outerWidth() + 1,\n                this.element.outerWidth()\n            ));\n        },\n\n        _renderMenu: function (ul, items) {\n            var that = this;\n            $.each(items, function (index, item) {\n                that._renderItemData(ul, item);\n            });\n        },\n\n        _renderItemData: function (ul, item) {\n            return this._renderItem(ul, item).data(\"ui-autocomplete-item\", item);\n        },\n\n        _renderItem: function (ul, item) {\n            return $(\"<li>\")\n                .append($(\"<a>\").text(item.label))\n                .appendTo(ul);\n        },\n\n        _move: function (direction, event) {\n            if (!this.menu.element.is(\":visible\")) {\n                this.search(null, event);\n                return;\n            }\n            if (this.menu.isFirstItem() && /^previous/.test(direction) ||\n                this.menu.isLastItem() && /^next/.test(direction)) {\n                this._value(this.term);\n                this.menu.blur();\n                return;\n            }\n            this.menu[direction](event);\n        },\n\n        widget: function () {\n            return this.menu.element;\n        },\n\n        _value: function () {\n            return this.valueMethod.apply(this.element, arguments);\n        },\n\n        _keyEvent: function (keyEvent, event) {\n            if (!this.isMultiLine || this.menu.element.is(\":visible\")) {\n                this._move(keyEvent, event);\n\n                // prevents moving cursor to beginning/end of the text field in some browsers\n                event.preventDefault();\n            }\n        }\n    });\n\n    $.extend($.ui.autocomplete, {\n        escapeRegex: function (value) {\n            return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n        },\n        filter: function (array, term) {\n            var matcher = new RegExp($.ui.autocomplete.escapeRegex(term), \"i\");\n            return $.grep(array, function (value) {\n                return matcher.test(value.label || value.value || value);\n            });\n        }\n    });\n\n\n    // live region extension, adding a `messages` option\n    // NOTE: This is an experimental API. We are still investigating\n    // a full solution for string manipulation and internationalization.\n    $.widget(\"ui.autocomplete\", $.ui.autocomplete, {\n        options: {\n            messages: {\n                noResults: \"No search results.\",\n                results: function (amount) {\n                    return amount + (amount > 1 ? \" results are\" : \" result is\") +\n                        \" available, use up and down arrow keys to navigate.\";\n                }\n            }\n        },\n\n        __response: function (content) {\n            var message;\n            this._superApply(arguments);\n            if (this.options.disabled || this.cancelSearch) {\n                return;\n            }\n            if (content && content.length) {\n                message = this.options.messages.results(content.length);\n            } else {\n                message = this.options.messages.noResults;\n            }\n            this.liveRegion.text(message);\n        }\n    });\n});\n","jquery/ui-modules/effect-slide.js":"/*!\n * jQuery UI Effects Slide - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/slide-effect/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($, undefined) {\n\n    $.effects.effect.slide = function (o, done) {\n\n        // Create element\n        var el = $(this),\n            props = [\"position\", \"top\", \"bottom\", \"left\", \"right\", \"width\", \"height\"],\n            mode = $.effects.setMode(el, o.mode || \"show\"),\n            show = mode === \"show\",\n            direction = o.direction || \"left\",\n            ref = (direction === \"up\" || direction === \"down\") ? \"top\" : \"left\",\n            positiveMotion = (direction === \"up\" || direction === \"left\"),\n            distance,\n            animation = {};\n\n        // Adjust\n        $.effects.save(el, props);\n        el.show();\n        distance = o.distance || el[ref === \"top\" ? \"outerHeight\" : \"outerWidth\"](true);\n\n        $.effects.createWrapper(el).css({\n            overflow: \"hidden\"\n        });\n\n        if (show) {\n            el.css(ref, positiveMotion ? (isNaN(distance) ? \"-\" + distance : -distance) : distance);\n        }\n\n        // Animation\n        animation[ref] = (show ?\n            (positiveMotion ? \"+=\" : \"-=\") :\n            (positiveMotion ? \"-=\" : \"+=\")) +\n            distance;\n\n        // Animate\n        el.animate(animation, {\n            queue: false,\n            duration: o.duration,\n            easing: o.easing,\n            complete: function () {\n                if (mode === \"hide\") {\n                    el.hide();\n                }\n                $.effects.restore(el, props);\n                $.effects.removeWrapper(el);\n                done();\n            }\n        });\n    };\n\n});\n","jquery/ui-modules/effect-blind.js":"/*!\n * jQuery UI Effects Blind - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/blind-effect/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($, undefined) {\n\n    var rvertical = /up|down|vertical/,\n        rpositivemotion = /up|left|vertical|horizontal/;\n\n    $.effects.effect.blind = function (o, done) {\n        // Create element\n        var el = $(this),\n            props = [\"position\", \"top\", \"bottom\", \"left\", \"right\", \"height\", \"width\"],\n            mode = $.effects.setMode(el, o.mode || \"hide\"),\n            direction = o.direction || \"up\",\n            vertical = rvertical.test(direction),\n            ref = vertical ? \"height\" : \"width\",\n            ref2 = vertical ? \"top\" : \"left\",\n            motion = rpositivemotion.test(direction),\n            animation = {},\n            show = mode === \"show\",\n            wrapper, distance, margin;\n\n        // if already wrapped, the wrapper's properties are my property. #6245\n        if (el.parent().is(\".ui-effects-wrapper\")) {\n            $.effects.save(el.parent(), props);\n        } else {\n            $.effects.save(el, props);\n        }\n        el.show();\n        wrapper = $.effects.createWrapper(el).css({\n            overflow: \"hidden\"\n        });\n\n        distance = wrapper[ref]();\n        margin = parseFloat(wrapper.css(ref2)) || 0;\n\n        animation[ref] = show ? distance : 0;\n        if (!motion) {\n            el\n                .css(vertical ? \"bottom\" : \"right\", 0)\n                .css(vertical ? \"top\" : \"left\", \"auto\")\n                .css({position: \"absolute\"});\n\n            animation[ref2] = show ? margin : distance + margin;\n        }\n\n        // start at 0 if we are showing\n        if (show) {\n            wrapper.css(ref, 0);\n            if (!motion) {\n                wrapper.css(ref2, margin + distance);\n            }\n        }\n\n        // Animate\n        wrapper.animate(animation, {\n            duration: o.duration,\n            easing: o.easing,\n            queue: false,\n            complete: function () {\n                if (mode === \"hide\") {\n                    el.hide();\n                }\n                $.effects.restore(el, props);\n                $.effects.removeWrapper(el);\n                done();\n            }\n        });\n\n    };\n\n});\n","jquery/ui-modules/menu.js":"/*!\n * jQuery UI Menu - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/menu/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/core',\n    'jquery-ui-modules/widget',\n    'jquery-ui-modules/position'\n], function ($, undefined) {\n\n    $.widget(\"ui.menu\", {\n        version: \"1.10.4\",\n        defaultElement: \"<ul>\",\n        delay: 300,\n        options: {\n            icons: {\n                submenu: \"ui-icon-carat-1-e\"\n            },\n            menus: \"ul\",\n            position: {\n                my: \"left top\",\n                at: \"right top\"\n            },\n            role: \"menu\",\n\n            // callbacks\n            blur: null,\n            focus: null,\n            select: null\n        },\n\n        _create: function () {\n            this.activeMenu = this.element;\n            // flag used to prevent firing of the click handler\n            // as the event bubbles up through nested menus\n            this.mouseHandled = false;\n            this.element\n                .uniqueId()\n                .addClass(\"ui-menu ui-widget ui-widget-content ui-corner-all\")\n                .toggleClass(\"ui-menu-icons\", !!this.element.find(\".ui-icon\").length)\n                .attr({\n                    role: this.options.role,\n                    tabIndex: 0\n                })\n                // need to catch all clicks on disabled menu\n                // not possible through _on\n                .bind(\"click\" + this.eventNamespace, $.proxy(function (event) {\n                    if (this.options.disabled) {\n                        event.preventDefault();\n                    }\n                }, this));\n\n            if (this.options.disabled) {\n                this.element\n                    .addClass(\"ui-state-disabled\")\n                    .attr(\"aria-disabled\", \"true\");\n            }\n\n            this._on({\n                // Prevent focus from sticking to links inside menu after clicking\n                // them (focus should always stay on UL during navigation).\n                \"mousedown .ui-menu-item > a\": function (event) {\n                    event.preventDefault();\n                },\n                \"click .ui-state-disabled > a\": function (event) {\n                    event.preventDefault();\n                },\n                \"click .ui-menu-item:has(a)\": function (event) {\n                    var target = $(event.target).closest(\".ui-menu-item\");\n                    if (!this.mouseHandled && target.not(\".ui-state-disabled\").length) {\n                        this.select(event);\n\n                        // Only set the mouseHandled flag if the event will bubble, see #9469.\n                        if (!event.isPropagationStopped()) {\n                            this.mouseHandled = true;\n                        }\n\n                        // Open submenu on click\n                        if (target.has(\".ui-menu\").length) {\n                            this.expand(event);\n                        } else if (!this.element.is(\":focus\") && $(this.document[0].activeElement).closest(\".ui-menu\").length) {\n\n                            // Redirect focus to the menu\n                            this.element.trigger(\"focus\", [true]);\n\n                            // If the active item is on the top level, let it stay active.\n                            // Otherwise, blur the active item since it is no longer visible.\n                            if (this.active && this.active.parents(\".ui-menu\").length === 1) {\n                                clearTimeout(this.timer);\n                            }\n                        }\n                    }\n                },\n                \"mouseenter .ui-menu-item\": function (event) {\n                    var target = $(event.currentTarget);\n                    // Remove ui-state-active class from siblings of the newly focused menu item\n                    // to avoid a jump caused by adjacent elements both having a class with a border\n                    target.siblings().children(\".ui-state-active\").removeClass(\"ui-state-active\");\n                    this.focus(event, target);\n                },\n                mouseleave: \"collapseAll\",\n                \"mouseleave .ui-menu\": \"collapseAll\",\n                focus: function (event, keepActiveItem) {\n                    // If there's already an active item, keep it active\n                    // If not, activate the first item\n                    var item = this.active || this.element.children(\".ui-menu-item\").eq(0);\n\n                    if (!keepActiveItem) {\n                        this.focus(event, item);\n                    }\n                },\n                blur: function (event) {\n                    this._delay(function () {\n                        if (!$.contains(this.element[0], this.document[0].activeElement)) {\n                            this.collapseAll(event);\n                        }\n                    });\n                },\n                keydown: \"_keydown\"\n            });\n\n            this.refresh();\n\n            // Clicks outside of a menu collapse any open menus\n            this._on(this.document, {\n                click: function (event) {\n                    if (!$(event.target).closest(\".ui-menu\").length) {\n                        this.collapseAll(event);\n                    }\n\n                    // Reset the mouseHandled flag\n                    this.mouseHandled = false;\n                }\n            });\n        },\n\n        _destroy: function () {\n            // Destroy (sub)menus\n            this.element\n                .removeAttr(\"aria-activedescendant\")\n                .find(\".ui-menu\").addBack()\n                .removeClass(\"ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons\")\n                .removeAttr(\"role\")\n                .removeAttr(\"tabIndex\")\n                .removeAttr(\"aria-labelledby\")\n                .removeAttr(\"aria-expanded\")\n                .removeAttr(\"aria-hidden\")\n                .removeAttr(\"aria-disabled\")\n                .removeUniqueId()\n                .show();\n\n            // Destroy menu items\n            this.element.find(\".ui-menu-item\")\n                .removeClass(\"ui-menu-item\")\n                .removeAttr(\"role\")\n                .removeAttr(\"aria-disabled\")\n                .children(\"a\")\n                .removeUniqueId()\n                .removeClass(\"ui-corner-all ui-state-hover\")\n                .removeAttr(\"tabIndex\")\n                .removeAttr(\"role\")\n                .removeAttr(\"aria-haspopup\")\n                .children().each(function () {\n                var elem = $(this);\n                if (elem.data(\"ui-menu-submenu-carat\")) {\n                    elem.remove();\n                }\n            });\n\n            // Destroy menu dividers\n            this.element.find(\".ui-menu-divider\").removeClass(\"ui-menu-divider ui-widget-content\");\n        },\n\n        _keydown: function (event) {\n            var match, prev, character, skip, regex,\n                preventDefault = true;\n\n            function escape(value) {\n                return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n            }\n\n            switch (event.keyCode) {\n                case $.ui.keyCode.PAGE_UP:\n                    this.previousPage(event);\n                    break;\n                case $.ui.keyCode.PAGE_DOWN:\n                    this.nextPage(event);\n                    break;\n                case $.ui.keyCode.HOME:\n                    this._move(\"first\", \"first\", event);\n                    break;\n                case $.ui.keyCode.END:\n                    this._move(\"last\", \"last\", event);\n                    break;\n                case $.ui.keyCode.UP:\n                    this.previous(event);\n                    break;\n                case $.ui.keyCode.DOWN:\n                    this.next(event);\n                    break;\n                case $.ui.keyCode.LEFT:\n                    this.collapse(event);\n                    break;\n                case $.ui.keyCode.RIGHT:\n                    if (this.active && !this.active.is(\".ui-state-disabled\")) {\n                        this.expand(event);\n                    }\n                    break;\n                case $.ui.keyCode.ENTER:\n                case $.ui.keyCode.SPACE:\n                    this._activate(event);\n                    break;\n                case $.ui.keyCode.ESCAPE:\n                    this.collapse(event);\n                    break;\n                default:\n                    preventDefault = false;\n                    prev = this.previousFilter || \"\";\n                    character = String.fromCharCode(event.keyCode);\n                    skip = false;\n\n                    clearTimeout(this.filterTimer);\n\n                    if (character === prev) {\n                        skip = true;\n                    } else {\n                        character = prev + character;\n                    }\n\n                    regex = new RegExp(\"^\" + escape(character), \"i\");\n                    match = this.activeMenu.children(\".ui-menu-item\").filter(function () {\n                        return regex.test($(this).children(\"a\").text());\n                    });\n                    match = skip && match.index(this.active.next()) !== -1 ?\n                        this.active.nextAll(\".ui-menu-item\") :\n                        match;\n\n                    // If no matches on the current filter, reset to the last character pressed\n                    // to move down the menu to the first item that starts with that character\n                    if (!match.length) {\n                        character = String.fromCharCode(event.keyCode);\n                        regex = new RegExp(\"^\" + escape(character), \"i\");\n                        match = this.activeMenu.children(\".ui-menu-item\").filter(function () {\n                            return regex.test($(this).children(\"a\").text());\n                        });\n                    }\n\n                    if (match.length) {\n                        this.focus(event, match);\n                        if (match.length > 1) {\n                            this.previousFilter = character;\n                            this.filterTimer = this._delay(function () {\n                                delete this.previousFilter;\n                            }, 1000);\n                        } else {\n                            delete this.previousFilter;\n                        }\n                    } else {\n                        delete this.previousFilter;\n                    }\n            }\n\n            if (preventDefault) {\n                event.preventDefault();\n            }\n        },\n\n        _activate: function (event) {\n            if (!this.active.is(\".ui-state-disabled\")) {\n                if (this.active.children(\"a[aria-haspopup='true']\").length) {\n                    this.expand(event);\n                } else {\n                    this.select(event);\n                }\n            }\n        },\n\n        refresh: function () {\n            var menus,\n                icon = this.options.icons.submenu,\n                submenus = this.element.find(this.options.menus);\n\n            this.element.toggleClass(\"ui-menu-icons\", !!this.element.find(\".ui-icon\").length);\n\n            // Initialize nested menus\n            submenus.filter(\":not(.ui-menu)\")\n                .addClass(\"ui-menu ui-widget ui-widget-content ui-corner-all\")\n                .hide()\n                .attr({\n                    role: this.options.role,\n                    \"aria-hidden\": \"true\",\n                    \"aria-expanded\": \"false\"\n                })\n                .each(function () {\n                    var menu = $(this),\n                        item = menu.prev(\"a\"),\n                        submenuCarat = $(\"<span>\")\n                            .addClass(\"ui-menu-icon ui-icon \" + icon)\n                            .data(\"ui-menu-submenu-carat\", true);\n\n                    item\n                        .attr(\"aria-haspopup\", \"true\")\n                        .prepend(submenuCarat);\n                    menu.attr(\"aria-labelledby\", item.attr(\"id\"));\n                });\n\n            menus = submenus.add(this.element);\n\n            // Don't refresh list items that are already adapted\n            menus.children(\":not(.ui-menu-item):has(a)\")\n                .addClass(\"ui-menu-item\")\n                .attr(\"role\", \"presentation\")\n                .children(\"a\")\n                .uniqueId()\n                .addClass(\"ui-corner-all\")\n                .attr({\n                    tabIndex: -1,\n                    role: this._itemRole()\n                });\n\n            // Initialize unlinked menu-items containing spaces and/or dashes only as dividers\n            menus.children(\":not(.ui-menu-item)\").each(function () {\n                var item = $(this);\n                // hyphen, em dash, en dash\n                if (!/[^\\-\\u2014\\u2013\\s]/.test(item.text())) {\n                    item.addClass(\"ui-widget-content ui-menu-divider\");\n                }\n            });\n\n            // Add aria-disabled attribute to any disabled menu item\n            menus.children(\".ui-state-disabled\").attr(\"aria-disabled\", \"true\");\n\n            // If the active item has been removed, blur the menu\n            if (this.active && !$.contains(this.element[0], this.active[0])) {\n                this.blur();\n            }\n        },\n\n        _itemRole: function () {\n            return {\n                menu: \"menuitem\",\n                listbox: \"option\"\n            }[this.options.role];\n        },\n\n        _setOption: function (key, value) {\n            if (key === \"icons\") {\n                this.element.find(\".ui-menu-icon\")\n                    .removeClass(this.options.icons.submenu)\n                    .addClass(value.submenu);\n            }\n            this._super(key, value);\n        },\n\n        focus: function (event, item) {\n            var nested, focused;\n            this.blur(event, event && event.type === \"focus\");\n\n            this._scrollIntoView(item);\n\n            this.active = item.first();\n            focused = this.active.children(\"a\").addClass(\"ui-state-focus\");\n            // Only update aria-activedescendant if there's a role\n            // otherwise we assume focus is managed elsewhere\n            if (this.options.role) {\n                this.element.attr(\"aria-activedescendant\", focused.attr(\"id\"));\n            }\n\n            // Highlight active parent menu item, if any\n            this.active\n                .parent()\n                .closest(\".ui-menu-item\")\n                .children(\"a:first\")\n                .addClass(\"ui-state-active\");\n\n            if (event && event.type === \"keydown\") {\n                this._close();\n            } else {\n                this.timer = this._delay(function () {\n                    this._close();\n                }, this.delay);\n            }\n\n            nested = item.children(\".ui-menu\");\n            if (nested.length && event && (/^mouse/.test(event.type))) {\n                this._startOpening(nested);\n            }\n            this.activeMenu = item.parent();\n\n            this._trigger(\"focus\", event, {item: item});\n        },\n\n        _scrollIntoView: function (item) {\n            var borderTop, paddingTop, offset, scroll, elementHeight, itemHeight;\n            if (this._hasScroll()) {\n                borderTop = parseFloat($.css(this.activeMenu[0], \"borderTopWidth\")) || 0;\n                paddingTop = parseFloat($.css(this.activeMenu[0], \"paddingTop\")) || 0;\n                offset = item.offset().top - this.activeMenu.offset().top - borderTop - paddingTop;\n                scroll = this.activeMenu.scrollTop();\n                elementHeight = this.activeMenu.height();\n                itemHeight = item.height();\n\n                if (offset < 0) {\n                    this.activeMenu.scrollTop(scroll + offset);\n                } else if (offset + itemHeight > elementHeight) {\n                    this.activeMenu.scrollTop(scroll + offset - elementHeight + itemHeight);\n                }\n            }\n        },\n\n        blur: function (event, fromFocus) {\n            if (!fromFocus) {\n                clearTimeout(this.timer);\n            }\n\n            if (!this.active) {\n                return;\n            }\n\n            this.active.children(\"a\").removeClass(\"ui-state-focus\");\n            this.active = null;\n\n            this._trigger(\"blur\", event, {item: this.active});\n        },\n\n        _startOpening: function (submenu) {\n            clearTimeout(this.timer);\n\n            // Don't open if already open fixes a Firefox bug that caused a .5 pixel\n            // shift in the submenu position when mousing over the carat icon\n            if (submenu.attr(\"aria-hidden\") !== \"true\") {\n                return;\n            }\n\n            this._open(submenu);\n        },\n\n        _open: function (submenu) {\n            var position = $.extend({\n                of: this.active\n            }, this.options.position);\n\n            clearTimeout(this.timer);\n            this.element.find(\".ui-menu\").not(submenu.parents(\".ui-menu\"))\n                .hide()\n                .attr(\"aria-hidden\", \"true\");\n\n            submenu\n                .show()\n                .removeAttr(\"aria-hidden\")\n                .attr(\"aria-expanded\", \"true\")\n                .position(position);\n        },\n\n        collapseAll: function (event, all) {\n            clearTimeout(this.timer);\n            this.timer = this._delay(function () {\n                // If we were passed an event, look for the submenu that contains the event\n                var currentMenu = all ? this.element :\n                    $(event && event.target).closest(this.element.find(\".ui-menu\"));\n\n                // If we found no valid submenu ancestor, use the main menu to close all sub menus anyway\n                if (!currentMenu.length) {\n                    currentMenu = this.element;\n                }\n\n                this._close(currentMenu);\n\n                this.blur(event);\n                this.activeMenu = currentMenu;\n            }, this.delay);\n        },\n\n        // With no arguments, closes the currently active menu - if nothing is active\n        // it closes all menus.  If passed an argument, it will search for menus BELOW\n        _close: function (startMenu) {\n            if (!startMenu) {\n                startMenu = this.active ? this.active.parent() : this.element;\n            }\n\n            startMenu\n                .find(\".ui-menu\")\n                .hide()\n                .attr(\"aria-hidden\", \"true\")\n                .attr(\"aria-expanded\", \"false\")\n                .end()\n                .find(\"a.ui-state-active\")\n                .removeClass(\"ui-state-active\");\n        },\n\n        collapse: function (event) {\n            var newItem = this.active &&\n                this.active.parent().closest(\".ui-menu-item\", this.element);\n            if (newItem && newItem.length) {\n                this._close();\n                this.focus(event, newItem);\n            }\n        },\n\n        expand: function (event) {\n            var newItem = this.active &&\n                this.active\n                    .children(\".ui-menu \")\n                    .children(\".ui-menu-item\")\n                    .first();\n\n            if (newItem && newItem.length) {\n                this._open(newItem.parent());\n\n                // Delay so Firefox will not hide activedescendant change in expanding submenu from AT\n                this._delay(function () {\n                    this.focus(event, newItem);\n                });\n            }\n        },\n\n        next: function (event) {\n            this._move(\"next\", \"first\", event);\n        },\n\n        previous: function (event) {\n            this._move(\"prev\", \"last\", event);\n        },\n\n        isFirstItem: function () {\n            return this.active && !this.active.prevAll(\".ui-menu-item\").length;\n        },\n\n        isLastItem: function () {\n            return this.active && !this.active.nextAll(\".ui-menu-item\").length;\n        },\n\n        _move: function (direction, filter, event) {\n            var next;\n            if (this.active) {\n                if (direction === \"first\" || direction === \"last\") {\n                    next = this.active\n                        [direction === \"first\" ? \"prevAll\" : \"nextAll\"](\".ui-menu-item\")\n                        .eq(-1);\n                } else {\n                    next = this.active\n                        [direction + \"All\"](\".ui-menu-item\")\n                        .eq(0);\n                }\n            }\n            if (!next || !next.length || !this.active) {\n                next = this.activeMenu.children(\".ui-menu-item\")[filter]();\n            }\n\n            this.focus(event, next);\n        },\n\n        nextPage: function (event) {\n            var item, base, height;\n\n            if (!this.active) {\n                this.next(event);\n                return;\n            }\n            if (this.isLastItem()) {\n                return;\n            }\n            if (this._hasScroll()) {\n                base = this.active.offset().top;\n                height = this.element.height();\n                this.active.nextAll(\".ui-menu-item\").each(function () {\n                    item = $(this);\n                    return item.offset().top - base - height < 0;\n                });\n\n                this.focus(event, item);\n            } else {\n                this.focus(event, this.activeMenu.children(\".ui-menu-item\")\n                    [!this.active ? \"first\" : \"last\"]());\n            }\n        },\n\n        previousPage: function (event) {\n            var item, base, height;\n            if (!this.active) {\n                this.next(event);\n                return;\n            }\n            if (this.isFirstItem()) {\n                return;\n            }\n            if (this._hasScroll()) {\n                base = this.active.offset().top;\n                height = this.element.height();\n                this.active.prevAll(\".ui-menu-item\").each(function () {\n                    item = $(this);\n                    return item.offset().top - base + height > 0;\n                });\n\n                this.focus(event, item);\n            } else {\n                this.focus(event, this.activeMenu.children(\".ui-menu-item\").first());\n            }\n        },\n\n        _hasScroll: function () {\n            return this.element.outerHeight() < this.element.prop(\"scrollHeight\");\n        },\n\n        select: function (event) {\n            // TODO: It should never be possible to not have an active item at this\n            // point, but the tests don't trigger mouseenter before click.\n            this.active = this.active || $(event.target).closest(\".ui-menu-item\");\n            var ui = {item: this.active};\n            if (!this.active.has(\".ui-menu\").length) {\n                this.collapseAll(event, true);\n            }\n            this._trigger(\"select\", event, ui);\n        }\n    });\n\n});\n","jquery/patches/jquery-ui.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/widget'\n    // 'jquery-ui-modules/dialog' - do not enable this dependency because this is already a mixin for the dialog ui component\n], function ($) {\n    'use strict';\n\n    /**\n     * Patch for CVE-2016-7103 (XSS vulnerability).\n     * Can safely remove only when jQuery UI is upgraded to >= 1.12.x.\n     * https://www.cvedetails.com/cve/CVE-2016-7103/\n     */\n    function dialogPatch() {\n        $.widget('ui.dialog', $.ui.dialog, {\n            /** @inheritdoc */\n            _createTitlebar: function () {\n                this.options.closeText = $('<a>').text('' + this.options.closeText).html();\n\n                this._superApply();\n            },\n\n            /** @inheritdoc */\n            _setOption: function (key, value) {\n                if (key === 'closeText') {\n                    value = $('<a>').text('' + value).html();\n                }\n\n                this._super(key, value);\n            }\n        });\n    }\n\n    return function () {\n        var majorVersion = $.ui.version.split('.')[0],\n            minorVersion = $.ui.version.split('.')[1];\n\n        if (majorVersion === 1 && minorVersion >= 12 || majorVersion >= 2) {\n            console.warn('jQuery patch for CVE-2016-7103 is no longer necessary, and should be removed');\n        }\n\n        dialogPatch();\n    };\n});\n","jquery/patches/jquery.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([], function () {\n    'use strict';\n\n    /**\n     * Patch for CVE-2015-9251 (XSS vulnerability).\n     * Can safely remove only when jQuery UI is upgraded to >= 3.3.x.\n     * https://www.cvedetails.com/cve/CVE-2015-9251/\n     */\n    function ajaxResponsePatch(jQuery) {\n        jQuery.ajaxPrefilter(function (s) {\n            if (s.crossDomain) {\n                s.contents.script = false;\n            }\n        });\n    }\n\n    return function ($) {\n        var majorVersion = $.fn.jquery.split('.')[0];\n\n        if (majorVersion >= 3) {\n            console.warn('jQuery patch for CVE-2015-9251 is no longer necessary, and should be removed');\n        }\n\n        ajaxResponsePatch($);\n\n        return $;\n    };\n});\n","Magento_Captcha/js/captcha.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/widget'\n], function ($) {\n    'use strict';\n\n    /**\n     * @api\n     */\n    $.widget('mage.captcha', {\n        options: {\n            refreshClass: 'refreshing',\n            reloadSelector: '.captcha-reload',\n            imageSelector: '.captcha-img',\n            imageLoader: ''\n        },\n\n        /**\n         * Method binds click event to reload image\n         * @private\n         */\n        _create: function () {\n            this.element.on('click', this.options.reloadSelector, $.proxy(this.refresh, this));\n        },\n\n        /**\n         * Method triggers an AJAX request to refresh the CAPTCHA image\n         */\n        refresh: function () {\n            var imageLoader = this.options.imageLoader;\n\n            if (imageLoader) {\n                this.element.find(this.options.imageSelector).attr('src', imageLoader);\n            }\n            this.element.addClass(this.options.refreshClass);\n\n            $.ajax({\n                url: this.options.url,\n                type: 'post',\n                async: false,\n                dataType: 'json',\n                context: this,\n                data: {\n                    'formId': this.options.type\n                },\n\n                /**\n                 * @param {Object} response\n                 */\n                success: function (response) {\n                    if (response.imgSrc) {\n                        this.element.find(this.options.imageSelector).attr('src', response.imgSrc);\n                    }\n                },\n\n                /** Complete callback. */\n                complete: function () {\n                    this.element.removeClass(this.options.refreshClass);\n                }\n            });\n        }\n    });\n\n    return $.mage.captcha;\n});\n","Magento_Captcha/js/model/captchaList.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine(['jquery'], function ($) {\n    'use strict';\n\n    var captchaList = [];\n\n    return {\n        /**\n         * @param {Object} captcha\n         */\n        add: function (captcha) {\n            captchaList.push(captcha);\n        },\n\n        /**\n         * @param {String} formId\n         * @return {Object}\n         */\n        getCaptchaByFormId: function (formId) {\n            var captcha = null;\n\n            $.each(captchaList, function (key, item) {\n                if (formId === item.formId) {\n                    captcha = item;\n\n                    return false;\n                }\n            });\n\n            return captcha;\n        },\n\n        /**\n         * @return {Array}\n         */\n        getCaptchaList: function () {\n            return captchaList;\n        }\n    };\n});\n","Magento_Captcha/js/model/captcha.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/*global alert*/\ndefine([\n    'jquery',\n    'ko',\n    'Magento_Captcha/js/action/refresh'\n], function ($, ko, refreshAction) {\n    'use strict';\n\n    return function (captchaData) {\n        return {\n            formId: captchaData.formId,\n            imageSource: ko.observable(captchaData.imageSrc),\n            visibility: ko.observable(false),\n            captchaValue: ko.observable(null),\n            isRequired: ko.observable(captchaData.isRequired),\n            isCaseSensitive: captchaData.isCaseSensitive,\n            imageHeight: captchaData.imageHeight,\n            refreshUrl: captchaData.refreshUrl,\n            isLoading: ko.observable(false),\n            timestamp: null,\n\n            /**\n             * @return {String}\n             */\n            getFormId: function () {\n                return this.formId;\n            },\n\n            /**\n             * @param {String} formId\n             */\n            setFormId: function (formId) {\n                this.formId = formId;\n            },\n\n            /**\n             * @return {Boolean}\n             */\n            getIsVisible: function () {\n                return this.visibility();\n            },\n\n            /**\n             * @param {Boolean} flag\n             */\n            setIsVisible: function (flag) {\n                this.visibility(flag);\n            },\n\n            /**\n             * @return {Boolean}\n             */\n            getIsRequired: function () {\n                return this.isRequired();\n            },\n\n            /**\n             * @param {Boolean} flag\n             */\n            setIsRequired: function (flag) {\n                this.isRequired(flag);\n            },\n\n            /**\n             * @return {Boolean}\n             */\n            getIsCaseSensitive: function () {\n                return this.isCaseSensitive;\n            },\n\n            /**\n             * @param {Boolean} flag\n             */\n            setIsCaseSensitive: function (flag) {\n                this.isCaseSensitive = flag;\n            },\n\n            /**\n             * @return {String|Number}\n             */\n            getImageHeight: function () {\n                return this.imageHeight;\n            },\n\n            /**\n             * @param {String|Number}height\n             */\n            setImageHeight: function (height) {\n                this.imageHeight = height;\n            },\n\n            /**\n             * @return {String}\n             */\n            getImageSource: function () {\n                return this.imageSource;\n            },\n\n            /**\n             * @param {String} imageSource\n             */\n            setImageSource: function (imageSource) {\n                this.imageSource(imageSource);\n            },\n\n            /**\n             * @return {String}\n             */\n            getRefreshUrl: function () {\n                return this.refreshUrl;\n            },\n\n            /**\n             * @param {String} url\n             */\n            setRefreshUrl: function (url) {\n                this.refreshUrl = url;\n            },\n\n            /**\n             * @return {*}\n             */\n            getCaptchaValue: function () {\n                return this.captchaValue;\n            },\n\n            /**\n             * @param {*} value\n             */\n            setCaptchaValue: function (value) {\n                this.captchaValue(value);\n            },\n\n            /**\n             * Refresh captcha.\n             */\n            refresh: function () {\n                var refresh,\n                    self = this;\n\n                this.isLoading(true);\n\n                refresh = refreshAction(this.getRefreshUrl(), this.getFormId(), this.getImageSource());\n                $.when(refresh).done(function () {\n                    self.isLoading(false);\n                });\n            }\n        };\n    };\n});\n","Magento_Captcha/js/action/refresh.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'mage/storage'\n], function (storage) {\n    'use strict';\n\n    return function (refreshUrl, formId, imageSource) {\n        return storage.post(\n            refreshUrl,\n            JSON.stringify({\n                'formId': formId\n            }),\n            false\n        ).done(\n            function (response) {\n                if (response.imgSrc) {\n                    imageSource(response.imgSrc);\n                }\n            }\n        );\n    };\n});\n","Magento_Captcha/js/view/checkout/loginCaptcha.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Captcha/js/view/checkout/defaultCaptcha',\n    'Magento_Captcha/js/model/captchaList',\n    'Magento_Customer/js/action/login',\n    'underscore'\n],\nfunction (defaultCaptcha, captchaList, loginAction, _) {\n    'use strict';\n\n    return defaultCaptcha.extend({\n        /** @inheritdoc */\n        initialize: function () {\n            var self = this,\n                currentCaptcha;\n\n            this._super();\n            currentCaptcha = captchaList.getCaptchaByFormId(this.formId);\n\n            if (currentCaptcha != null) {\n                currentCaptcha.setIsVisible(true);\n                this.setCurrentCaptcha(currentCaptcha);\n\n                loginAction.registerLoginCallback(function (loginData) {\n                    if (loginData['captcha_form_id'] &&\n                        loginData['captcha_form_id'] === self.formId &&\n                        self.isRequired()\n                    ) {\n                        _.defer(self.refresh.bind(self));\n                    }\n                });\n            }\n        }\n    });\n});\n","Magento_Captcha/js/view/checkout/defaultCaptcha.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'uiComponent',\n    'Magento_Captcha/js/model/captcha',\n    'Magento_Captcha/js/model/captchaList',\n    'Magento_Customer/js/customer-data',\n    'underscore'\n], function ($, Component, Captcha, captchaList, customerData, _) {\n    'use strict';\n\n    var captchaConfig;\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_Captcha/checkout/captcha'\n        },\n        dataScope: 'global',\n        currentCaptcha: null,\n\n        /**\n         * @return {*}\n         */\n        captchaValue: function () {\n            return this.currentCaptcha.getCaptchaValue();\n        },\n\n        /** @inheritdoc */\n        initialize: function () {\n            this._super();\n\n            if (window[this.configSource] && window[this.configSource].captcha) {\n                captchaConfig = window[this.configSource].captcha;\n                $.each(captchaConfig, function (formId, captchaData) {\n                    var captcha;\n\n                    captchaData.formId = formId;\n                    captcha = Captcha(captchaData);\n                    this.checkCustomerData(formId, customerData.get('captcha')(), captcha);\n                    this.subscribeCustomerData(formId, captcha);\n                    captchaList.add(captcha);\n                }.bind(this));\n            }\n        },\n\n        /**\n         * Check customer data for captcha configuration.\n         *\n         * @param {String} formId\n         * @param {Object} captchaData\n         * @param {Object} captcha\n         */\n        checkCustomerData: function (formId, captchaData, captcha) {\n            if (!_.isEmpty(captchaData) &&\n                !_.isEmpty(captchaData)[formId] &&\n                captchaData[formId].timestamp > captcha.timestamp\n            ) {\n                if (!captcha.isRequired() && captchaData[formId].isRequired) {\n                    captcha.refresh();\n                }\n                captcha.isRequired(captchaData[formId].isRequired);\n                captcha.timestamp = captchaData[formId].timestamp;\n            }\n        },\n\n        /**\n         * Subscribe for customer data updates.\n         *\n         * @param {String} formId\n         * @param {Object} captcha\n         */\n        subscribeCustomerData: function (formId, captcha) {\n            customerData.get('captcha').subscribe(function (captchaData) {\n                this.checkCustomerData(formId, captchaData, captcha);\n            }.bind(this));\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        getIsLoading: function () {\n            return this.currentCaptcha !== null ? this.currentCaptcha.isLoading : false;\n        },\n\n        /**\n         * @return {null|Object}\n         */\n        getCurrentCaptcha: function () {\n            return this.currentCaptcha;\n        },\n\n        /**\n         * @param {Object} captcha\n         */\n        setCurrentCaptcha: function (captcha) {\n            this.currentCaptcha = captcha;\n        },\n\n        /**\n         * @return {String|null}\n         */\n        getFormId: function () {\n            return this.currentCaptcha !== null ? this.currentCaptcha.getFormId() : null;\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        getIsVisible: function () {\n            return this.currentCaptcha !== null ? this.currentCaptcha.getIsVisible() : false;\n        },\n\n        /**\n         * @param {Boolean} flag\n         */\n        setIsVisible: function (flag) {\n            this.currentCaptcha.setIsVisible(flag);\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        isRequired: function () {\n            return this.currentCaptcha !== null ? this.currentCaptcha.getIsRequired() : false;\n        },\n\n        /**\n         * Set isRequired on current captcha model.\n         *\n         * @param {Boolean} flag\n         */\n        setIsRequired: function (flag) {\n            this.currentCaptcha.setIsRequired(flag);\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        isCaseSensitive: function () {\n            return this.currentCaptcha !== null ? this.currentCaptcha.getIsCaseSensitive() : false;\n        },\n\n        /**\n         * @return {String|Number|null}\n         */\n        imageHeight: function () {\n            return this.currentCaptcha !== null ? this.currentCaptcha.getImageHeight() : null;\n        },\n\n        /**\n         * @return {String|null}\n         */\n        getImageSource: function () {\n            return this.currentCaptcha !== null ? this.currentCaptcha.getImageSource() : null;\n        },\n\n        /**\n         * Refresh captcha.\n         */\n        refresh: function () {\n            this.currentCaptcha.refresh();\n        }\n    });\n});\n","Mageplaza_LayeredNavigation/js/layer.js":"/**\r\n * Copyright 2016 Mageplaza. All rights reserved.\r\n * See https://www.mageplaza.com/LICENSE.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'productListToolbarForm'\r\n], function ($) {\r\n    \"use strict\";\r\n    var next_page = \"\";\r\n    var loading = false;\r\n    var infinite_loaded_count = 0;\r\n    var active = false;\r\n    $.widget('mageplaza.layer', {\r\n\r\n        options: {\r\n            productsListSelector: '#layer-product-list',\r\n            navigationSelector: '#layered-filter-block'\r\n        },\r\n\r\n        _create: function () {\r\n            this.initProductListUrl();\r\n            this.initObserve();\r\n            this.initLoading();\r\n            this.inFinite();\r\n        },\r\n\r\n        initProductListUrl: function () {\r\n            var self = this;\r\n            $.mage.productListToolbarForm.prototype.changeUrl = function (paramName, paramValue, defaultValue) {\r\n                var urlPaths = this.options.url.split('?'),\r\n                    baseUrl = urlPaths[0],\r\n                    urlParams = urlPaths[1] ? urlPaths[1].split('&') : [],\r\n                    paramData = {},\r\n                    parameters;\r\n                for (var i = 0; i < urlParams.length; i++) {\r\n                    parameters = urlParams[i].split('=');\r\n                    paramData[parameters[0]] = parameters[1] !== undefined\r\n                        ? window.decodeURIComponent(parameters[1].replace(/\\+/g, '%20'))\r\n                        : '';\r\n                }\r\n                paramData[paramName] = paramValue;\r\n                if (paramValue == defaultValue) {\r\n                    delete paramData[paramName];\r\n                }\r\n                paramData = $.param(paramData);\r\n\r\n                self.ajaxSubmit(baseUrl + (paramData.length ? '?' + paramData : ''));\r\n            }\r\n        },\r\n\r\n        initObserve: function () {\r\n            var self = this;\r\n            var aElements = this.element.find('a');\r\n            aElements.each(function (index) {\r\n                var el = $(this);\r\n                var link = self.checkUrl(el.prop('href'));\r\n                if(!link) return;\r\n\r\n                el.bind('click', function (e) {\r\n                    if (el.hasClass('swatch-option-link-layered')) {\r\n                        var childEl = el.find('.swatch-option');\r\n                        childEl.addClass('selected');\r\n                    } else {\r\n                        var checkboxEl = el.find('input[type=checkbox]');\r\n                        checkboxEl.prop('checked', !checkboxEl.prop('checked'));\r\n                    }\r\n\r\n                    self.ajaxSubmit(link);\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                });\r\n\r\n                var checkbox = el.find('input[type=checkbox]');\r\n                checkbox.bind('click', function (e) {\r\n                    self.ajaxSubmit(link);\r\n                    e.stopPropagation();\r\n                });\r\n            });\r\n\r\n            $(\".filter-current a\").bind('click', function (e) {\r\n                var link = self.checkUrl($(this).prop('href'));\r\n                if(!link) return;\r\n\r\n                self.ajaxSubmit(link);\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            });\r\n\r\n            $(\".filter-actions a\").bind('click', function (e) {\r\n                var link = self.checkUrl($(this).prop('href'));\r\n                if(!link) return;\r\n\r\n                self.ajaxSubmit(link);\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            });\r\n        },\r\n\r\n        checkUrl: function (url) {\r\n            var regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\r\n\r\n            return regex.test(url) ? url : null;\r\n        },\r\n\r\n        initLoading: function () {\r\n\r\n        },\r\n\r\n        inFinite: function() {\r\n            var self = this;\r\n            next_page = \"\";\r\n            if($(self.options.productsListSelector +' .infinite-loader').length > 0){\r\n                active = true;\r\n            }\r\n            $(\".pages-items li > a.next\").each(function(){\r\n                next_page = $(this).attr(\"href\");\r\n            });\r\n            $(window).scroll(function(){\r\n                if(!loading && next_page && active && $(window).scrollTop() >= $(\".infinite-loader\").offset().top-$(window).height()+100){\r\n                    if(infinite_loaded_count < 2){\r\n                        loading = true;\r\n                        $(\".pages-items li > a.next\").each(function(){\r\n                            next_page = $(this).attr(\"href\");\r\n                        });\r\n                        self.ajaxInfinite(next_page);\r\n                    }\r\n                }\r\n            });\r\n            $(\".infinite-loader .btn-load-more\").click(function(){\r\n                if(!loading && next_page && infinite_loaded_count >= 2){\r\n                    loading = true;\r\n                    self.ajaxInfinite(next_page);\r\n                }\r\n            });\r\n        },\r\n\r\n        ajaxInfinite: function (submitUrl) {\r\n            var self = this;\r\n            infinite_loaded_count++;\r\n            $('.infinite-loader .btn-load-more').hide();\r\n            $('.infinite-loader .loading').hide();\r\n            $.ajax({\r\n                url: submitUrl,\r\n                data: {isAjax: 1},\r\n                type: 'post',\r\n                dataType: 'json',\r\n                beforeSend: function () {\r\n                    $('.infinite-loader .btn-load-more').hide();\r\n                    $('.infinite-loader .loading').show();\r\n                },\r\n                success: function (res) {\r\n                    loading = false;\r\n                    if (res.backUrl) {\r\n                        window.location = res.backUrl;\r\n                        return;\r\n                    }\r\n                    if (res.products) {\r\n                        if($(res.products).find('div.products-grid')){\r\n                            var items_grid = $(res.products).find('div.products-grid.wrapper .product-items .item');\r\n                            $(self.options.productsListSelector + ' .products.wrapper .product-items').append(items_grid);\r\n                            $(self.options.productsListSelector).trigger('contentUpdated');\r\n                        }\r\n                        if($(res.products).find('div.products-list')){\r\n                            var items_list = $(res.products).find('div.products-list.wrapper .product-items .item');\r\n                            $(self.options.productsListSelector + ' .products.wrapper .product-items').append(items_list);\r\n                            $(self.options.productsListSelector).trigger('contentUpdated');\r\n                        }\r\n                        if($(res.products).find('.pages a.next').length > 0){\r\n                            $(self.options.productsListSelector + ' .pages a.next').attr('href', $(res.products).find('.pages a.next').attr('href'));\r\n                        }else{\r\n                            $(self.options.productsListSelector + ' .pages a.next').remove();\r\n                        }\r\n                        if($(\"form[data-role=tocart-form]\").length > 0) {\r\n                            $(\"form[data-role=tocart-form]\").catalogAddToCart();\r\n                        }\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(2n)').addClass('nth-child-2n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(2n+1)').addClass('nth-child-2np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(3n)').addClass('nth-child-3n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(3n+1)').addClass('nth-child-3np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(4n)').addClass('nth-child-4n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(4n+1)').addClass('nth-child-4np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(5n)').addClass('nth-child-5n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(5n+1)').addClass('nth-child-5np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(6n)').addClass('nth-child-6n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(6n+1)').addClass('nth-child-6np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(7n)').addClass('nth-child-7n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(7n+1)').addClass('nth-child-7np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(8n)').addClass('nth-child-8n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(8n+1)').addClass('nth-child-8np1');\r\n                        var hist = submitUrl;\r\n                        if(submitUrl.indexOf(\"p=\") > -1){\r\n                            var len = submitUrl.length-submitUrl.indexOf(\"p=\");\r\n                            var str_temp = submitUrl.substr(submitUrl.indexOf(\"p=\"),len);\r\n                            var page_param = \"\";\r\n                            if(str_temp.indexOf(\"&\") == -1){\r\n                                page_param = str_temp;\r\n                            } else {\r\n                                page_param = str_temp.substr(0,str_temp.indexOf(\"&\"));\r\n                            }\r\n                            hist = submitUrl.replace(page_param, \"\");\r\n                        }\r\n                        if (typeof window.history.pushState === 'function') {\r\n                            window.history.pushState({url: hist}, '', hist);\r\n                        }\r\n                        if(typeof enable_quickview != 'undefined' && enable_quickview == true) {\r\n                            requirejs(['jquery', 'weltpixel_quickview' ],\r\n                                function($, quickview) {\r\n                                    $('.weltpixel-quickview').off('click').on('click', function() {\r\n                                        var prodUrl = $(this).attr('data-quickview-url');\r\n                                        if (prodUrl.length) {\r\n                                            quickview.displayContent(prodUrl);\r\n                                        }\r\n                                    });\r\n                                });\r\n                        }\r\n                        $(\".products-grid .weltpixel-quickview\").each(function(){\r\n                            $(this).appendTo($(this).parent().parent().children(\".product-item-photo\"));\r\n                        });\r\n                        $(\"#layer-product-list img.porto-lazyload:not(.porto-lazyload-loaded)\").lazyload({effect:\"fadeIn\"});\r\n                        if ($('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').length) {\r\n                            $('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').on('initialized.owl.carousel', function() {\r\n                                $(this).find('.porto-lazyload:not(.porto-lazyload-loaded)').trigger('appear');\r\n                            });\r\n                            $('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').on('changed.owl.carousel', function() {\r\n                                $(this).find('.porto-lazyload:not(.porto-lazyload-loaded)').trigger('appear');\r\n                            });\r\n                        }\r\n                        next_page = \"\";\r\n                        $(\".pages-items li > a.next\").each(function(){\r\n                            next_page = $(this).attr(\"href\");\r\n                        });\r\n                        if(infinite_loaded_count >= 2){\r\n                            $('.infinite-loader .loading').hide();\r\n                            if(next_page){\r\n                                $('.infinite-loader .btn-load-more').show();\r\n                                $(\".infinite-loader .btn-load-more\").unbind(\"click\").click(function(){\r\n                                    if(!loading && next_page && infinite_loaded_count >= 2){\r\n                                        loading = true;\r\n                                        self.ajaxInfinite(next_page);\r\n                                    }\r\n                                });\r\n                            }\r\n                        } else {\r\n                            $('.infinite-loader .loading').fadeOut(300);\r\n                        }\r\n                    }\r\n\r\n                },\r\n                error: function () {\r\n                    window.location.reload();\r\n                }\r\n            });\r\n        },\r\n\r\n        ajaxSubmit: function (submitUrl) {\r\n            var self = this;\r\n            infinite_loaded_count = 0;\r\n            $.ajax({\r\n                url: submitUrl,\r\n                data: {isAjax: 1},\r\n                type: 'post',\r\n                dataType: 'json',\r\n                beforeSend: function () {\r\n                    $('.ln_overlay').show();\r\n                    if (typeof window.history.pushState === 'function') {\r\n                        window.history.pushState({url: submitUrl}, '', submitUrl);\r\n                    }\r\n                },\r\n                success: function (res) {\r\n                    if (res.backUrl) {\r\n                        window.location = res.backUrl;\r\n                        return;\r\n                    }\r\n                    if (res.navigation) {\r\n                        $(self.options.navigationSelector).replaceWith(res.navigation);\r\n                        $(self.options.navigationSelector).trigger('contentUpdated');\r\n                    }\r\n                    if (res.products) {\r\n                        $(self.options.productsListSelector).replaceWith(res.products);\r\n                        $(self.options.productsListSelector).trigger('contentUpdated');\r\n                    }\r\n                    $('.ln_overlay').hide();\r\n                    if(typeof enable_quickview != 'undefined' && enable_quickview == true) {\r\n                        requirejs(['jquery', 'weltpixel_quickview' ],\r\n                        function($, quickview) {\r\n                            $('.weltpixel-quickview').off('click').on('click', function() {\r\n                                var prodUrl = $(this).attr('data-quickview-url');\r\n                                if (prodUrl.length) {\r\n                                    quickview.displayContent(prodUrl);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                    $(\".products-grid .weltpixel-quickview\").each(function(){\r\n                        $(this).appendTo($(this).parent().parent().children(\".product-item-photo\"));\r\n                    });\r\n                    $(\"#layer-product-list img.porto-lazyload\").lazyload({effect:\"fadeIn\"});\r\n                    if ($('#layer-product-list .porto-lazyload').closest('.owl-carousel').length) {\r\n                        $('#layer-product-list .porto-lazyload').closest('.owl-carousel').on('changed.owl.carousel', function() {\r\n                            $(this).find('.porto-lazyload:not(.porto-lazyload-loaded)').trigger('appear');\r\n                        });\r\n                    }\r\n                },\r\n                error: function () {\r\n                    window.location.reload();\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mageplaza.layer;\r\n});\r\n","Mageplaza_LayeredNavigation/js/model/loader.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license sliderConfig is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category    Mageplaza\r\n * @package     Mageplaza_LayeredNavigation\r\n * @copyright   Copyright (c) 2017 Mageplaza (http://www.mageplaza.com/)\r\n * @license     https://www.mageplaza.com/LICENSE.txt\r\n */\r\n\r\ndefine(\r\n    [\r\n        'jquery'\r\n    ],\r\n    function ($) {\r\n        'use strict';\r\n\r\n        return {\r\n            /**\r\n             * Start full page loader action\r\n             */\r\n            startLoader: function () {\r\n                $('#ln_overlay').show();\r\n            },\r\n\r\n            /**\r\n             * Stop full page loader action\r\n             */\r\n            stopLoader: function () {\r\n                $('#ln_overlay').hide();\r\n            }\r\n        };\r\n    }\r\n);\r\n","Mageplaza_LayeredNavigation/js/price/slider.js":"/**\r\n * Copyright ? 2016 Mageplaza. All rights reserved.\r\n * See https://www.mageplaza.com/LICENSE.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Catalog/js/price-utils',\r\n    'jquery/ui',\r\n    'Mageplaza_LayeredNavigation/js/layer'\r\n], function($, ultil) {\r\n    \"use strict\";\r\n\r\n    $.widget('mageplaza.layerSlider', $.mageplaza.layer, {\r\n        options: {\r\n            sliderElement: '#ln_price_slider',\r\n            textElement: '#ln_price_text'\r\n        },\r\n        _create: function () {\r\n            var self = this;\r\n            $(this.options.sliderElement).slider({\r\n                min: self.options.minValue,\r\n                max: self.options.maxValue,\r\n                values: [self.options.selectedFrom, self.options.selectedTo],\r\n                slide: function( event, ui ) {\r\n                    self.displayText(ui.values[0], ui.values[1]);\r\n                },\r\n                change: function(event, ui) {\r\n                    self.ajaxSubmit(self.getUrl(ui.values[0], ui.values[1]));\r\n                }\r\n            });\r\n            this.displayText(this.options.selectedFrom, this.options.selectedTo);\r\n        },\r\n\r\n        getUrl: function(from, to){\r\n            return this.options.ajaxUrl.replace(encodeURI('{price_start}'), from).replace(encodeURI('{price_end}'), to);\r\n        },\r\n\r\n        displayText: function(from, to){\r\n            $(this.options.textElement).html(this.formatPrice(from) + ' - ' + this.formatPrice(to));\r\n        },\r\n\r\n        formatPrice: function(value) {\r\n            return ultil.formatPrice(value, this.options.priceFormat);\r\n        }\r\n    });\r\n\r\n    return $.mageplaza.layerSlider;\r\n});\r\n","Mageplaza_LayeredNavigation/js/action/submit-filter.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license sliderConfig is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category    Mageplaza\r\n * @package     Mageplaza_LayeredNavigation\r\n * @copyright   Copyright (c) 2017 Mageplaza (http://www.mageplaza.com/)\r\n * @license     https://www.mageplaza.com/LICENSE.txt\r\n */\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'mage/storage',\r\n        'Mageplaza_LayeredNavigation/js/model/loader'\r\n    ],\r\n    function ($, storage, loader) {\r\n        'use strict';\r\n\r\n        var productContainer = $('#layer-product-list'),\r\n            layerContainer = $('.layered-filter-block-container');\r\n\r\n        return function (submitUrl) {\r\n            /** save active state */\r\n            var actives = [];\r\n            $('.filter-options-item').each(function (index) {\r\n                if ($(this).hasClass('active')) {\r\n                    actives.push($(this).attr('attribute'));\r\n                }\r\n            });\r\n            window.layerActiveTabs = actives;\r\n\r\n            /** start loader */\r\n            loader.startLoader();\r\n\r\n            /** change browser url */\r\n            if (typeof window.history.pushState === 'function') {\r\n                window.history.pushState({url: submitUrl}, '', submitUrl);\r\n            }\r\n\r\n            return storage.post(submitUrl, {}).done(\r\n                function (response) {\r\n                    if (response.backUrl) {\r\n                        window.location = response.backUrl;\r\n                        return;\r\n                    }\r\n                    if (response.navigation) {\r\n                        layerContainer.html(response.navigation);\r\n                        layerContainer.trigger('contentUpdated');\r\n                    }\r\n                    if (response.products) {\r\n                        productContainer.html(response.products);\r\n                        productContainer.trigger('contentUpdated');\r\n                    }\r\n                }\r\n            ).fail(\r\n                function () {\r\n                    window.location.reload();\r\n                }\r\n            ).always(\r\n                function () {\r\n                    loader.stopLoader();\r\n                }\r\n            );\r\n        };\r\n    }\r\n);\r\n","Mageplaza_LayeredNavigation/js/view/layer.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license sliderConfig is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category    Mageplaza\r\n * @package     Mageplaza_LayeredNavigation\r\n * @copyright   Copyright (c) Mageplaza (https://www.mageplaza.com/)\r\n * @license     https://www.mageplaza.com/LICENSE.txt\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Mageplaza_AjaxLayer/js/action/submit-filter',\r\n    'Magento_Catalog/js/price-utils',\r\n    'accordion',\r\n    'productListToolbarForm'\r\n], function ($, submitFilterAction, ultil) {\r\n    \"use strict\";\r\n    var next_page = \"\";\r\n    var loading = false;\r\n    var infinite_loaded_count = 0;\r\n    var active = false;\r\n\r\n    $.widget('mageplaza.layer', $.mage.accordion, {\r\n        options: {\r\n            openedState: 'active',\r\n            collapsible: true,\r\n            multipleCollapsible: true,\r\n            animate: 200,\r\n            productsListSelector: '#layer-product-list',\r\n            mobileShopbyElement: '#layered-filter-block .filter-title [data-role=title]',\r\n            collapsibleElement: '[data-role=ln_collapsible]',\r\n            header: '[data-role=ln_title]',\r\n            content: '[data-role=ln_content]',\r\n            isCustomerLoggedIn: false,\r\n            isAjax: true,\r\n            params: [],\r\n            active: [],\r\n            checkboxEl: 'input[type=checkbox]',\r\n            sliderElementPrefix: '#ln_slider_',\r\n            sliderTextElementPrefix: '#ln_slider_text_'\r\n        },\r\n\r\n        inFinite: function() {\r\n            var self = this;\r\n            next_page = \"\";\r\n            if($(self.options.productsListSelector +' .infinite-loader').length > 0){\r\n                active = true;\r\n            }\r\n            $(\".pages-items li > a.next\").each(function(){\r\n                next_page = $(this).attr(\"href\");\r\n            });\r\n            if(!next_page){\r\n                $('.infinite-loader').hide();\r\n            }\r\n            $(\".infinite-loader .btn-load-more\").click(function(){\r\n                if(!loading && next_page){\r\n                    loading = true;\r\n                    self.ajaxInfinite(next_page);\r\n                }\r\n            });\r\n        },\r\n\r\n        ajaxInfinite: function (submitUrl) {\r\n            var self = this;\r\n            infinite_loaded_count++;\r\n            $('.infinite-loader .btn-load-more').hide();\r\n            $('.infinite-loader .loading').hide();\r\n            $.ajax({\r\n                url: submitUrl,\r\n                type: 'get',\r\n                beforeSend: function () {\r\n                    $('.infinite-loader .btn-load-more').hide();\r\n                    $('.infinite-loader .loading').show();\r\n                },\r\n                success: function (res) {\r\n                    loading = false;\r\n                    var $products = $(res.products);\r\n                    if (res.backUrl) {\r\n                        window.location = res.backUrl;\r\n                        return;\r\n                    }\r\n                    if($products){\r\n                        $products.each(function(i,el){\r\n                            if($(el).hasClass('products-grid')){\r\n                                var items_grid = $(this).find('.product-items .item');\r\n                                $(self.options.productsListSelector + ' .products.wrapper .product-items').append(items_grid);\r\n                                $(self.options.productsListSelector).trigger('contentUpdated');\r\n                            }\r\n                            if($(el).hasClass('products-list')){\r\n                                var items_list = $(this).find('.product-items .item');\r\n                                $(self.options.productsListSelector + ' .products.wrapper .product-items').append(items_list);\r\n                                $(self.options.productsListSelector).trigger('contentUpdated');\r\n                            }\r\n                            if($(el).hasClass('toolbar-products')){\r\n                                if($(this).find('.pages a.next').length > 0){\r\n                                    $(self.options.productsListSelector + ' .pages a.next').attr('href', $(this).find('.pages a.next').attr('href'));\r\n                                }else{\r\n                                    $(self.options.productsListSelector + ' .pages a.next').remove();\r\n                                }\r\n                            }\r\n                        });\r\n                        if($(\"form[data-role=tocart-form]\").length > 0 && !redirect_cart) {\r\n                            $(\"form[data-role=tocart-form]\").catalogAddToCart();\r\n                        }\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(2n)').addClass('nth-child-2n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(2n+1)').addClass('nth-child-2np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(3n)').addClass('nth-child-3n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(3n+1)').addClass('nth-child-3np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(4n)').addClass('nth-child-4n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(4n+1)').addClass('nth-child-4np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(5n)').addClass('nth-child-5n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(5n+1)').addClass('nth-child-5np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(6n)').addClass('nth-child-6n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(6n+1)').addClass('nth-child-6np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(7n)').addClass('nth-child-7n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(7n+1)').addClass('nth-child-7np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(8n)').addClass('nth-child-8n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(8n+1)').addClass('nth-child-8np1');\r\n                        var hist = submitUrl;\r\n                        if(submitUrl.indexOf(\"p=\") > -1){\r\n                            var len = submitUrl.length-submitUrl.indexOf(\"p=\");\r\n                            var str_temp = submitUrl.substr(submitUrl.indexOf(\"p=\"),len);\r\n                            var page_param = \"\";\r\n                            if(str_temp.indexOf(\"&\") == -1){\r\n                                page_param = str_temp;\r\n                            } else {\r\n                                page_param = str_temp.substr(0,str_temp.indexOf(\"&\"));\r\n                            }\r\n                            hist = submitUrl.replace(page_param, \"\");\r\n                        }\r\n                        if (typeof window.history.pushState === 'function') {\r\n                            window.history.pushState({url: hist}, '', hist);\r\n                        }\r\n                        if(typeof enable_quickview != 'undefined' && enable_quickview == true) {\r\n                            requirejs(['jquery', 'weltpixel_quickview' ],\r\n                                function($, quickview) {\r\n                                    $('.weltpixel-quickview').off('click').on('click', function() {\r\n                                        var prodUrl = $(this).attr('data-quickview-url');\r\n                                        if (prodUrl.length) {\r\n                                            quickview.displayContent(prodUrl);\r\n                                        }\r\n                                    });\r\n                                });\r\n                        }\r\n                        $(\".products-grid .weltpixel-quickview\").each(function(){\r\n                            $(this).appendTo($(this).parent().parent().children(\".product-item-photo\"));\r\n                        });\r\n                        $(\"#layer-product-list img.porto-lazyload:not(.porto-lazyload-loaded)\").lazyload({effect:\"fadeIn\"});\r\n                        if ($('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').length) {\r\n                            $('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').on('initialized.owl.carousel', function() {\r\n                                $(this).find('.porto-lazyload:not(.porto-lazyload-loaded)').trigger('appear');\r\n                            });\r\n                            $('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').on('changed.owl.carousel', function() {\r\n                                $(this).find('.porto-lazyload:not(.porto-lazyload-loaded)').trigger('appear');\r\n                            });\r\n                        }\r\n                        self.initWishlistCompare();\r\n                        next_page = \"\";\r\n                        $(\".pages-items li > a.next\").each(function(){\r\n                            next_page = $(this).attr(\"href\");\r\n                        });\r\n                        $('.infinite-loader .loading').hide();\r\n                        if(next_page){\r\n                            $('.infinite-loader .btn-load-more').show();\r\n                            $(\".infinite-loader .btn-load-more\").unbind(\"click\").click(function(){\r\n                                if(!loading && next_page){\r\n                                    loading = true;\r\n                                    self.ajaxInfinite(next_page);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                },\r\n                error: function () {\r\n                    window.location.reload();\r\n                }\r\n            });\r\n        },\r\n\r\n        _create: function () {\r\n            this.initActiveItems();\r\n\r\n            this._super();\r\n\r\n            this.initProductListUrl();\r\n            this.initObserve();\r\n            this.initSlider();\r\n            this.initWishlistCompare();\r\n            this.selectedAttr();\r\n        },\r\n\r\n        initActiveItems: function () {\r\n            var layerActives = this.options.active,\r\n                actives = [];\r\n\r\n            if (typeof window.layerActiveTabs !== 'undefined') {\r\n                layerActives = window.layerActiveTabs;\r\n            }\r\n            if (layerActives.length) {\r\n                this.element.find('.filter-options-item').each(function (index) {\r\n                    if (~$.inArray($(this).attr('attribute'), layerActives)) {\r\n                        actives.push(index);\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.options.active = actives;\r\n\r\n            return this;\r\n        },\r\n\r\n        initProductListUrl: function () {\r\n            var isProcessToolbar = false,\r\n                isAjax = this.options.isAjax;\r\n            $.mage.productListToolbarForm.prototype.changeUrl = function (paramName, paramValue, defaultValue) {\r\n                if (isProcessToolbar) {\r\n                    return;\r\n                }\r\n                if (isAjax) {\r\n                    isProcessToolbar = true;\r\n                }\r\n\r\n                var urlPaths = this.options.url.split('?'),\r\n                    baseUrl = urlPaths[0],\r\n                    urlParams = urlPaths[1] ? urlPaths[1].split('&') : [],\r\n                    paramData = {},\r\n                    parameters;\r\n                for (var i = 0; i < urlParams.length; i++) {\r\n                    parameters = urlParams[i].split('=');\r\n                    paramData[parameters[0]] = parameters[1] !== undefined\r\n                        ? window.decodeURIComponent(parameters[1].replace(/\\+/g, '%20'))\r\n                        : '';\r\n                }\r\n                paramData[paramName] = paramValue;\r\n                if (paramValue === defaultValue) {\r\n                    delete paramData[paramName];\r\n                }\r\n                paramData = $.param(paramData);\r\n                if (isAjax) {\r\n                    submitFilterAction(baseUrl + (paramData.length ? '?' + paramData : ''));\r\n                } else location.href = baseUrl + (paramData.length ? '?' + paramData : '');\r\n            }\r\n        },\r\n\r\n        initObserve: function () {\r\n            var self = this;\r\n            var isAjax = this.options.isAjax;\r\n            infinite_loaded_count = 0;\r\n\r\n            // fix browser back, forward button\r\n            if (typeof window.history.replaceState === \"function\") {\r\n                window.history.replaceState({url: document.URL}, document.title);\r\n\r\n                setTimeout(function () {\r\n                    window.onpopstate = function (e) {\r\n                        if (e.state) {\r\n                            submitFilterAction(e.state.url, 1);\r\n                        }\r\n                    };\r\n                }, 0)\r\n            }\r\n\r\n            var pageElements = $('#layer-product-list').find('.pages a');\r\n            pageElements.each(function () {\r\n                var el = $(this),\r\n                    link = self.checkUrl(el.prop('href'));\r\n                if (!link) {\r\n                    return;\r\n                }\r\n\r\n                el.bind('click', function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    if (isAjax) {\r\n                        submitFilterAction(link);\r\n                    }\r\n                    else location.href = link;\r\n                })\r\n            });\r\n\r\n            var currentElements = this.element.find('.filter-current a, .filter-actions a');\r\n            currentElements.each(function (index) {\r\n                var el = $(this),\r\n                    link = self.checkUrl(el.prop('href'));\r\n                if (!link) {\r\n                    return;\r\n                }\r\n\r\n                el.bind('click', function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    if (isAjax) {\r\n                        submitFilterAction(link);\r\n                    }\r\n                    else location.href = link;\r\n                });\r\n            });\r\n\r\n            var optionElements = this.element.find('.filter-options a');\r\n            optionElements.each(function (index) {\r\n                var el = $(this),\r\n                    link = self.checkUrl(el.prop('href'));\r\n                if (!link) {\r\n                    return;\r\n                }\r\n\r\n                el.bind('click', function (e) {\r\n                    if (el.hasClass('swatch-option-link-layered')) {\r\n                        self.selectSwatchOption(el);\r\n                    } else {\r\n                        var checkboxEl = el.siblings(self.options.checkboxEl);\r\n                        checkboxEl.prop('checked', !checkboxEl.prop('checked'));\r\n                    }\r\n\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    self.ajaxSubmit(link);\r\n                });\r\n\r\n                var checkbox = el.siblings(self.options.checkboxEl);\r\n                checkbox.bind('click', function (e) {\r\n                    e.stopPropagation();\r\n                    self.ajaxSubmit(link);\r\n                });\r\n            });\r\n\r\n            var swatchElements = this.element.find('.swatch-attribute');\r\n            swatchElements.each(function (index) {\r\n                var el = $(this);\r\n                var attCode = el.attr('attribute-code');\r\n                if (attCode) {\r\n                    if (self.options.params.hasOwnProperty(attCode)) {\r\n                        var attValues = self.options.params[attCode].split(\",\");\r\n                        var swatchOptions = el.find('.swatch-option');\r\n                        swatchOptions.each(function (option) {\r\n                            var elOption = $(this);\r\n                            if ($.inArray(elOption.attr('option-id'), attValues) !== -1) {\r\n                                elOption.addClass('selected');\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n            if(typeof enable_quickview != 'undefined' && enable_quickview == true) {\r\n                requirejs(['jquery', 'weltpixel_quickview' ],\r\n                    function($, quickview) {\r\n                        $('.weltpixel-quickview').off('click').on('click', function() {\r\n                            var prodUrl = $(this).attr('data-quickview-url');\r\n                            if (prodUrl.length) {\r\n                                quickview.displayContent(prodUrl);\r\n                            }\r\n                        });\r\n                    });\r\n            }\r\n\r\n            $(\".products-grid .weltpixel-quickview\").each(function(){\r\n                $(this).appendTo($(this).parents('.product-item-info').children(\".product-item-photo\"));\r\n            });\r\n            $(\"#layer-product-list img.porto-lazyload:not(.porto-lazyload-loaded)\").lazyload({effect:\"fadeIn\"});\r\n            if ($('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').length) {\r\n                $('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').on('changed.owl.carousel', function() {\r\n                    $(this).find('.porto-lazyload:not(.porto-lazyload-loaded)').trigger('appear');\r\n                });\r\n            }\r\n            if(isAjax) {\r\n                self.inFinite();\r\n            }else{\r\n                $('.infinite-loader').hide();\r\n            }\r\n\r\n        },\r\n\r\n        selectSwatchOption: function (el) {\r\n            var childEl = el.find('.swatch-option');\r\n            if (childEl.hasClass('selected')) {\r\n                childEl.removeClass('selected');\r\n            } else {\r\n                childEl.addClass('selected');\r\n            }\r\n        },\r\n\r\n        initSlider: function () {\r\n            var self = this,\r\n                slider = this.options.slider,\r\n                isAjax = this.options.isAjax;\r\n            for (var code in slider) {\r\n                if (slider.hasOwnProperty(code)) {\r\n                    var sliderConfig = slider[code],\r\n                        sliderElement = self.element.find(this.options.sliderElementPrefix + code),\r\n                        priceFormat = sliderConfig.hasOwnProperty('priceFormat') ? JSON.parse(sliderConfig.priceFormat) : null;\r\n\r\n                    if (sliderElement.length) {\r\n                        sliderElement.slider({\r\n                            range: true,\r\n                            min: sliderConfig.minValue,\r\n                            max: sliderConfig.maxValue,\r\n                            values: [sliderConfig.selectedFrom, sliderConfig.selectedTo],\r\n                            slide: function (event, ui) {\r\n                                self.displaySliderText(code, ui.values[0], ui.values[1], priceFormat);\r\n                            },\r\n                            change: function (event, ui) {\r\n                                self.ajaxSubmit(self.getSliderUrl(sliderConfig.ajaxUrl, ui.values[0], ui.values[1]));\r\n                            }\r\n                        });\r\n                    }\r\n                    self.displaySliderText(code, sliderConfig.selectedFrom, sliderConfig.selectedTo, priceFormat);\r\n                }\r\n            }\r\n        },\r\n\r\n        displaySliderText: function (code, from, to, format) {\r\n            var textElement = this.element.find(this.options.sliderTextElementPrefix + code);\r\n            if (textElement.length) {\r\n                if (format !== null) {\r\n                    from = this.formatPrice(from, format);\r\n                    to = this.formatPrice(to, format);\r\n                }\r\n\r\n                textElement.html(from + ' - ' + to);\r\n            }\r\n        },\r\n\r\n        getSliderUrl: function (url, from, to) {\r\n            return url.replace('from-to', from + '-' + to);\r\n        },\r\n\r\n        formatPrice: function (value, format) {\r\n            return ultil.formatPrice(value, format);\r\n        },\r\n\r\n        ajaxSubmit: function (submitUrl) {\r\n            var isAjax = this.options.isAjax;\r\n            this.element.find(this.options.mobileShopbyElement).trigger('click');\r\n            if (isAjax) {\r\n                return submitFilterAction(submitUrl);\r\n            }\r\n            location.href = submitUrl;\r\n        },\r\n\r\n        checkUrl: function (url) {\r\n            var regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\r\n            return regex.test(url) ? url : null;\r\n        },\r\n\r\n        //Handling 'add to wishlist' & 'add to compare' event\r\n        initWishlistCompare: function () {\r\n            var isAjax = this.options.isAjax;\r\n            var isCustomerLoggedIn = this.options.isCustomerLoggedIn,\r\n                elClass = 'a.action.tocompare' + (isCustomerLoggedIn ? ',a.action.towishlist' : '');\r\n            $(elClass).each(function () {\r\n                var el = $(this);\r\n                $(el).bind('click', function (e) {\r\n                    var dataPost = $(el).data('post'),\r\n                        formKey = $('input[name=\"form_key\"]').val();\r\n                    if (formKey) {\r\n                        dataPost.data.form_key = formKey;\r\n                    }\r\n\r\n                    var paramData = $.param(dataPost.data),\r\n                        url = dataPost.action + (paramData.length ? '?' + paramData : '');\r\n\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n\r\n                    if (isAjax && el.hasClass('towishlist')) {\r\n                        submitFilterAction(url, true);\r\n                    } else if (isAjax) {\r\n                        submitFilterAction(url);\r\n                    } else location.href = url;\r\n                });\r\n            })\r\n        },\r\n\r\n        //Selected attribute color after page load.\r\n        selectedAttr: function () {\r\n            var filterCurrent = $('.layered-filter-block-container .filter-current .items .item .filter-value');\r\n\r\n            filterCurrent.each(function(){\r\n                var el         = $(this),\r\n                    colorLabel = el.html(),\r\n                    colorAttr  = $('.filter-options .filter-options-item .color .swatch-option-link-layered .swatch-option');\r\n\r\n                colorAttr.each(function(){\r\n                    var elA = $(this);\r\n                    if(elA.attr('data-option-label') === colorLabel && !elA.hasClass('selected')){\r\n                        elA.addClass('selected');\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mageplaza.layer;\r\n});\r\n","Magento_Reports/js/recently-viewed.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\ndefine([\n    'jquery',\n    'jquery-ui-modules/widget'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.recentlyViewedProducts', {\n        options: {\n            localStorageKey: 'recently-viewed-products',\n            productBlock: '#widget_viewed_item',\n            viewedContainer: 'ol'\n        },\n\n        /**\n         * Bind events to the appropriate handlers.\n         * @private\n         */\n        _create: function () {\n            var productHtml = $(this.options.productBlock).html(),\n                productSku = $(this.options.productBlock).data('sku'),\n                products = JSON.parse(window.localStorage.getItem(this.options.localStorageKey)),\n                productsLength, maximum, showed, index;\n\n            if (products) {\n                productsLength = products.sku.length;\n                maximum = $(this.element).data('count');\n                showed = 0;\n\n                for (index = 0; index <= productsLength; index++) {\n                    if (products.sku[index] == productSku || showed >= maximum) { //eslint-disable-line\n                        products.sku.splice(index, 1);\n                        products.html.splice(index, 1);\n                    } else {\n                        $(this.element).find(this.options.viewedContainer).append(products.html[index]);\n                        $(this.element).show();\n                        showed++;\n                    }\n                }\n                $(this.element).find(this.options.productBlock).show();\n            } else {\n                products = {};\n                products.sku = [];\n                products.html = [];\n            }\n            products.sku.unshift(productSku);\n            products.html.unshift(productHtml);\n            window.localStorage.setItem(this.options.localStorageKey, JSON.stringify(products));\n        }\n    });\n\n    return $.mage.recentlyViewedProducts;\n});\n","Magento_Wishlist/js/search.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/widget'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.wishlistSearch', {\n\n        /**\n         * Bind handlers to events\n         */\n        _create: function () {\n            this.element.on('change', $.proxy(this._toggleForm, this));\n        },\n\n        /**\n         * Toggle Form\n         * @private\n         */\n        _toggleForm: function () {\n            switch (this.element.val()) {\n                case 'name':\n                    $(this.options.emailFormSelector).hide();\n                    $(this.options.nameFormSelector).show();\n                    break;\n\n                case 'email':\n                    $(this.options.nameFormSelector).hide();\n                    $(this.options.emailFormSelector).show();\n                    break;\n                default:\n                    $(this.options.emailFormSelector).add(this.options.nameFormSelector).hide();\n            }\n        }\n    });\n\n    return $.mage.wishlistSearch;\n});\n","Magento_Wishlist/js/add-to-wishlist.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/widget'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.addToWishlist', {\n        options: {\n            bundleInfo: 'div.control [name^=bundle_option]',\n            configurableInfo: '.super-attribute-select',\n            groupedInfo: '#super-product-table input',\n            downloadableInfo: '#downloadable-links-list input',\n            customOptionsInfo: '.product-custom-option',\n            qtyInfo: '#qty',\n            actionElement: '[data-action=\"add-to-wishlist\"]',\n            productListWrapper: '.product-item-info',\n            productPageWrapper: '.product-info-main'\n        },\n\n        /** @inheritdoc */\n        _create: function () {\n            this._bind();\n        },\n\n        /**\n         * @private\n         */\n        _bind: function () {\n            var options = this.options,\n                dataUpdateFunc = '_updateWishlistData',\n                validateProductQty = '_validateWishlistQty',\n                changeCustomOption = 'change ' + options.customOptionsInfo,\n                changeQty = 'change ' + options.qtyInfo,\n                updateWishlist = 'click ' + options.actionElement,\n                events = {},\n                key;\n\n            if ('productType' in options) {\n                if (typeof options.productType === 'string') {\n                    options.productType = [options.productType];\n                }\n            } else {\n                options.productType = [];\n            }\n\n            events[changeCustomOption] = dataUpdateFunc;\n            events[changeQty] = dataUpdateFunc;\n            events[updateWishlist] = validateProductQty;\n\n            for (key in options.productType) {\n                if (options.productType.hasOwnProperty(key) && options.productType[key] + 'Info' in options) {\n                    events['change ' + options[options.productType[key] + 'Info']] = dataUpdateFunc;\n                }\n            }\n            this._on(events);\n        },\n\n        /**\n         * @param {jQuery.Event} event\n         * @private\n         */\n        _updateWishlistData: function (event) {\n            var dataToAdd = {},\n                isFileUploaded = false,\n                handleObjSelector = null,\n                self = this;\n\n            if (event.handleObj.selector == this.options.qtyInfo) { //eslint-disable-line eqeqeq\n                this._updateAddToWishlistButton({}, event);\n                event.stopPropagation();\n\n                return;\n            }\n\n            handleObjSelector = $(event.currentTarget).closest('form').find(event.handleObj.selector);\n\n            handleObjSelector.each(function (index, element) {\n                if ($(element).is('input[type=text]') ||\n                    $(element).is('input[type=email]') ||\n                    $(element).is('input[type=number]') ||\n                    $(element).is('input[type=hidden]') ||\n                    $(element).is('input[type=checkbox]:checked') ||\n                    $(element).is('input[type=radio]:checked') ||\n                    $(element).is('textarea') ||\n                    $('#' + element.id + ' option:selected').length\n                ) {\n                    if ($(element).data('selector') || $(element).attr('name')) {\n                        dataToAdd = $.extend({}, dataToAdd, self._getElementData(element));\n                    }\n\n                    return;\n                }\n\n                if ($(element).is('input[type=file]') && $(element).val()) {\n                    isFileUploaded = true;\n                }\n            });\n\n            if (isFileUploaded) {\n                this.bindFormSubmit();\n            }\n            this._updateAddToWishlistButton(dataToAdd, event);\n            event.stopPropagation();\n        },\n\n        /**\n         * @param {Object} dataToAdd\n         * @param {jQuery.Event} event\n         * @private\n         */\n        _updateAddToWishlistButton: function (dataToAdd, event) {\n            var self = this,\n                buttons = this._getAddToWishlistButton(event);\n\n            buttons.each(function (index, element) {\n                var params = $(element).data('post');\n\n                if (!params) {\n                    params = {\n                        'data': {}\n                    };\n                }\n\n                params.data = $.extend({}, params.data, dataToAdd, {\n                    'qty': $(self.options.qtyInfo).val()\n                });\n                $(element).data('post', params);\n            });\n        },\n\n        /**\n         * @param {jQuery.Event} event\n         * @private\n         */\n        _getAddToWishlistButton: function (event) {\n            var productListWrapper = $(event.currentTarget).closest(this.options.productListWrapper);\n\n            if (productListWrapper.length) {\n                return productListWrapper.find(this.options.actionElement);\n            }\n\n            return $(this.options.productPageWrapper).find(this.options.actionElement);\n        },\n\n        /**\n         * @param {Object} array1\n         * @param {Object} array2\n         * @return {Object}\n         * @private\n         * @deprecated\n         */\n        _arrayDiffByKeys: function (array1, array2) {\n            var result = {};\n\n            $.each(array1, function (key, value) {\n                if (key.indexOf('option') === -1) {\n                    return;\n                }\n\n                if (!array2[key]) {\n                    result[key] = value;\n                }\n            });\n\n            return result;\n        },\n\n        /**\n         * @param {HTMLElement} element\n         * @return {Object}\n         * @private\n         */\n        _getElementData: function (element) {\n            var data, elementName, elementValue;\n\n            element = $(element);\n            data = {};\n            elementName = element.data('selector') ? element.data('selector') : element.attr('name');\n            elementValue = element.val();\n\n            if (element.is('select[multiple]') && elementValue !== null) {\n                if (elementName.substr(elementName.length - 2) == '[]') { //eslint-disable-line eqeqeq\n                    elementName = elementName.substring(0, elementName.length - 2);\n                }\n                $.each(elementValue, function (key, option) {\n                    data[elementName + '[' + option + ']'] = option;\n                });\n            } else if (elementName.substr(elementName.length - 2) == '[]') { //eslint-disable-line eqeqeq, max-depth\n                elementName = elementName.substring(0, elementName.length - 2);\n\n                data[elementName + '[' + elementValue + ']'] = elementValue;\n            } else {\n                data[elementName] = elementValue;\n            }\n\n            return data;\n        },\n\n        /**\n         * @param {Object} params\n         * @param {Object} dataToAdd\n         * @private\n         * @deprecated\n         */\n        _removeExcessiveData: function (params, dataToAdd) {\n            var dataToRemove = this._arrayDiffByKeys(params.data, dataToAdd);\n\n            $.each(dataToRemove, function (key) {\n                delete params.data[key];\n            });\n        },\n\n        /**\n         * Bind form submit.\n         */\n        bindFormSubmit: function () {\n            var self = this;\n\n            $('[data-action=\"add-to-wishlist\"]').on('click', function (event) {\n                var element, params, form, action;\n\n                event.stopPropagation();\n                event.preventDefault();\n\n                element = $('input[type=file]' + self.options.customOptionsInfo);\n                params = $(event.currentTarget).data('post');\n                form = $(element).closest('form');\n                action = params.action;\n\n                if (params.data.id) {\n                    $('<input>', {\n                        type: 'hidden',\n                        name: 'id',\n                        value: params.data.id\n                    }).appendTo(form);\n                }\n\n                if (params.data.uenc) {\n                    action += 'uenc/' + params.data.uenc;\n                }\n\n                $(form).attr('action', action).submit();\n            });\n        },\n\n        /**\n         * Validate product quantity before updating Wish List\n         *\n         * @param {jQuery.Event} event\n         * @private\n         */\n        _validateWishlistQty: function (event) {\n            var element = $(this.options.qtyInfo);\n\n            if (!(element.validation() && element.validation('isValid'))) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                return;\n            }\n        }\n    });\n\n    return $.mage.addToWishlist;\n});\n","Magento_Wishlist/js/wishlist.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\ndefine([\n    'jquery',\n    'mage/template',\n    'Magento_Ui/js/modal/alert',\n    'jquery-ui-modules/widget',\n    'mage/validation/validation',\n    'mage/dataPost'\n], function ($, mageTemplate, alert) {\n    'use strict';\n\n    $.widget('mage.wishlist', {\n        options: {\n            dataAttribute: 'item-id',\n            nameFormat: 'qty[{0}]',\n            btnRemoveSelector: '[data-role=remove]',\n            qtySelector: '[data-role=qty]',\n            addToCartSelector: '[data-role=tocart]',\n            addAllToCartSelector: '[data-role=all-tocart]',\n            commentInputType: 'textarea',\n            infoList: false\n        },\n\n        /**\n         * Bind handlers to events.\n         */\n        _create: function () {\n            var _this = this;\n\n            if (!this.options.infoList) {\n                this.element\n                    .on('addToCart', function (event, context) {\n                        var urlParams;\n\n                        event.stopPropagation(event);\n                        $(context).data('stop-processing', true);\n                        urlParams = _this._getItemsToCartParams(\n                            $(context).parents('[data-row=product-item]').find(_this.options.addToCartSelector)\n                        );\n                        $.mage.dataPost().postData(urlParams);\n\n                        return false;\n                    })\n                    .on('click', this.options.btnRemoveSelector, $.proxy(function (event) {\n                        event.preventDefault();\n                        $.mage.dataPost().postData($(event.currentTarget).data('post-remove'));\n                    }, this))\n                    .on('click', this.options.addToCartSelector, $.proxy(this._beforeAddToCart, this))\n                    .on('click', this.options.addAllToCartSelector, $.proxy(this._addAllWItemsToCart, this))\n                    .on('focusin focusout', this.options.commentInputType, $.proxy(this._focusComment, this));\n            }\n\n            // Setup validation for the form\n            this.element.mage('validation', {\n                /** @inheritdoc */\n                errorPlacement: function (error, element) {\n                    error.insertAfter(element.next());\n                }\n            });\n        },\n\n        /**\n         * Process data before add to cart\n         *\n         * - update item's qty value.\n         *\n         * @param {Event} event\n         * @private\n         */\n        _beforeAddToCart: function (event) {\n            var elem = $(event.currentTarget),\n                itemId = elem.data(this.options.dataAttribute),\n                qtyName = $.validator.format(this.options.nameFormat, itemId),\n                qtyValue = elem.parents().find('[name=\"' + qtyName + '\"]').val(),\n                params = elem.data('post');\n\n            if (params) {\n                params.data = $.extend({}, params.data, {\n                    'qty': qtyValue\n                });\n                elem.data('post', params);\n            }\n        },\n\n        /**\n         * Add wish list items to cart.\n         * @private\n         * @param {jQuery} elem - clicked 'add to cart' button\n         */\n        _getItemsToCartParams: function (elem) {\n            var itemId, url, qtyName, qtyValue;\n\n            if (elem.data(this.options.dataAttribute)) {\n                itemId = elem.data(this.options.dataAttribute);\n                url = this.options.addToCartUrl;\n                qtyName = $.validator.format(this.options.nameFormat, itemId);\n                qtyValue = elem.parents().find('[name=\"' + qtyName + '\"]').val();\n                url.data.item = itemId;\n                url.data.qty = qtyValue;\n\n                return url;\n            }\n        },\n\n        /**\n         * Add all wish list items to cart\n         * @private\n         */\n        _addAllWItemsToCart: function () {\n            var urlParams = this.options.addAllToCartUrl,\n                separator = urlParams.action.indexOf('?') >= 0 ? '&' : '?';\n\n            this.element.find(this.options.qtySelector).each(function (index, element) {\n                urlParams.action += separator + $(element).prop('name') + '=' + encodeURIComponent($(element).val());\n                separator = '&';\n            });\n            $.mage.dataPost().postData(urlParams);\n        },\n\n        /**\n         * Toggle comment string.\n         * @private\n         * @param {Event} e\n         */\n        _focusComment: function (e) {\n            var commentInput = e.currentTarget;\n\n            if (commentInput.value === '' || commentInput.value === this.options.commentString) {\n                commentInput.value = commentInput.value === this.options.commentString ?\n                    '' : this.options.commentString;\n            }\n        }\n    });\n\n    // Extension for mage.wishlist - Select All checkbox\n    $.widget('mage.wishlist', $.mage.wishlist, {\n        options: {\n            selectAllCheckbox: '#select-all',\n            parentContainer: '#wishlist-table'\n        },\n\n        /** @inheritdoc */\n        _create: function () {\n            var selectAllCheckboxParent, checkboxCount;\n\n            this._super();\n            selectAllCheckboxParent = $(this.options.selectAllCheckbox).parents(this.options.parentContainer);\n            checkboxCount = selectAllCheckboxParent\n                .find('input:checkbox:not(' + this.options.selectAllCheckbox + ')').length;\n            // If Select all checkbox is checked, check all item checkboxes, if unchecked, uncheck all item checkboxes\n            $(this.options.selectAllCheckbox).on('click', function () {\n                selectAllCheckboxParent.find('input:checkbox').attr('checked', $(this).is(':checked'));\n            });\n            // If all item checkboxes are checked, check select all checkbox,\n            // if not all item checkboxes are checked, uncheck select all checkbox\n            selectAllCheckboxParent.on(\n                'click',\n                'input:checkbox:not(' + this.options.selectAllCheckbox + ')',\n                $.proxy(function () {\n                    var checkedCount = selectAllCheckboxParent\n                        .find('input:checkbox:checked:not(' + this.options.selectAllCheckbox + ')').length;\n\n                    $(this.options.selectAllCheckbox).attr('checked', checkboxCount === checkedCount);\n                }, this)\n            );\n        }\n    });\n    // Extension for mage.wishlist info add to cart\n    $.widget('mage.wishlist', $.mage.wishlist, {\n        /** @inheritdoc */\n        _create: function () {\n            this._super();\n\n            if (this.options.infoList) {\n                this.element.on('addToCart', $.proxy(function (event, context) {\n                    this.element.find('input:checkbox').attr('checked', false);\n                    $(context).closest('tr').find('input:checkbox').attr('checked', true);\n                    this.element.submit();\n                }, this));\n                this._checkBoxValidate();\n            }\n        },\n\n        /**\n         * validate checkbox selection.\n         * @private\n         */\n        _checkBoxValidate: function () {\n            this.element.validation({\n                submitHandler: $.proxy(function (form) {\n                    if ($(form).find('input:checkbox:checked').length) {\n                        form.submit();\n                    } else {\n                        alert({\n                            content: this.options.checkBoxValidationMessage\n                        });\n                    }\n                }, this)\n            });\n        }\n    });\n\n    // Extension for mage.wishlist - Add Wishlist item to Gift Registry\n    $.widget('mage.wishlist', $.mage.wishlist, {\n        options: {\n            formTmplSelector: '#form-tmpl',\n            formTmplId: '#wishlist-hidden-form'\n        },\n\n        /** @inheritdoc */\n        _create: function () {\n            var _this = this;\n\n            this._super();\n            this.element.on('click', '[data-wishlist-to-giftregistry]', function () {\n                var json = $(this).data('wishlist-to-giftregistry'),\n                    tmplJson = {\n                        item: json.itemId,\n                        entity: json.entity,\n                        url: json.url\n                    },\n                    html = mageTemplate(_this.options.formTmplSelector, {\n                        data: tmplJson\n                    });\n\n                $(html).appendTo('body');\n                $(_this.options.formTmplId).submit();\n            });\n        }\n    });\n\n    return $.mage.wishlist;\n});\n","Magento_Wishlist/js/product/addtowishlist-button.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Ui/js/grid/columns/column',\n    'Magento_Catalog/js/product/uenc-processor',\n    'Magento_Catalog/js/product/list/column-status-validator'\n], function (Element, uencProcessor, columnStatusValidator) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            label: ''\n        },\n\n        /**\n         * Get request POST data.\n         *\n         * @param {Object} row\n         * @return {String}\n         */\n        getDataPost: function (row) {\n            return uencProcessor(row['extension_attributes']['wishlist_button'].url);\n        },\n\n        /**\n         * Check if component must be shown.\n         *\n         * @return {Boolean}\n         */\n        isAllowed: function () {\n            return columnStatusValidator.isValid(this.source(), 'add_to_wishlist', 'show_buttons');\n        },\n\n        /**\n         * Get button label.\n         *\n         * @return {String}\n         */\n        getLabel: function () {\n            return this.label;\n        }\n    });\n});\n","Magento_Wishlist/js/view/wishlist.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'uiComponent',\n    'Magento_Customer/js/customer-data'\n], function (Component, customerData) {\n    'use strict';\n\n    return Component.extend({\n        /** @inheritdoc */\n        initialize: function () {\n            this._super();\n\n            this.wishlist = customerData.get('wishlist');\n        }\n    });\n});\n","Magento_SendFriend/requirejs-config.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\nvar config = {\n    map: {\n        '*': {\n            'Magento_SendFriend/back-event': 'Magento_SendFriend/js/back-event'\n        }\n    }\n};\n","Magento_SendFriend/js/back-event.js":"/**\n* Copyright \u00a9 Magento, Inc. All rights reserved.\n* See COPYING.txt for license details.\n*/\n\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    return function (config, element) {\n        $(element).on('click', function () {\n            history.back();\n\n            return false;\n        });\n    };\n});\n","Magento_Tax/js/price/adjustment.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Ui/js/grid/columns/column',\n    'mage/translate'\n], function (Element, $t) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            bodyTmpl: 'Magento_Tax/price/adjustment',\n            taxPriceType: 'final_price',\n            taxPriceCssClass: 'price-including-tax',\n            bothPrices: 3,\n            inclTax: 2,\n            exclTax: 1,\n            modules: {\n                price: '${ $.parentName }'\n            },\n            listens: {\n                price: 'initializePriceAttributes'\n            }\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        initialize: function () {\n            this._super()\n                .initializePriceAttributes();\n\n            return this;\n        },\n\n        /**\n         * Update parent price.\n         *\n         * @returns {Object} Chainable.\n         */\n        initializePriceAttributes: function () {\n            if (this.displayBothPrices && this.price()) {\n                this.price().priceWrapperCssClasses = this.taxPriceCssClass;\n                this.price().priceWrapperAttr = {\n                    'data-label': $t('Incl. Tax')\n                };\n            }\n\n            return this;\n        },\n\n        /**\n         * Get price tax adjustment.\n         *\n         * @param {Object} row\n         * @return {HTMLElement} tax html\n         */\n        getTax: function (row) {\n            return row['price_info']['extension_attributes']['tax_adjustments']['formatted_prices'][this.taxPriceType];\n        },\n\n        /**\n         * Set price tax type.\n         *\n         * @param {String} priceType\n         * @return {Object}\n         */\n        setPriceType: function (priceType) {\n            this.taxPriceType = priceType;\n\n            return this;\n        },\n\n        /**\n         * Return whether display setting is to display\n         * both price including tax and price excluding tax.\n         *\n         * @return {Boolean}\n         */\n        displayBothPrices: function () {\n            return +this.source.data.displayTaxes === this.bothPrices;\n        },\n\n        /**\n         * Return whether display setting is to display price including tax.\n         *\n         * @return {Boolean}\n         */\n        displayPriceIncludeTax: function () {\n            return +this.source.data.displayTaxes === this.inclTax;\n        },\n\n        /**\n         * Return whether display setting is to display price excluding tax.\n         *\n         * @return {Boolean}\n         */\n        displayPriceExclTax: function () {\n            return +this.source.data.displayTaxes === this.exclTax;\n        }\n    });\n});\n","Magento_Tax/js/view/checkout/summary/shipping.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'jquery',\n    'Magento_Checkout/js/view/summary/shipping',\n    'Magento_Checkout/js/model/quote'\n], function ($, Component, quote) {\n    'use strict';\n\n    var displayMode = window.checkoutConfig.reviewShippingDisplayMode;\n\n    return Component.extend({\n        defaults: {\n            displayMode: displayMode,\n            template: 'Magento_Tax/checkout/summary/shipping'\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        isBothPricesDisplayed: function () {\n            return this.displayMode == 'both'; //eslint-disable-line eqeqeq\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        isIncludingDisplayed: function () {\n            return this.displayMode == 'including'; //eslint-disable-line eqeqeq\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        isExcludingDisplayed: function () {\n            return this.displayMode == 'excluding'; //eslint-disable-line eqeqeq\n        },\n\n        /**\n         * @return {*|Boolean}\n         */\n        isCalculated: function () {\n            return this.totals() && this.isFullMode() && quote.shippingMethod() != null;\n        },\n\n        /**\n         * @return {*}\n         */\n        getIncludingValue: function () {\n            var price;\n\n            if (!this.isCalculated()) {\n                return this.notCalculatedMessage;\n            }\n            price = this.totals()['shipping_incl_tax'];\n\n            return this.getFormattedPrice(price);\n        },\n\n        /**\n         * @return {*}\n         */\n        getExcludingValue: function () {\n            var price;\n\n            if (!this.isCalculated()) {\n                return this.notCalculatedMessage;\n            }\n            price = this.totals()['shipping_amount'];\n\n            return this.getFormattedPrice(price);\n        }\n    });\n});\n","Magento_Tax/js/view/checkout/summary/grand-total.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'Magento_Checkout/js/view/summary/abstract-total',\n    'Magento_Checkout/js/model/quote',\n    'Magento_Catalog/js/price-utils',\n    'Magento_Checkout/js/model/totals'\n], function (Component, quote, priceUtils, totals) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            isFullTaxSummaryDisplayed: window.checkoutConfig.isFullTaxSummaryDisplayed || false,\n            template: 'Magento_Tax/checkout/summary/grand-total'\n        },\n        totals: quote.getTotals(),\n        isTaxDisplayedInGrandTotal: window.checkoutConfig.includeTaxInGrandTotal || false,\n\n        /**\n         * @return {*}\n         */\n        isDisplayed: function () {\n            return this.isFullMode();\n        },\n\n        /**\n         * @return {*|String}\n         */\n        getValue: function () {\n            var price = 0;\n\n            if (this.totals()) {\n                price = totals.getSegment('grand_total').value;\n            }\n\n            return this.getFormattedPrice(price);\n        },\n\n        /**\n         * @return {*|String}\n         */\n        getBaseValue: function () {\n            var price = 0;\n\n            if (this.totals()) {\n                price = this.totals()['base_grand_total'];\n            }\n\n            return priceUtils.formatPrice(price, quote.getBasePriceFormat());\n        },\n\n        /**\n         * @return {*}\n         */\n        getGrandTotalExclTax: function () {\n            var total = this.totals();\n\n            if (!total) {\n                return 0;\n            }\n\n            return this.getFormattedPrice(total['grand_total']);\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        isBaseGrandTotalDisplayNeeded: function () {\n            var total = this.totals();\n\n            if (!total) {\n                return false;\n            }\n\n            return total['base_currency_code'] != total['quote_currency_code']; //eslint-disable-line eqeqeq\n        }\n    });\n});\n","Magento_Tax/js/view/checkout/summary/tax.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'ko',\n    'Magento_Checkout/js/view/summary/abstract-total',\n    'Magento_Checkout/js/model/quote',\n    'Magento_Checkout/js/model/totals',\n    'mage/translate',\n    'underscore'\n], function (ko, Component, quote, totals, $t, _) {\n    'use strict';\n\n    var isTaxDisplayedInGrandTotal = window.checkoutConfig.includeTaxInGrandTotal,\n        isFullTaxSummaryDisplayed = window.checkoutConfig.isFullTaxSummaryDisplayed,\n        isZeroTaxDisplayed = window.checkoutConfig.isZeroTaxDisplayed,\n        taxAmount = 0,\n        rates = 0;\n\n    return Component.extend({\n        defaults: {\n            isTaxDisplayedInGrandTotal: isTaxDisplayedInGrandTotal,\n            notCalculatedMessage: $t('Not yet calculated'),\n            template: 'Magento_Tax/checkout/summary/tax'\n        },\n        totals: quote.getTotals(),\n        isFullTaxSummaryDisplayed: isFullTaxSummaryDisplayed,\n\n        /**\n         * @return {Boolean}\n         */\n        ifShowValue: function () {\n            if (this.isFullMode() && this.getPureValue() == 0) { //eslint-disable-line eqeqeq\n                return isZeroTaxDisplayed;\n            }\n\n            return true;\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        ifShowDetails: function () {\n            if (!this.isFullMode()) {\n                return false;\n            }\n\n            return this.getPureValue() > 0 && isFullTaxSummaryDisplayed;\n        },\n\n        /**\n         * @return {Number}\n         */\n        getPureValue: function () {\n            var amount = 0,\n                taxTotal;\n\n            if (this.totals()) {\n                taxTotal = totals.getSegment('tax');\n\n                if (taxTotal) {\n                    amount = taxTotal.value;\n                }\n            }\n\n            return amount;\n        },\n\n        /**\n         * @return {*|Boolean}\n         */\n        isCalculated: function () {\n            return this.totals() && this.isFullMode() && totals.getSegment('tax') != null;\n        },\n\n        /**\n         * @return {*}\n         */\n        getValue: function () {\n            var amount;\n\n            if (!this.isCalculated()) {\n                return this.notCalculatedMessage;\n            }\n            amount = totals.getSegment('tax').value;\n\n            return this.getFormattedPrice(amount);\n        },\n\n        /**\n         * @param {*} amount\n         * @return {*|String}\n         */\n        formatPrice: function (amount) {\n            return this.getFormattedPrice(amount);\n        },\n\n        /**\n         * @param {*} parent\n         * @param {*} percentage\n         * @return {*|String}\n         */\n        getTaxAmount: function (parent, percentage) {\n            var totalPercentage = 0;\n\n            taxAmount = parent.amount;\n            rates = parent.rates;\n            _.each(rates, function (rate) {\n                totalPercentage += parseFloat(rate.percent);\n            });\n\n            return this.getFormattedPrice(this.getPercentAmount(taxAmount, totalPercentage, percentage));\n        },\n\n        /**\n         * @param {*} amount\n         * @param {*} totalPercentage\n         * @param {*} percentage\n         * @return {*|String}\n         */\n        getPercentAmount: function (amount, totalPercentage, percentage) {\n            return parseFloat(amount * percentage / totalPercentage);\n        },\n\n        /**\n         * @return {Array}\n         */\n        getDetails: function () {\n            var taxSegment = totals.getSegment('tax');\n\n            if (taxSegment && taxSegment['extension_attributes']) {\n                return taxSegment['extension_attributes']['tax_grandtotal_details'];\n            }\n\n            return [];\n        }\n    });\n});\n","Magento_Tax/js/view/checkout/summary/subtotal.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'Magento_Checkout/js/view/summary/abstract-total',\n    'Magento_Checkout/js/model/quote'\n], function (Component, quote) {\n    'use strict';\n\n    var displaySubtotalMode = window.checkoutConfig.reviewTotalsDisplayMode;\n\n    return Component.extend({\n        defaults: {\n            displaySubtotalMode: displaySubtotalMode,\n            template: 'Magento_Tax/checkout/summary/subtotal'\n        },\n        totals: quote.getTotals(),\n\n        /**\n         * @return {*|String}\n         */\n        getValue: function () {\n            var price = 0;\n\n            if (this.totals()) {\n                price = this.totals().subtotal;\n            }\n\n            return this.getFormattedPrice(price);\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        isBothPricesDisplayed: function () {\n            return this.displaySubtotalMode == 'both'; //eslint-disable-line eqeqeq\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        isIncludingTaxDisplayed: function () {\n            return this.displaySubtotalMode == 'including'; //eslint-disable-line eqeqeq\n        },\n\n        /**\n         * @return {*|String}\n         */\n        getValueInclTax: function () {\n            var price = 0;\n\n            if (this.totals()) {\n                price = this.totals()['subtotal_incl_tax'];\n            }\n\n            return this.getFormattedPrice(price);\n        }\n    });\n});\n","Magento_Tax/js/view/checkout/summary/item/details/subtotal.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'Magento_Checkout/js/view/summary/item/details/subtotal'\n], function (subtotal) {\n    'use strict';\n\n    var displayPriceMode = window.checkoutConfig.reviewItemPriceDisplayMode || 'including';\n\n    return subtotal.extend({\n        defaults: {\n            displayPriceMode: displayPriceMode,\n            template: 'Magento_Tax/checkout/summary/item/details/subtotal'\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        isPriceInclTaxDisplayed: function () {\n            return displayPriceMode == 'both' || displayPriceMode == 'including'; //eslint-disable-line eqeqeq\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        isPriceExclTaxDisplayed: function () {\n            return displayPriceMode == 'both' || displayPriceMode == 'excluding'; //eslint-disable-line eqeqeq\n        },\n\n        /**\n         * @param {Object} quoteItem\n         * @return {*|String}\n         */\n        getValueInclTax: function (quoteItem) {\n            return this.getFormattedPrice(quoteItem['row_total_incl_tax']);\n        },\n\n        /**\n         * @param {Object} quoteItem\n         * @return {*|String}\n         */\n        getValueExclTax: function (quoteItem) {\n            return this.getFormattedPrice(quoteItem['row_total']);\n        }\n\n    });\n});\n","Magento_Tax/js/view/checkout/shipping_method/price.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'uiComponent',\n    'Magento_Checkout/js/model/quote',\n    'Magento_Catalog/js/price-utils'\n], function (Component, quote, priceUtils) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_Tax/checkout/shipping_method/price'\n        },\n        isDisplayShippingPriceExclTax: window.checkoutConfig.isDisplayShippingPriceExclTax,\n        isDisplayShippingBothPrices: window.checkoutConfig.isDisplayShippingBothPrices,\n\n        /**\n         * @param {Object} item\n         * @return {Boolean}\n         */\n        isPriceEqual: function (item) {\n            return item['price_excl_tax'] != item['price_incl_tax']; //eslint-disable-line eqeqeq\n        },\n\n        /**\n         * @param {*} price\n         * @return {*|String}\n         */\n        getFormattedPrice: function (price) {\n            //todo add format data\n            return priceUtils.formatPrice(price, quote.getPriceFormat());\n        }\n    });\n});\n","Magento_Tax/js/view/checkout/cart/totals/shipping.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'Magento_Tax/js/view/checkout/summary/shipping',\n    'Magento_Checkout/js/model/quote'\n], function (Component, quote) {\n    'use strict';\n\n    return Component.extend({\n        /**\n         * @override\n         */\n        isCalculated: function () {\n            return !!quote.shippingMethod();\n        },\n\n        /**\n         * @override\n         */\n        getShippingMethodTitle: function () {\n            return '(' + this._super() + ')';\n        }\n    });\n});\n","Magento_Tax/js/view/checkout/cart/totals/grand-total.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'Magento_Tax/js/view/checkout/summary/grand-total'\n], function (Component) {\n    'use strict';\n\n    return Component.extend({\n        /**\n         * @override\n         */\n        isDisplayed: function () {\n            return true;\n        }\n    });\n});\n","Magento_Tax/js/view/checkout/cart/totals/tax.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'Magento_Tax/js/view/checkout/summary/tax',\n    'Magento_Checkout/js/model/totals'\n], function (Component, totals) {\n    'use strict';\n\n    var isFullTaxSummaryDisplayed = window.checkoutConfig.isFullTaxSummaryDisplayed,\n        isZeroTaxDisplayed = window.checkoutConfig.isZeroTaxDisplayed;\n\n    return Component.extend({\n        /**\n         * @override\n         */\n        ifShowValue: function () {\n            if (this.getPureValue() === 0) {\n                return isZeroTaxDisplayed;\n            }\n\n            return true;\n        },\n\n        /**\n         * @override\n         */\n        ifShowDetails: function () {\n            return this.getPureValue() > 0 && isFullTaxSummaryDisplayed;\n        },\n\n        /**\n         * @override\n         */\n        isCalculated: function () {\n            return this.totals() && totals.getSegment('tax') !== null;\n        }\n    });\n});\n","Magento_Tax/js/view/checkout/minicart/subtotal/totals.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'ko',\n    'uiComponent',\n    'Magento_Customer/js/customer-data'\n], function (ko, Component, customerData) {\n    'use strict';\n\n    return Component.extend({\n        displaySubtotal: ko.observable(true),\n\n        /**\n         * @override\n         */\n        initialize: function () {\n            this._super();\n            this.cart = customerData.get('cart');\n        }\n    });\n});\n","Magento_Variable/js/grid/columns/radioselect.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'mage/translate',\n    'Magento_Ui/js/grid/columns/column',\n    'jquery'\n], function (_, $t, Column, jQuery) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'Magento_Variable/grid/cells/radioselect',\n            draggable: false,\n            sortable: false,\n            selectedVariableCode: null,\n            selectedVariableType: null\n        },\n\n        /**\n         * Calls 'initObservable' of parent\n         *\n         * @returns {Object} Chainable.\n         */\n        initObservable: function () {\n            this._super().observe(['selectedVariableCode']);\n\n            return this;\n        },\n\n        /**\n         * Remove disable class from Insert Variable button after Variable has been chosen.\n         *\n         * @return {Boolean}\n         */\n        selectVariable: function () {\n            if (jQuery('#insert_variable').hasClass('disabled')) {\n                jQuery('#insert_variable').removeClass('disabled');\n            }\n\n            return true;\n        }\n    });\n});\n","magnifier/magnifier.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n(function ($) {\n    $.fn.magnify = function (options) {\n        'use strict';\n\n        var magnify = new Magnify($(this), options);\n\n        /* events must be tracked here */\n\n        /**\n         * Return that from _init function\n         *\n         */\n        return magnify;\n    };\n\n    function Magnify(element, options) {\n        var customUserOptions = options || {},\n            $box = $(element),\n            $thumb,\n            that = this,\n            largeWrapper = options.largeWrapper || '.magnifier-preview',\n            $magnifierPreview = $(largeWrapper);\n\n        curThumb = null,\n        magnifierOptions = {\n            x: 0,\n            y: 0,\n            w: 0,\n            h: 0,\n            lensW: 0,\n            lensH: 0,\n            lensBgX: 0,\n            lensBgY: 0,\n            largeW: 0,\n            largeH: 0,\n            largeL: 0,\n            largeT: 0,\n            zoom: 2,\n            zoomMin: 1.1,\n            zoomMax: 5,\n            mode: 'outside',\n            eventType: 'click',\n            status: 0,\n            zoomAttached: false,\n            zoomable: customUserOptions.zoomable !== undefined ?\n                customUserOptions.zoomable\n                : false,\n            onthumbenter: customUserOptions.onthumbenter !== undefined ?\n                customUserOptions.onthumbenter\n                : null,\n            onthumbmove: customUserOptions.onthumbmove !== undefined ?\n                customUserOptions.onthumbmove\n                : null,\n            onthumbleave: customUserOptions.onthumbleave !== undefined ?\n                customUserOptions.onthumbleave\n                : null,\n            onzoom: customUserOptions.onzoom !== undefined ?\n                customUserOptions.onzoom\n                : null\n        },\n        pos = {\n            t: 0,\n            l: 0,\n            x: 0,\n            y: 0\n        },\n        gId = 0,\n        status = 0,\n        curIdx = '',\n        curLens = null,\n        curLarge = null,\n        lensbg = customUserOptions.bg !== undefined ?\n            customUserOptions.lensbg\n            : true,\n        gZoom = customUserOptions.zoom !== undefined ?\n            customUserOptions.zoom\n            : magnifierOptions.zoom,\n        gZoomMin = customUserOptions.zoomMin !== undefined ?\n            customUserOptions.zoomMin\n            : magnifierOptions.zoomMin,\n        gZoomMax = customUserOptions.zoomMax !== undefined ?\n            customUserOptions.zoomMax\n            : magnifierOptions.zoomMax,\n        gMode = customUserOptions.mode || magnifierOptions.mode,\n        gEventType = customUserOptions.eventType || magnifierOptions.eventType,\n        data = {},\n        inBounds = false,\n        isOverThumb = false,\n        rate = 1,\n        paddingX = 0,\n        paddingY = 0,\n        enabled = true,\n        showWrapper = true;\n\n        var MagnifyCls = {\n            magnifyHidden: 'magnify-hidden',\n            magnifyOpaque: 'magnify-opaque',\n            magnifyFull: 'magnify-fullimage'\n        };\n\n        /**\n         * Update Lens positon on.\n         *\n         */\n        that.update = function () {\n            updateLensOnLoad();\n        };\n\n        /**\n         * Init new Magnifier\n         *\n         */\n        that.init = function () {\n            _init($box, options);\n        };\n\n        function _toBoolean(str) {\n            if (typeof str === 'string') {\n                if (str === 'true') {\n                    return true;\n                } else if (str === 'false' || '') {\n                    return false;\n                }\n                console.warn('Wrong type: can\\'t be transformed to Boolean');\n\n            } else if (typeof str === 'boolean') {\n                return str;\n            }\n        }\n\n        function createLens(thumb) {\n            if ($(thumb).siblings('.magnify-lens').length) {\n                return false;\n            }\n            var lens = $('<div class=\"magnify-lens magnify-hidden\" data-gallery-role=\"magnifier-zoom\"></div>');\n\n            $(thumb).parent().append(lens);\n        }\n\n        function updateLensOnLoad(idSelectorMainImg, thumb, largeImgInMagnifyLens, largeWrapper) {\n            var magnifyLensElement= $box.find('.magnify-lens'),\n                textWrapper;\n\n            if (data[idSelectorMainImg].status === 1) {\n                textWrapper = $('<div class=\"magnifier-loader-text\"></div>');\n                magnifyLensElement.className = 'magnifier-loader magnify-hidden';\n                textWrapper.html('Loading...');\n                magnifyLensElement.html('').append(textWrapper);\n            } else if (data[idSelectorMainImg].status === 2) {\n                magnifyLensElement.addClass(MagnifyCls.magnifyHidden);\n                magnifyLensElement.html('');\n\n                largeImgInMagnifyLens.id = idSelectorMainImg + '-large';\n                largeImgInMagnifyLens.style.width = data[idSelectorMainImg].largeImgInMagnifyLensWidth + 'px';\n                largeImgInMagnifyLens.style.height = data[idSelectorMainImg].largeImgInMagnifyLensHeight + 'px';\n                largeImgInMagnifyLens.className = 'magnifier-large magnify-hidden';\n\n                if (data[idSelectorMainImg].mode === 'inside') {\n                    magnifyLensElement.append(largeImgInMagnifyLens);\n                } else {\n                    largeWrapper.html('').append(largeImgInMagnifyLens);\n                }\n            }\n\n            data[idSelectorMainImg].lensH = data[idSelectorMainImg].lensH > $thumb.height() ? $thumb.height() : data[idSelectorMainImg].lensH;\n\n            if (Math.round(data[idSelectorMainImg].lensW) === 0) {\n                magnifyLensElement.css('display', 'none');\n            } else {\n                magnifyLensElement.css({\n                    width: Math.round(data[idSelectorMainImg].lensW) + 'px',\n                    height: Math.round(data[idSelectorMainImg].lensH) + 'px',\n                    display: ''\n                });\n            }\n        }\n\n        function getMousePos() {\n            var xPos = pos.x - magnifierOptions.x,\n                yPos = pos.y - magnifierOptions.y,\n                t,\n                l;\n\n            inBounds =  xPos < 0 || yPos < 0 || xPos > magnifierOptions.w || yPos > magnifierOptions.h  ? false : true;\n\n            l = xPos - magnifierOptions.lensW / 2;\n            t = yPos - magnifierOptions.lensH / 2;\n\n            if (xPos < magnifierOptions.lensW / 2) {\n                l = 0;\n            }\n\n            if (yPos < magnifierOptions.lensH / 2) {\n                t = 0;\n            }\n\n            if (xPos - magnifierOptions.w + Math.ceil(magnifierOptions.lensW / 2) > 0) {\n                l = magnifierOptions.w - Math.ceil(magnifierOptions.lensW + 2);\n            }\n\n            if (yPos - magnifierOptions.h + Math.ceil(magnifierOptions.lensH / 2) > 0) {\n                t = magnifierOptions.h - Math.ceil(magnifierOptions.lensH);\n            }\n\n            pos.l = l;\n            pos.t = t;\n\n            magnifierOptions.lensBgX = pos.l;\n            magnifierOptions.lensBgY = pos.t;\n\n            if (magnifierOptions.mode === 'inside') {\n                magnifierOptions.largeL = Math.round(xPos * (magnifierOptions.zoom - magnifierOptions.lensW / magnifierOptions.w));\n                magnifierOptions.largeT = Math.round(yPos * (magnifierOptions.zoom - magnifierOptions.lensH / magnifierOptions.h));\n            } else {\n                magnifierOptions.largeL = Math.round(magnifierOptions.lensBgX * magnifierOptions.zoom * (magnifierOptions.largeWrapperW / magnifierOptions.w));\n                magnifierOptions.largeT = Math.round(magnifierOptions.lensBgY * magnifierOptions.zoom * (magnifierOptions.largeWrapperH / magnifierOptions.h));\n            }\n        }\n\n        function onThumbEnter() {\n            if (_toBoolean(enabled)) {\n                magnifierOptions = data[curIdx];\n                curLens = $box.find('.magnify-lens');\n\n                if (magnifierOptions.status === 2) {\n                    curLens.removeClass(MagnifyCls.magnifyOpaque);\n                    curLarge = $('#' + curIdx + '-large');\n                    curLarge.removeClass(MagnifyCls.magnifyHidden);\n                } else if (magnifierOptions.status === 1) {\n                    curLens.className = 'magnifier-loader';\n                }\n            }\n        }\n\n        function onThumbLeave() {\n            if (magnifierOptions.status > 0) {\n                var handler = magnifierOptions.onthumbleave;\n\n                if (handler !== null) {\n                    handler({\n                        thumb: curThumb,\n                        lens: curLens,\n                        large: curLarge,\n                        x: pos.x,\n                        y: pos.y\n                    });\n                }\n\n                if (!curLens.hasClass(MagnifyCls.magnifyHidden)) {\n                    curLens.addClass(MagnifyCls.magnifyHidden);\n\n                    //$curThumb.removeClass(MagnifyCls.magnifyOpaque);\n                    if (curLarge !== null) {\n                        curLarge.addClass(MagnifyCls.magnifyHidden);\n                    }\n                }\n            }\n        }\n\n        function move() {\n            if (_toBoolean(enabled)) {\n                if (status !== magnifierOptions.status) {\n                    onThumbEnter();\n                }\n\n                if (magnifierOptions.status > 0) {\n                    curThumb.className = magnifierOptions.thumbCssClass + ' magnify-opaque';\n\n                    if (magnifierOptions.status === 1) {\n                        curLens.className = 'magnifier-loader';\n                    } else if (magnifierOptions.status === 2) {\n                        curLens.removeClass(MagnifyCls.magnifyHidden);\n                        curLarge.removeClass(MagnifyCls.magnifyHidden);\n                        curLarge.css({\n                            left: '-' + magnifierOptions.largeL + 'px',\n                            top: '-' + magnifierOptions.largeT + 'px'\n                        });\n                    }\n\n                    var borderOffset = 2; // Offset for magnify-lens border\n                    pos.t = pos.t <= 0 ? 0 : pos.t - borderOffset;\n\n                    curLens.css({\n                        left: pos.l + paddingX + 'px',\n                        top: pos.t + paddingY + 'px'\n                    });\n\n                    if (lensbg) {\n                        curLens.css({\n                            'background-color': 'rgba(f,f,f,.5)'\n                        });\n                    } else {\n                        curLens.get(0).style.backgroundPosition = '-' +\n                        magnifierOptions.lensBgX + 'px -' +\n                        magnifierOptions.lensBgY + 'px';\n                    }\n                    var handler = magnifierOptions.onthumbmove;\n\n                    if (handler !== null) {\n                        handler({\n                            thumb: curThumb,\n                            lens: curLens,\n                            large: curLarge,\n                            x: pos.x,\n                            y: pos.y\n                        });\n                    }\n                }\n\n                status = magnifierOptions.status;\n            }\n        }\n\n        function setThumbData(mainImage, mainImageData) {\n            var thumbBounds = mainImage.getBoundingClientRect(),\n                w = 0,\n                h = 0;\n\n            mainImageData.x = Math.round(thumbBounds.left);\n            mainImageData.y = Math.round(thumbBounds.top);\n            mainImageData.w = Math.round(thumbBounds.right - mainImageData.x);\n            mainImageData.h = Math.round(thumbBounds.bottom - mainImageData.y);\n\n            if (mainImageData.mode === 'inside') {\n                w = mainImageData.w;\n                h = mainImageData.h;\n            } else {\n                w = mainImageData.largeWrapperW;\n                h = mainImageData.largeWrapperH;\n            }\n\n            mainImageData.largeImgInMagnifyLensWidth = Math.round(mainImageData.zoom * w);\n            mainImageData.largeImgInMagnifyLensHeight = Math.round(mainImageData.zoom * h);\n\n            mainImageData.lensW = Math.round(mainImageData.w / mainImageData.zoom);\n            mainImageData.lensH = Math.round(mainImageData.h / mainImageData.zoom);\n        }\n\n        function _init($box, options) {\n            var opts = {};\n\n            if (options.thumb === undefined) {\n                return false;\n            }\n\n            $thumb = $box.find(options.thumb);\n\n            if ($thumb.length) {\n                for (var key in options) {\n                    opts[key] = options[key];\n                }\n\n                opts.thumb = $thumb;\n                enabled = opts.enabled;\n\n                if (_toBoolean(enabled)) {\n\n                    $magnifierPreview.show().css('display', '');\n                    $magnifierPreview.addClass(MagnifyCls.magnifyHidden);\n                    set(opts);\n                } else {\n                    $magnifierPreview.empty().hide();\n                }\n            }\n\n            return that;\n        }\n\n        function hoverEvents(thumb) {\n            $(thumb).on('mouseover', function (e) {\n\n                if (showWrapper) {\n\n                    if (magnifierOptions.status !== 0) {\n                        onThumbLeave();\n                    }\n                    handleEvents(e);\n                    isOverThumb = inBounds;\n                }\n            }).trigger('mouseover');\n        }\n\n        function clickEvents(thumb) {\n            $(thumb).on('click', function (e) {\n\n                if (showWrapper) {\n                    if (!isOverThumb) {\n                        if (magnifierOptions.status !== 0) {\n                            onThumbLeave();\n                        }\n                        handleEvents(e);\n                        isOverThumb = true;\n                    }\n                }\n            });\n        }\n\n        function bindEvents(eType, thumb) {\n            switch (eType) {\n                case 'hover':\n                    hoverEvents(thumb);\n                    break;\n\n                case 'click':\n                    clickEvents(thumb);\n                    break;\n            }\n        }\n\n        function handleEvents(e) {\n            var src = e.target;\n\n            curIdx = src.id;\n            curThumb = src;\n\n            onThumbEnter(src);\n\n            setThumbData(curThumb, magnifierOptions);\n\n            pos.x = e.clientX;\n            pos.y = e.clientY;\n\n            getMousePos();\n            move();\n\n            var handler = magnifierOptions.onthumbenter;\n\n            if (handler !== null) {\n                handler({\n                    thumb: curThumb,\n                    lens: curLens,\n                    large: curLarge,\n                    x: pos.x,\n                    y: pos.y\n                });\n            }\n        }\n\n        function set(options) {\n            if (data[options.thumb.id] !== undefined) {\n                curThumb = options.thumb;\n\n                return false;\n            }\n\n            var thumbObj = new Image(),\n                largeObj = new Image(),\n                $thumb = options.thumb,\n                thumb = $thumb.get(0),\n                idx = thumb.id,\n                largeUrl,\n                largeWrapper = $(options.largeWrapper),\n                zoom = options.zoom || thumb.getAttribute('data-zoom') || gZoom,\n                zoomMin = options.zoomMin || gZoomMin,\n                zoomMax = options.zoomMax || gZoomMax,\n                mode = options.mode || thumb.getAttribute('data-mode') || gMode,\n                eventType = options.eventType || thumb.getAttribute('data-eventType') || gEventType,\n                onthumbenter = options.onthumbenter !== undefined ?\n                    options.onthumbenter\n                    : magnifierOptions.onthumbenter,\n                onthumbleave = options.onthumbleave !== undefined ?\n                    options.onthumbleave\n                    : magnifierOptions.onthumbleave,\n                onthumbmove = options.onthumbmove !== undefined ?\n                    options.onthumbmove\n                    : magnifierOptions.onthumbmove;\n\n            largeUrl = $thumb.data('original') || customUserOptions.full || $thumb.attr('src');\n\n            if (thumb.id === '') {\n                idx = thumb.id = 'magnifier-item-' + gId;\n                gId += 1;\n            }\n\n            createLens(thumb, idx);\n\n            if (options.width) {\n                largeWrapper.width(options.width);\n            }\n\n            if (options.height) {\n                largeWrapper.height(options.height);\n            }\n\n            if (options.top) {\n                if (typeof options.top == 'function') {\n                    var top = options.top() + 'px';\n                } else {\n                    var top = options.top + 'px';\n                }\n\n                if (largeWrapper.length) {\n                    largeWrapper[0].style.top = top.replace('%px', '%');\n                }\n            }\n\n            if (options.left) {\n                if (typeof options.left == 'function') {\n                    var left = options.left() + 'px';\n                } else {\n                    var left = options.left + 'px';\n                }\n\n                if (largeWrapper.length) {\n                    largeWrapper[0].style.left = left.replace('%px', '%');\n                }\n            }\n\n            data[idx] = {\n                zoom: zoom,\n                zoomMin: zoomMin,\n                zoomMax: zoomMax,\n                mode: mode,\n                eventType: eventType,\n                thumbCssClass: thumb.className,\n                zoomAttached: false,\n                status: 0,\n                largeUrl: largeUrl,\n                largeWrapperId: mode === 'outside' ? largeWrapper.attr('id') : null,\n                largeWrapperW: mode === 'outside' ? largeWrapper.width() : null,\n                largeWrapperH: mode === 'outside' ? largeWrapper.height() : null,\n                onthumbenter: onthumbenter,\n                onthumbleave: onthumbleave,\n                onthumbmove: onthumbmove\n            };\n\n            paddingX = ($thumb.parent().width() - $thumb.width()) / 2;\n            paddingY = ($thumb.parent().height() - $thumb.height()) / 2;\n\n            showWrapper = false;\n            $(thumbObj).on('load', function () {\n                data[idx].status = 1;\n\n                $(largeObj).on('load', function () {\n\n                    if (largeObj.width > largeWrapper.width() || largeObj.height > largeWrapper.height()) {\n                        showWrapper = true;\n                        bindEvents(eventType, thumb);\n                        data[idx].status = 2;\n                        if (largeObj.width > largeObj.height) {\n                            data[idx].zoom = largeObj.width / largeWrapper.width();\n                        } else {\n                            data[idx].zoom = largeObj.height / largeWrapper.height();\n                        }\n                        setThumbData(thumb, data[idx]);\n                        updateLensOnLoad(idx, thumb, largeObj, largeWrapper);\n                    }\n                });\n\n                largeObj.src = data[idx].largeUrl;\n            });\n\n            thumbObj.src = thumb.src;\n        }\n\n        /**\n         * Hide magnifier when mouse exceeds image bounds.\n         */\n        function onMouseLeave() {\n            onThumbLeave();\n            isOverThumb = false;\n            $magnifierPreview.addClass(MagnifyCls.magnifyHidden);\n        }\n\n        function onMousemove(e) {\n            pos.x = e.clientX;\n            pos.y = e.clientY;\n\n            getMousePos();\n\n            if (gEventType === 'hover') {\n                isOverThumb = inBounds;\n            }\n\n            if (inBounds && isOverThumb) {\n                if (gMode === 'outside') {\n                    $magnifierPreview.removeClass(MagnifyCls.magnifyHidden);\n                }\n                move();\n            }\n        }\n\n        function onScroll() {\n            if (curThumb !== null) {\n                setThumbData(curThumb, magnifierOptions);\n            }\n        }\n\n        $(window).on('scroll', onScroll);\n        $(window).resize(function () {\n            _init($box, customUserOptions);\n        });\n\n        $box.on('mousemove', onMousemove);\n        $box.on('mouseleave', onMouseLeave);\n\n        _init($box, customUserOptions);\n    }\n}(jQuery));\n","magnifier/magnify.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'underscore',\n    'magnifier/magnifier'\n], function ($, _) {\n    'use strict';\n\n    return function (config, element) {\n\n        var isTouchEnabled = 'ontouchstart' in document.documentElement,\n            gallerySelector = '[data-gallery-role=\"gallery\"]',\n            magnifierSelector = '[data-gallery-role=\"magnifier\"]',\n            magnifierZoomSelector = '[data-gallery-role=\"magnifier-zoom\"]',\n            zoomInButtonSelector = '[data-gallery-role=\"fotorama__zoom-in\"]',\n            zoomOutButtonSelector = '[data-gallery-role=\"fotorama__zoom-out\"]',\n            fullscreenImageSelector = '[data-gallery-role=\"stage-shaft\"] [data-active=\"true\"] .fotorama__img--full',\n            imageDraggableClass = 'fotorama__img--draggable',\n            imageZoommable = 'fotorama__img--zoommable',\n            zoomInLoaded = 'zoom-in-loaded',\n            zoomOutLoaded = 'zoom-out-loaded',\n            zoomInDisabled = 'fotorama__zoom-in--disabled',\n            zoomOutDisabled = 'fotorama__zoom-out--disabled',\n            keyboardNavigation,\n            videoContainerClass = 'fotorama-video-container',\n            hideMagnifier,\n            dragFlag,\n            endX,\n            transitionEnabled,\n            transitionActive = false,\n            tapFlag = 0,\n            allowZoomOut = false,\n            allowZoomIn = true;\n\n        (function () {\n            var style = document.documentElement.style,\n                transitionEnabled = style.transition !== undefined ||\n                style.WebkitTransition !== undefined ||\n                style.MozTransition !== undefined ||\n                style.MsTransition !== undefined ||\n                style.OTransition !== undefined;\n        })();\n\n        /**\n         * Return width and height of original image\n         * @param img original image node\n         * @returns {{rw: number, rh: number}}\n         */\n        function getImageSize(img) {\n            return {\n                rw: img.naturalWidth,\n                rh: img.naturalHeight\n            };\n        }\n\n        /**\n         * Sets min-height and min-width for image to avoid transition bug\n         * @param $image - fullscreen image\n         */\n        function calculateMinSize($image) {\n\n            var minHeight,\n                minWidth,\n                height = $image.height(),\n                width = $image.width(),\n                parentHeight = $image.parent().height(),\n                parentWidth = $image.parent().width();\n\n            if (width > parentWidth || height > parentHeight) {\n\n                if (width / height < parentWidth / parentHeight) {\n                    minHeight = parentHeight;\n                    minWidth = width * (parentHeight / height);\n                } else {\n                    minWidth = parentWidth;\n                    minHeight = height * parentWidth / width;\n                }\n                $image.css({\n                    'min-width': minWidth,\n                    'min-height': minHeight\n                });\n            }\n        }\n\n        function toggleZoomable($image, flag) {\n            if (flag) {\n                $image.css({\n                    'min-width': $image.width(),\n                    'min-height': $image.height(),\n                    'width': $image.width(),\n                    'height': $image.height()\n                }).addClass(imageZoommable);\n            } else {\n                $image.css({\n                    width: '',\n                    height: '',\n                    top: '',\n                    left: '',\n                    right: '',\n                    bottom: ''\n                }).removeClass(imageZoommable);\n                calculateMinSize($image);\n            }\n        }\n\n        function resetVars($image) {\n            allowZoomIn = true;\n            allowZoomOut = dragFlag = transitionActive = false;\n            $image.hasClass(imageDraggableClass) && $image.removeClass(imageDraggableClass);\n            toggleZoomable($image, false);\n        }\n\n        /**\n         * Set state for zoom controls.\n         * If state is true, zoom controls will be visible.\n         * IF state is false, zoom controls will be hidden.\n         * @param isHide\n         */\n        function hideZoomControls(isHide) {\n            if (isHide) {\n                $(zoomInButtonSelector).addClass(zoomInDisabled);\n                $(zoomOutButtonSelector).addClass(zoomOutDisabled);\n            } else {\n                $(zoomInButtonSelector).removeClass(zoomInDisabled);\n                $(zoomOutButtonSelector).removeClass(zoomOutDisabled);\n            }\n        }\n\n        /**\n         * Asynchronus control visibility of zoom buttons.\n         * If image bigger than her wrapper. Zoom controls must visible.\n         * @param path - image source path\n         * @param $image\n         */\n        function asyncToggleZoomButtons(path, $image) {\n            var img = new Image();\n\n            img.onload = function () {\n                this.height > $image.parent().height() || this.width > $image.parent().width() ?\n                    hideZoomControls(false) : hideZoomControls(true);\n            };\n            img.src = path;\n        }\n\n        /**\n         * Control visibility of zoom buttons.\n         * Zoom controls must be invisible for video content and touch devices.\n         * On touch devices active pinchIn/pinchOut.\n         * @param $image\n         * @param isTouchScreen - true for touch devices\n         * @param isVideoActiveFrame - true for active video frame\n         */\n        function toggleZoomButtons($image, isTouchScreen, isVideoActiveFrame) {\n            var path = $image.attr('src');\n\n            if (path && !isTouchScreen && !isVideoActiveFrame) {\n                asyncToggleZoomButtons(path, $image);\n            } else {\n                hideZoomControls(true);\n            }\n        }\n\n        /**\n         * Handle resize event in fullscreen.\n         * @param $image - Fullscreen image.\n         * @param e - Event.\n         */\n        function resizeHandler(e, $image) {\n            var imageSize,\n                parentWidth,\n                parentHeight,\n                isImageSmall,\n                isImageFit;\n\n            if (!e.data.$image || !e.data.$image.length)\n                return;\n\n            imageSize = getImageSize($(fullscreenImageSelector)[0]);\n            parentWidth = e.data.$image.parent().width();\n            parentHeight = e.data.$image.parent().height();\n            isImageSmall = parentWidth >= imageSize.rw && parentHeight >= imageSize.rh;\n            isImageFit = parentWidth > e.data.$image.width() && parentHeight > e.data.$image.height();\n\n            toggleZoomButtons(e.data.$image, isTouchEnabled, checkForVideo(e.data.fotorama.activeFrame.$stageFrame));\n            calculateMinSize(e.data.$image);\n\n            if (e.data.$image.hasClass(imageZoommable) && !allowZoomOut || isImageSmall || isImageFit) {\n                resetVars(e.data.$image);\n            }\n\n            if (!isImageSmall) {\n                toggleStandartNavigation();\n            }\n        }\n\n        function getTopValue($image, topProp, step, height, containerHeight) {\n            var top;\n\n            if (parseInt($image.css('marginTop')) || parseInt($image.css('marginLeft'))) {\n                top = dragFlag ? topProp - step / 4 : 0;\n                top = top < containerHeight - height ? containerHeight - height : top;\n                top = top > height - containerHeight ? height - containerHeight : top;\n            } else {\n                top = topProp + step / 2;\n                top = top < containerHeight - height ? containerHeight - height : top;\n                top = top > 0 ? 0 : top;\n\n                if (!dragFlag && step < 0) {\n                    top = top < (containerHeight - height) / 2 ? (containerHeight - height) / 2 : top;\n                }\n            }\n\n            return top;\n        }\n\n        function getLeftValue(leftProp, step, width, containerWidth) {\n            var left;\n\n            left = leftProp + step / 2;\n            left = left < containerWidth - width ? containerWidth - width : left;\n            left = left > 0 ? 0 : left;\n\n            if (!dragFlag && step < 0) {\n                left = left < (containerWidth - width) / 2 ? (containerWidth - width) / 2 : left;\n            }\n\n            return left;\n        }\n\n        function checkFullscreenImagePosition($image, dimentions, widthStep, heightStep) {\n            var $imageContainer,\n                containerWidth,\n                containerHeight,\n                settings,\n                top,\n                left,\n                right,\n                bottom,\n                ratio;\n\n            if ($(gallerySelector).data('fotorama').fullScreen) {\n                transitionActive = true;\n                $imageContainer = $image.parent();\n                containerWidth = $imageContainer.width();\n                containerHeight = $imageContainer.height();\n                top = $image.position().top;\n                left = $image.position().left;\n                ratio = $image.width() / $image.height();\n                dimentions.height = isNaN(dimentions.height) ? dimentions.width / ratio : dimentions.height;\n                dimentions.width = isNaN(dimentions.width) ? dimentions.height * ratio : dimentions.width;\n\n                top = dimentions.height >= containerHeight ?\n                    getTopValue($image, top, heightStep, dimentions.height, containerHeight) : 0;\n\n                left = dimentions.width >= containerWidth ?\n                    getLeftValue(left, widthStep, dimentions.width, containerWidth) : 0;\n\n                right = dragFlag && left < (containerWidth - dimentions.width) / 2 ? 0 : left;\n                bottom = dragFlag ? 0 : top;\n\n                settings = $.extend(dimentions, {\n                    top: top,\n                    left: left,\n                    right: right\n                });\n\n                $image.css(settings);\n            }\n        }\n\n        /**\n         * Toggles fotorama's keyboard and mouse/touch navigation.\n         */\n        function toggleStandartNavigation() {\n            var $selectable =\n                    $('a[href], area[href], input, select, textarea, button, iframe, object, embed, *[tabindex], *[contenteditable]')\n                    .not('[tabindex=-1], [disabled], :hidden'),\n                fotorama = $(gallerySelector).data('fotorama'),\n                $focus = $(':focus'),\n                index;\n\n            if (fotorama.fullScreen) {\n\n                $selectable.each(function (number) {\n\n                    if ($(this).is($focus)) {\n                        index = number;\n                    }\n                });\n\n                fotorama.setOptions({\n                    swipe: !allowZoomOut,\n                    keyboard: !allowZoomOut\n                });\n\n                if (_.isNumber(index)) {\n                    $selectable.eq(index).focus();\n                }\n            }\n        }\n\n        function zoomIn(e, xStep, yStep) {\n            var $image,\n                imgOriginalSize,\n                imageWidth,\n                imageHeight,\n                zoomWidthStep,\n                zoomHeightStep,\n                widthResult,\n                heightResult,\n                ratio,\n                dimentions = {};\n\n            if (allowZoomIn && (!transitionEnabled || !transitionActive) && (isTouchEnabled ||\n                !$(zoomInButtonSelector).hasClass(zoomInDisabled))) {\n                $image = $(fullscreenImageSelector);\n                imgOriginalSize = getImageSize($image[0]);\n                imageWidth = $image.width();\n                imageHeight = $image.height();\n                ratio = imageWidth / imageHeight;\n                allowZoomOut = true;\n                toggleStandartNavigation();\n\n                if (!$image.hasClass(imageZoommable)) {\n                    toggleZoomable($image, true);\n                }\n\n                e.preventDefault();\n\n                if (imageWidth >= imageHeight) {\n                    zoomWidthStep = xStep || Math.ceil(imageWidth * parseFloat(config.magnifierOpts.fullscreenzoom) / 100);\n                    widthResult = imageWidth + zoomWidthStep;\n\n                    if (widthResult >= imgOriginalSize.rw) {\n                        widthResult = imgOriginalSize.rw;\n                        zoomWidthStep = xStep || widthResult - imageWidth;\n                        allowZoomIn = false;\n                    }\n                    heightResult = widthResult / ratio;\n                    zoomHeightStep = yStep || heightResult - imageHeight;\n                } else {\n                    zoomHeightStep = yStep || Math.ceil(imageHeight * parseFloat(config.magnifierOpts.fullscreenzoom) / 100);\n                    heightResult = imageHeight + zoomHeightStep;\n\n                    if (heightResult >= imgOriginalSize.rh) {\n                        heightResult = imgOriginalSize.rh;\n                        zoomHeightStep = yStep || heightResult - imageHeight;\n                        allowZoomIn = false;\n                    }\n                    widthResult = heightResult * ratio;\n                    zoomWidthStep = xStep || widthResult - imageWidth;\n                }\n\n                if (imageWidth >= imageHeight && imageWidth !== imgOriginalSize.rw) {\n                    dimentions = $.extend(dimentions, {\n                        width: widthResult,\n                        height: 'auto'\n                    });\n                    checkFullscreenImagePosition($image, dimentions, -zoomWidthStep, -zoomHeightStep);\n\n                } else if (imageWidth < imageHeight && imageHeight !== imgOriginalSize.rh) {\n                    dimentions = $.extend(dimentions, {\n                        width: 'auto',\n                        height: heightResult\n                    });\n                    checkFullscreenImagePosition($image, dimentions, -zoomWidthStep, -zoomHeightStep);\n                }\n            }\n\n            return false;\n        }\n\n        function zoomOut(e, xStep, yStep) {\n            var $image,\n                widthResult,\n                heightResult,\n                dimentions,\n                parentWidth,\n                parentHeight,\n                imageWidth,\n                imageHeight,\n                zoomWidthStep,\n                zoomHeightStep,\n                ratio,\n                fitIntoParent;\n\n            if (allowZoomOut && (!transitionEnabled || !transitionActive) && (isTouchEnabled ||\n                !$(zoomOutButtonSelector).hasClass(zoomOutDisabled))) {\n                allowZoomIn = true;\n                $image = $(fullscreenImageSelector);\n                parentWidth = $image.parent().width();\n                parentHeight = $image.parent().height();\n                imageWidth = $image.width();\n                imageHeight = $image.height();\n                ratio = imageWidth / imageHeight;\n\n                e.preventDefault();\n\n                if (imageWidth >= imageHeight) {\n                    zoomWidthStep = xStep || Math.ceil(imageWidth * parseFloat(config.magnifierOpts.fullscreenzoom) / 100);\n                    widthResult = imageWidth - zoomWidthStep;\n                    heightResult = widthResult / ratio;\n                    zoomHeightStep = yStep || imageHeight - heightResult;\n                } else {\n                    zoomHeightStep = yStep || Math.ceil(imageHeight * parseFloat(config.magnifierOpts.fullscreenzoom) / 100);\n                    heightResult = imageHeight - zoomHeightStep;\n                    widthResult = heightResult * ratio;\n                    zoomWidthStep = xStep || imageWidth - widthResult;\n                }\n\n                fitIntoParent = function () {\n                    if (ratio > parentWidth / parentHeight) {\n                        widthResult = parentWidth;\n                        zoomWidthStep = imageWidth - widthResult;\n                        heightResult = widthResult / ratio;\n                        zoomHeightStep = imageHeight - heightResult;\n                        dimentions = {\n                            width: widthResult,\n                            height: 'auto'\n                        };\n                    } else {\n                        heightResult = parentHeight;\n                        zoomHeightStep = imageHeight - heightResult;\n                        widthResult = heightResult * ratio;\n                        zoomWidthStep = imageWidth - widthResult;\n                        dimentions = {\n                            width: 'auto',\n                            height: heightResult\n                        };\n                    }\n                    checkFullscreenImagePosition($image, dimentions, zoomWidthStep, zoomHeightStep);\n                };\n\n                if (imageWidth >= imageHeight) {\n                    if (widthResult > parentWidth) {\n                        dimentions = {\n                            width: widthResult,\n                            height: 'auto'\n                        };\n                        checkFullscreenImagePosition($image, dimentions, zoomWidthStep, zoomHeightStep);\n                    } else if (heightResult > parentHeight) {\n                        dimentions = {\n                            width: widthResult,\n                            height: 'auto'\n                        };\n                        checkFullscreenImagePosition($image, dimentions, zoomWidthStep, zoomHeightStep);\n                    } else {\n                        allowZoomOut = dragFlag = false;\n                        toggleStandartNavigation();\n                        fitIntoParent();\n                    }\n                } else if (heightResult > parentHeight) {\n                    dimentions = {\n                        width: 'auto',\n                        height: heightResult\n                    };\n                    checkFullscreenImagePosition($image, dimentions, zoomWidthStep, zoomHeightStep);\n                } else if (widthResult > parentWidth) {\n                    dimentions = {\n                        width: 'auto',\n                        height: heightResult\n                    };\n                    checkFullscreenImagePosition($image, dimentions, zoomWidthStep, zoomHeightStep);\n                } else {\n                    allowZoomOut = dragFlag = false;\n                    toggleStandartNavigation();\n                    fitIntoParent();\n                }\n            }\n\n            return false;\n        }\n\n        /**\n         * Bind event on scroll on active item in fotorama\n         * @param e\n         * @param fotorama - object of fotorama\n         */\n        function mousewheel(e, fotorama, element) {\n            var $fotoramaStage = fotorama.activeFrame.$stageFrame,\n                fotoramaStage = $fotoramaStage.get(0);\n\n            function onWheel(e) {\n                var delta = e.deltaY || e.wheelDelta,\n                    ev = e || window.event;\n\n                if ($(gallerySelector).data('fotorama').fullScreen) {\n\n                    if (e.deltaY) {\n                        if (delta > 0) {\n                            zoomOut(ev);\n                        } else {\n                            zoomIn(ev);\n                        }\n                    } else if (delta > 0) {\n                        zoomIn(ev);\n                    } else {\n                        zoomOut(ev);\n                    }\n\n                    e.preventDefault ? e.preventDefault() : e.returnValue = false;\n                }\n            }\n\n            if (!$fotoramaStage.hasClass('magnify-wheel-loaded')) {\n                if (fotoramaStage && fotoramaStage.addEventListener) {\n                    if ('onwheel' in document) {\n                        fotoramaStage.addEventListener('wheel', onWheel);\n                    } else if ('onmousewheel' in document) {\n                        fotoramaStage.addEventListener('mousewheel', onWheel);\n                    } else {\n                        fotoramaStage.addEventListener('MozMousePixelScroll', onWheel);\n                    }\n                    $fotoramaStage.addClass('magnify-wheel-loaded');\n                }\n            }\n        }\n\n        /**\n         * Method which makes draggable picture. Also work on touch devices.\n         */\n        function magnifierFullscreen(fotorama) {\n            var isDragActive = false,\n                startX,\n                startY,\n                imagePosX,\n                imagePosY,\n                touch,\n                swipeSlide,\n                $gallery = $(gallerySelector),\n                $image = $(fullscreenImageSelector, $gallery),\n                $imageContainer = $('[data-gallery-role=\"stage-shaft\"] [data-active=\"true\"]'),\n                gallery = $gallery.data('fotorama'),\n                pinchDimention;\n\n            swipeSlide = _.throttle(function (direction) {\n                $(gallerySelector).data('fotorama').show(direction);\n            }, 500, {\n                trailing: false\n            });\n\n            /**\n             * Returns top position value for passed jQuery object.\n             *\n             * @param $el\n             * @return {number}\n             */\n            function getTop($el) {\n                return parseInt($el.get(0).style.top);\n            }\n\n            function shiftImage(dx, dy, e) {\n                var top = +imagePosY + dy,\n                    left = +imagePosX + dx,\n                    swipeCondition = $image.width() / 10 + 20;\n\n                dragFlag = true;\n\n                if ($image.offset().left === $imageContainer.offset().left + $imageContainer.width() - $image.width() && e.keyCode === 39 ||\n                    endX - 1 < $imageContainer.offset().left + $imageContainer.width() - $image.width() && dx < 0 &&\n                    _.isNumber(endX) &&\n                    (e.type === 'mousemove' || e.type === 'touchmove' || e.type === 'pointermove' || e.type === 'MSPointerMove')) {\n                    endX = null;\n                    swipeSlide('>');\n\n                    return;\n                }\n\n                if ($image.offset().left === $imageContainer.offset().left && dx !== 0 && e.keyCode === 37 ||\n                    endX === $imageContainer.offset().left && dx > 0 &&\n                    (e.type === 'mousemove' || e.type === 'touchmove' || e.type === 'pointermove' || e.type === 'MSPointerMove')) {\n                    endX = null;\n                    swipeSlide('<');\n\n                    return;\n                }\n\n                if ($image.height() > $imageContainer.height()) {\n                    if ($imageContainer.height() > $image.height() + top) {\n                        $image.css('top', $imageContainer.height() - $image.height());\n                    } else {\n                        top = $image.height() - getTop($image) - $imageContainer.height();\n                        dy = dy < top ? dy : top;\n                        $image.css('top', getTop($image) + dy);\n                    }\n                }\n\n                if ($image.width() > $imageContainer.width()) {\n\n                    if ($imageContainer.offset().left + $imageContainer.width() > left + $image.width()) {\n                        left = $imageContainer.offset().left + $imageContainer.width() - $image.width();\n                    } else {\n                        left = $imageContainer.offset().left < left ? $imageContainer.offset().left : left;\n                    }\n                    $image.offset({\n                        'left': left\n                    });\n                    $image.css('right', '');\n                } else if (Math.abs(dy) < 1 && allowZoomOut &&\n                    !(e.type === 'mousemove' || e.type === 'touchmove' || e.type === 'pointermove' || e.type === 'MSPointerMove')) {\n                    dx < 0 ? $(gallerySelector).data('fotorama').show('>') : $(gallerySelector).data('fotorama').show('<');\n                }\n\n                if ($image.width() <= $imageContainer.width() && allowZoomOut &&\n                    (e.type === 'mousemove' || e.type === 'touchmove' || e.type === 'pointermove' || e.type === 'MSPointerMove') &&\n                    Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > swipeCondition) {\n                    dx < 0 ? swipeSlide('>') : swipeSlide('<');\n                }\n            }\n\n            /**\n             * Sets image size to original or fit in parent block\n             * @param e - event object\n             */\n            function dblClickHandler(e) {\n                var imgOriginalSize = getImageSize($image[0]),\n                    proportions;\n\n                if (imgOriginalSize.rh < $image.parent().height() && imgOriginalSize.rw < $image.parent().width()) {\n                    return;\n                }\n\n                proportions = imgOriginalSize.rw / imgOriginalSize.rh;\n\n                if (allowZoomIn) {\n                    zoomIn(e, imgOriginalSize.rw - $image.width(), imgOriginalSize.rh - $image.height());\n                } else if (proportions > $imageContainer.width() / $imageContainer.height()) {\n                    zoomOut(e, imgOriginalSize.rw - $imageContainer.width(), imgOriginalSize.rw / proportions);\n                } else {\n                    zoomOut(e, imgOriginalSize.rw * proportions, imgOriginalSize.rh - $imageContainer.height());\n                }\n            }\n\n            function detectDoubleTap(e) {\n                var now = new Date().getTime(),\n                    timesince = now - tapFlag;\n\n                if (timesince < 400 && timesince > 0) {\n                    transitionActive = false;\n                    tapFlag = 0;\n                    dblClickHandler(e);\n                } else {\n                    tapFlag = new Date().getTime();\n                }\n            }\n\n            if (isTouchEnabled) {\n                $image.off('tap');\n                $image.on('tap', function (e) {\n                    if (e.originalEvent.originalEvent.touches.length === 0) {\n                        detectDoubleTap(e);\n                    }\n                });\n            } else {\n                $image.unbind('dblclick');\n                $image.dblclick(dblClickHandler);\n            }\n\n            if (gallery.fullScreen) {\n                toggleZoomButtons($image, isTouchEnabled, checkForVideo(fotorama.activeFrame.$stageFrame));\n            }\n\n            function getDimention(event) {\n                return Math.sqrt(\n                    (event.touches[0].clientX - event.touches[1].clientX) * (event.touches[0].clientX - event.touches[1].clientX) +\n                    (event.touches[0].clientY - event.touches[1].clientY) * (event.touches[0].clientY - event.touches[1].clientY));\n            }\n\n            $image.off(isTouchEnabled ? 'touchstart' : 'pointerdown mousedown MSPointerDown');\n            $image.on(isTouchEnabled ? 'touchstart' : 'pointerdown mousedown MSPointerDown', function (e) {\n                if (e && e.originalEvent.touches && e.originalEvent.touches.length >= 2) {\n                    e.preventDefault();\n                    pinchDimention = getDimention(e.originalEvent);\n                    isDragActive = false;\n\n                    if ($image.hasClass(imageDraggableClass)) {\n                        $image.removeClass(imageDraggableClass);\n                    }\n                } else if (gallery.fullScreen && (!transitionEnabled || !transitionActive)) {\n                    imagePosY = getTop($image);\n                    imagePosX = $image.offset().left;\n\n                    if (isTouchEnabled) {\n                        touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\n                        e.clientX = touch.pageX;\n                        e.clientY = touch.pageY;\n                    }\n                    startX = e.clientX || e.originalEvent.clientX;\n                    startY = e.clientY || e.originalEvent.clientY;\n                    isDragActive = true;\n                }\n\n                if ($image.offset() && $image.width() > $imageContainer.width()) {\n                    endX = $image.offset().left;\n                }\n            });\n\n            $image.off(isTouchEnabled ? 'touchmove' : 'mousemove pointermove MSPointerMove');\n            $image.on(isTouchEnabled ? 'touchmove' : 'mousemove pointermove MSPointerMove', function (e) {\n                if (e && e.originalEvent.touches && e.originalEvent.touches.length >= 2) {\n                    e.preventDefault();\n                    var currentDimention = getDimention(e.originalEvent);\n\n                    if ($image.hasClass(imageDraggableClass)) {\n                        $image.removeClass(imageDraggableClass);\n                    }\n\n                    if (currentDimention < pinchDimention) {\n                        zoomOut(e);\n                        pinchDimention = currentDimention;\n                    } else if (currentDimention > pinchDimention) {\n                        zoomIn(e);\n                        pinchDimention = currentDimention;\n                    }\n                } else {\n                    var clientX,\n                        clientY;\n\n                    if (gallery.fullScreen && isDragActive && (!transitionEnabled || !transitionActive)) {\n\n                        if (allowZoomOut && !$image.hasClass(imageDraggableClass)) {\n                            $image.addClass(imageDraggableClass);\n                        }\n                        clientX = e.clientX || e.originalEvent.clientX;\n                        clientY = e.clientY || e.originalEvent.clientY;\n\n                        e.preventDefault();\n\n                        if (isTouchEnabled) {\n                            touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\n                            clientX = touch.pageX;\n                            clientY = touch.pageY;\n                        }\n\n                        if (allowZoomOut) {\n                            imagePosY = getTop($(fullscreenImageSelector, $gallery));\n                            shiftImage(clientX - startX, clientY - startY, e);\n                        }\n                    }\n                }\n            });\n\n            $image.off('transitionend webkitTransitionEnd mozTransitionEnd msTransitionEnd ');\n            $image.on('transitionend webkitTransitionEnd mozTransitionEnd msTransitionEnd', function () {\n                transitionActive = false;\n            });\n\n            if (keyboardNavigation) {\n                $(document).unbind('keydown', keyboardNavigation);\n            }\n\n            /**\n             * Replaces original navigations with better one\n             * @param e - event object\n             */\n            keyboardNavigation = function (e) {\n                var step = 40,\n                    $focus = $(':focus'),\n                    isFullScreen = $(gallerySelector).data('fotorama').fullScreen,\n                    initVars = function () {\n                        imagePosX = $(fullscreenImageSelector, $gallery).offset().left;\n                        imagePosY = getTop($(fullscreenImageSelector, $gallery));\n                    };\n\n                if (($focus.attr('data-gallery-role') || !$focus.length) && allowZoomOut) {\n                    if (isFullScreen) {\n                        imagePosX = $(fullscreenImageSelector, $(gallerySelector)).offset().left;\n                        imagePosY = getTop($(fullscreenImageSelector, $(gallerySelector)));\n                    }\n\n                    if (e.keyCode === 39) {\n\n                        if (isFullScreen) {\n                            initVars();\n                            shiftImage(-step, 0, e);\n                        }\n                    }\n\n                    if (e.keyCode === 38) {\n\n                        if (isFullScreen) {\n                            initVars();\n                            shiftImage(0, step, e);\n                        }\n                    }\n\n                    if (e.keyCode === 37) {\n\n                        if (isFullScreen) {\n                            initVars();\n                            shiftImage(step, 0, e);\n                        }\n                    }\n\n                    if (e.keyCode === 40) {\n\n                        if (isFullScreen) {\n                            e.preventDefault();\n                            initVars();\n                            shiftImage(0, -step, e);\n                        }\n                    }\n                }\n\n                if (e.keyCode === 27 && isFullScreen && allowZoomOut) {\n                    $(gallerySelector).data('fotorama').cancelFullScreen();\n                }\n            };\n\n            /**\n             * @todo keyboard navigation through Fotorama Api.\n             */\n            $(document).keydown(keyboardNavigation);\n\n            $(document).on(isTouchEnabled ? 'touchend' : 'mouseup pointerup MSPointerUp', function (e) {\n                if (gallery.fullScreen) {\n\n                    if ($image.offset() && $image.width() > $imageContainer.width()) {\n                        endX = $image.offset().left;\n                    }\n\n                    isDragActive = false;\n                    $image.removeClass(imageDraggableClass);\n                }\n            });\n\n            $(window).off('resize', resizeHandler);\n            $(window).on('resize', {\n                $image: $image,\n                fotorama: fotorama\n            }, resizeHandler);\n        }\n\n        /**\n         * Hides magnifier preview and zoom blocks.\n         */\n        hideMagnifier = function () {\n            $(magnifierSelector).empty().hide();\n            $(magnifierZoomSelector).remove();\n        };\n\n        /**\n         * Check is active frame in gallery include video content.\n         * If true activeFrame contain video.\n         * @param $stageFrame - active frame in gallery\n         * @returns {*|Boolean}\n         */\n        function checkForVideo($stageFrame) {\n            return $stageFrame.hasClass(videoContainerClass);\n        }\n\n        /**\n         * Hides magnifier on drag and while arrow click.\n         */\n        function behaveOnDrag(e, initPos) {\n            var pos = [e.pageX, e.pageY],\n                isArrow = $(e.target).data('gallery-role') === 'arrow',\n                isClick = initPos[0] === pos[0] && initPos[1] === pos[1],\n                isImg = $(e.target).parent().data('active');\n\n            if (isArrow || isImg && !isClick) {\n                hideMagnifier();\n            }\n        }\n\n        if (config.magnifierOpts.enabled) {\n            $(element).on('pointerdown mousedown MSPointerDown', function (e) {\n                var pos = [e.pageX, e.pageY];\n\n                $(element).on('mousemove pointermove MSPointerMove', function (ev) {\n                    navigator.msPointerEnabled ? hideMagnifier() : behaveOnDrag(ev, pos);\n                });\n                $(document).on('mouseup pointerup MSPointerUp', function () {\n                    $(element).off('mousemove pointermove MSPointerMove');\n                });\n            });\n        }\n\n        $.extend(config.magnifierOpts, {\n            zoomable: false,\n            thumb: '.fotorama__img',\n            largeWrapper: '[data-gallery-role=\"magnifier\"]',\n            height: config.magnifierOpts.height || function () {\n                return $('[data-active=\"true\"]').height();\n            },\n            width: config.magnifierOpts.width || function () {\n                var productMedia = $(gallerySelector).parent().parent();\n\n                return productMedia.parent().width() - productMedia.width() - 20;\n            },\n            left: config.magnifierOpts.left || function () {\n                return $(gallerySelector).offset().left + $(gallerySelector).width() + 20;\n            },\n            top: config.magnifierOpts.top || function () {\n                return $(gallerySelector).offset().top;\n            }\n        });\n\n        $(element).on('fotorama:load fotorama:showend fotorama:fullscreenexit fotorama:ready', function (e, fotorama) {\n            var $activeStageFrame = $(gallerySelector).data('fotorama').activeFrame.$stageFrame;\n\n            if (!$activeStageFrame.find(magnifierZoomSelector).length) {\n                hideMagnifier();\n\n                if (config.magnifierOpts) {\n                    config.magnifierOpts.large = $(gallerySelector).data('fotorama').activeFrame.img;\n                    config.magnifierOpts.full = fotorama.data[fotorama.activeIndex].original;\n                    !checkForVideo($activeStageFrame) && $($activeStageFrame).magnify(config.magnifierOpts);\n                }\n            }\n        });\n\n        $(element).on('gallery:loaded', function (e) {\n            var $prevImage;\n\n            $(element).find(gallerySelector)\n                .on('fotorama:ready', function (e, fotorama) {\n                    var $zoomIn = $(zoomInButtonSelector),\n                        $zoomOut = $(zoomOutButtonSelector);\n\n                    if (!$zoomIn.hasClass(zoomInLoaded)) {\n                        $zoomIn.on('click touchstart', zoomIn);\n                        $zoomIn.on('mousedown', function (e) {\n                            e.stopPropagation();\n                        });\n\n                        $zoomIn.keyup(function (e) {\n\n                            if (e.keyCode === 13) {\n                                zoomIn(e);\n                            }\n                        });\n\n                        $(window).keyup(function (e) {\n\n                            if (e.keyCode === 107 || fotorama.fullscreen) {\n                                zoomIn(e);\n                            }\n                        });\n\n                        $zoomIn.addClass(zoomInLoaded);\n                    }\n\n                    if (!$zoomOut.hasClass(zoomOutLoaded)) {\n                        $zoomOut.on('click touchstart', zoomOut);\n                        $zoomOut.on('mousedown', function (e) {\n                            e.stopPropagation();\n                        });\n\n                        $zoomOut.keyup(function (e) {\n\n                            if (e.keyCode === 13) {\n                                zoomOut(e);\n                            }\n                        });\n\n                        $(window).keyup(function (e) {\n\n                            if (e.keyCode === 109 || fotorama.fullscreen) {\n                                zoomOut(e);\n                            }\n                        });\n\n                        $zoomOut.addClass(zoomOutLoaded);\n                    }\n                })\n                .on('fotorama:fullscreenenter fotorama:showend', function (e, fotorama) {\n                    hideMagnifier();\n\n                    if (!$(fullscreenImageSelector).is($prevImage)) {\n                        resetVars($(fullscreenImageSelector));\n                    }\n                    magnifierFullscreen(fotorama);\n                    mousewheel(e, fotorama, element);\n\n                    if ($prevImage) {\n                        calculateMinSize($prevImage);\n\n                        if (!$(fullscreenImageSelector).is($prevImage)) {\n                            resetVars($prevImage);\n                        }\n                    }\n\n                    toggleStandartNavigation();\n                })\n                .on('fotorama:load', function (e, fotorama) {\n                    if ($(gallerySelector).data('fotorama').fullScreen) {\n                        toggleZoomButtons($(fullscreenImageSelector), isTouchEnabled,\n                            checkForVideo(fotorama.activeFrame.$stageFrame));\n                    }\n                    magnifierFullscreen(fotorama);\n                })\n                .on('fotorama:show', function (e, fotorama) {\n                    $prevImage = _.clone($(fullscreenImageSelector));\n                    hideMagnifier();\n                })\n                .on('fotorama:fullscreenexit', function (e, fotorama) {\n                    resetVars($(fullscreenImageSelector));\n                    hideMagnifier();\n                    hideZoomControls(true);\n                });\n        });\n\n        return config;\n    };\n});\n","Magento_InventoryInStorePickupFrontend/js/model/resource-url-manager.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine(['jquery', 'Magento_Checkout/js/model/resource-url-manager'], function (\n    $,\n    resourceUrlManager\n) {\n    'use strict';\n\n    return {\n        /**\n         * Returns URL for REST API to fetch nearby pickup locations defined for given sales channel.\n         *\n         * @param {String} salesChannelCode - Code of the sales channel.\n         * @param {Object} searchCriteria\n         */\n        getUrlForNearbyPickupLocations: function (\n            salesChannelCode,\n            searchCriteria\n        ) {\n            var urls = {\n                    default: '/inventory/in-store-pickup/pickup-locations/'\n                },\n                criteria = {\n                    searchRequest: {\n                        scopeCode: salesChannelCode\n                    }\n                };\n\n            searchCriteria = {\n                searchRequest: searchCriteria\n            };\n\n            return (\n                resourceUrlManager.getUrl(urls, {}) +\n                '?' +\n                $.param($.extend(true, criteria, searchCriteria))\n            );\n        },\n\n        /**\n         * Returns URL for REST API to fetch all pickup locations defined for given sales channel.\n         *\n         * @param {String} salesChannelType - Type of the sales channel, e.g. website.\n         * @param {String} salesChannelCode - Code of the sales channel.\n         */\n        getUrlForPickupLocationsAssignedToSalesChannel: function (\n            salesChannelType,\n            salesChannelCode\n        ) {\n            var params = {\n                    salesChannelType: salesChannelType,\n                    salesChannelCode: salesChannelCode\n                },\n                urls = {\n                    default: '/inventory/in-store-pickup/pickup-locations-assigned-to-sales-channel/' +\n                        ':salesChannelType/:salesChannelCode'\n                };\n\n            return resourceUrlManager.getUrl(urls, params);\n        },\n\n        /**\n         * Returns URL for REST API to fetch pickup location with given code defined for given sales channel.\n         *\n         * @param {String} salesChannelCode - Code of the sales channel.\n         * @param {String} pickupLocationCode - Code of the pickup location.\n         */\n        getUrlForPickupLocation: function (\n            salesChannelCode,\n            pickupLocationCode\n        ) {\n            var urls = {\n                    default: '/inventory/in-store-pickup/pickup-locations/'\n                },\n                searchRequest = {\n                    searchRequest: {\n                        filters: {\n                            pickupLocationCode: {\n                                value: pickupLocationCode\n                            }\n                        },\n                        scopeCode: salesChannelCode\n                    }\n                };\n\n            return resourceUrlManager.getUrl(urls, {}) +\n                '?' +\n                $.param(searchRequest);\n        }\n    };\n});\n","Magento_InventoryInStorePickupFrontend/js/model/quote-ext.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'ko',\n    'Magento_InventoryInStorePickupFrontend/js/model/pickup-address-converter'\n], function (ko, pickupAddressConverter) {\n    'use strict';\n\n    return function (quote) {\n        var shippingAddress = quote.shippingAddress;\n\n        /**\n         * Makes sure that shipping address gets appropriate type when it points\n         * to a store pickup location.\n         */\n        quote.shippingAddress = ko.pureComputed({\n            /**\n             * Return quote shipping address\n             */\n            read: function () {\n                return shippingAddress();\n            },\n\n            /**\n             * Set quote shipping address\n             */\n            write: function (address) {\n                shippingAddress(\n                    pickupAddressConverter.formatAddressToPickupAddress(address)\n                );\n            }\n        });\n\n        return quote;\n    };\n});\n","Magento_InventoryInStorePickupFrontend/js/model/pickup-locations-service.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'knockout',\n    'Magento_InventoryInStorePickupFrontend/js/model/resource-url-manager',\n    'mage/storage',\n    'Magento_Customer/js/customer-data',\n    'Magento_Checkout/js/checkout-data',\n    'Magento_Checkout/js/model/address-converter',\n    'Magento_Checkout/js/action/select-shipping-address',\n    'underscore',\n    'mage/translate',\n    'mage/url'\n], function (\n    $,\n    ko,\n    resourceUrlManager,\n    storage,\n    customerData,\n    checkoutData,\n    addressConverter,\n    selectShippingAddressAction,\n    _,\n    $t,\n    url\n) {\n    'use strict';\n\n    var websiteCode = window.checkoutConfig.websiteCode,\n        countryData = customerData.get('directory-data');\n\n    return {\n        isLoading: ko.observable(false),\n        selectedLocation: ko.observable(null),\n        locationsCache: [],\n\n        /**\n         * Get shipping rates for specified address.\n         *\n         * @param {String} sourceCode\n         */\n        getLocation: function (sourceCode) {\n            var serviceUrl = resourceUrlManager.getUrlForPickupLocation(websiteCode, sourceCode);\n\n            this.isLoading(true);\n\n            return storage\n                .get(serviceUrl, {}, false)\n                .then(function (result) {\n                    var addresses = result.items || [],\n                        address = addresses[0] || {};\n\n                    return this.formatAddress(address);\n                }.bind(this))\n                .fail(function (response) {\n                    this.processError(response);\n\n                    return [];\n                }.bind(this))\n                .always(function () {\n                    this.isLoading(false);\n                }.bind(this));\n        },\n\n        /**\n         * Get nearby pickup locations based on given search criteria.\n         *\n         * @param {Object} searchCriteria - Search criteria object.\n         * @see Magento/InventoryInStorePickup/Model/SearchCriteria/GetNearbyLocationsCriteria.php\n         */\n        getNearbyLocations: function (searchCriteria) {\n            var self = this,\n                serviceUrl = resourceUrlManager.getUrlForNearbyPickupLocations(websiteCode, searchCriteria);\n\n            if (self.locationsCache[serviceUrl]) {\n                return $.Deferred().resolve(self.locationsCache[serviceUrl]).promise();\n            }\n\n            self.isLoading(true);\n\n            return storage\n                .get(serviceUrl, {}, false)\n                .then(function (result) {\n                    self.locationsCache[serviceUrl] = _.map(result.items, function (address) {\n                        return self.formatAddress(address);\n                    });\n\n                    return self.locationsCache[serviceUrl];\n                })\n                .fail(function (response) {\n                    self.processError(response);\n\n                    return [];\n                })\n                .always(function () {\n                    self.isLoading(false);\n                });\n        },\n\n        /**\n         * Select location for sipping.\n         *\n         * @param {Object} location\n         * @returns void\n         */\n        selectForShipping: function (location) {\n            var address = $.extend(\n                {},\n                addressConverter.formAddressDataToQuoteAddress({\n                    firstname: location.name,\n                    lastname: 'Store',\n                    street: location.street,\n                    city: location.city,\n                    postcode: location.postcode,\n                    'country_id': location['country_id'],\n                    telephone: location.telephone,\n                    'region_id': location['region_id'],\n                    'save_in_address_book': 0\n                }),\n                {\n                    /**\n                     * Is address can be used for billing\n                     *\n                     * @return {Boolean}\n                     */\n                    canUseForBilling: function () {\n                        return false;\n                    },\n\n                    /**\n                     * Returns address type\n                     *\n                     * @return {String}\n                     */\n                    getType: function () {\n                        return 'store-pickup-address';\n                    },\n                    'extension_attributes': {\n                        'pickup_location_code': location['pickup_location_code']\n                    }\n                }\n            );\n\n            this.selectedLocation(location);\n            selectShippingAddressAction(address);\n            checkoutData.setSelectedShippingAddress(address.getKey());\n        },\n\n        /**\n         * Formats address returned by REST endpoint to match checkout address field naming.\n         *\n         * @param {Object} address - Address object returned by REST endpoint.\n         */\n        formatAddress: function (address) {\n            return {\n                name: address.name,\n                description: address.description,\n                latitude: address.latitude,\n                longitude: address.longitude,\n                street: [address.street],\n                city: address.city,\n                postcode: address.postcode,\n                'country_id': address['country_id'],\n                country: this.getCountryName(address['country_id']),\n                telephone: address.phone,\n                'region_id': address['region_id'],\n                region: this.getRegionName(\n                    address['country_id'],\n                    address['region_id']\n                ),\n                'pickup_location_code': address['pickup_location_code']\n            };\n        },\n\n        /**\n         * Get country name by id.\n         *\n         * @param {*} countryId\n         * @return {String}\n         */\n        getCountryName: function (countryId) {\n            return countryData()[countryId] !== undefined ?\n                countryData()[countryId].name\n                : ''; //eslint-disable-line\n        },\n\n        /**\n         * Returns region name based on given country and region identifiers.\n         *\n         * @param {String} countryId - Country identifier.\n         * @param {String} regionId - Region identifier.\n         */\n        getRegionName: function (countryId, regionId) {\n            var regions = countryData()[countryId] ?\n                countryData()[countryId].regions\n                : null;\n\n            return regions && regions[regionId] ? regions[regionId].name : '';\n        },\n\n        /**\n         * Process response errors.\n         *\n         * @param {Object} response\n         * @returns void\n         */\n        processError: function (response) {\n            var expr = /([%])\\w+/g,\n                error;\n\n            if (response.status === 401) {\n                //eslint-disable-line eqeqeq\n                window.location.replace(url.build('customer/account/login/'));\n\n                return;\n            }\n\n            try {\n                error = JSON.parse(response.responseText);\n            } catch (exception) {\n                error = $t(\n                    'Something went wrong with your request. Please try again later.'\n                );\n            }\n\n            if (error.hasOwnProperty('parameters')) {\n                error = error.message.replace(expr, function (varName) {\n                    varName = varName.substr(1);\n\n                    if (error.parameters.hasOwnProperty(varName)) {\n                        return error.parameters[varName];\n                    }\n\n                    return error.parameters.shift();\n                });\n            }\n        }\n    };\n});\n","Magento_InventoryInStorePickupFrontend/js/model/pickup-address-converter.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(['underscore'], function (_) {\n    'use strict';\n\n    return {\n        /**\n         * Format address to use in store pickup\n         *\n         * @param {Object} address\n         * @return {*}\n         */\n        formatAddressToPickupAddress: function (address) {\n            var sourceCode = _.findWhere(address.customAttributes, {\n                'attribute_code': 'sourceCode'\n            });\n\n            if (sourceCode && address.getType() !== 'store-pickup-address') {\n                address = _.extend({}, address, {\n                    saveInAddressBook: 0,\n\n                    /**\n                     * Is address can be used for billing\n                     *\n                     * @return {Boolean}\n                     */\n                    canUseForBilling: function () {\n                        return false;\n                    },\n\n                    /**\n                     * Returns address type\n                     *\n                     * @return {String}\n                     */\n                    getType: function () {\n                        return 'store-pickup-address';\n                    },\n\n                    /**\n                     * Returns address key\n                     *\n                     * @return {*}\n                     */\n                    getKey: function () {\n                        return this.getType() + sourceCode.value;\n                    }\n                });\n            }\n\n            return address;\n        }\n    };\n});\n","Magento_InventoryInStorePickupFrontend/js/model/shipping-rate-processor/store-pickup-address.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([], function () {\n    'use strict';\n\n    return {\n        /*eslint-disable no-unused-vars*/\n        /**\n         * @param {Object} address\n         */\n        getRates: function (address) {}\n    };\n});\n","Magento_InventoryInStorePickupFrontend/js/view/store-selector.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'uiComponent',\n    'uiRegistry',\n    'Magento_Ui/js/modal/modal',\n    'Magento_Checkout/js/model/quote',\n    'Magento_Customer/js/model/customer',\n    'Magento_Checkout/js/model/step-navigator',\n    'Magento_Checkout/js/model/address-converter',\n    'Magento_Checkout/js/action/set-shipping-information',\n    'Magento_InventoryInStorePickupFrontend/js/model/pickup-locations-service',\n    'Magento_Checkout/js/checkout-data'\n], function (\n    $,\n    _,\n    Component,\n    registry,\n    modal,\n    quote,\n    customer,\n    stepNavigator,\n    addressConverter,\n    setShippingInformationAction,\n    pickupLocationsService,\n    checkoutData\n) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_InventoryInStorePickupFrontend/store-selector',\n            selectedLocationTemplate:\n                'Magento_InventoryInStorePickupFrontend/store-selector/selected-location',\n            storeSelectorPopupTemplate:\n                'Magento_InventoryInStorePickupFrontend/store-selector/popup',\n            storeSelectorPopupItemTemplate:\n                'Magento_InventoryInStorePickupFrontend/store-selector/popup-item',\n            loginFormSelector:\n                '#store-selector form[data-role=email-with-possible-login]',\n            defaultCountryId: window.checkoutConfig.defaultCountryId,\n            delimiter: window.checkoutConfig.storePickupApiSearchTermDelimiter,\n            selectedLocation: pickupLocationsService.selectedLocation,\n            quoteIsVirtual: quote.isVirtual,\n            searchQuery: '',\n            nearbyLocations: null,\n            isLoading: pickupLocationsService.isLoading,\n            popup: null,\n            searchDebounceTimeout: 300,\n            imports: {\n                nearbySearchRadius: '${ $.parentName }:nearbySearchRadius',\n                nearbySearchLimit: '${ $.parentName }:nearbySearchLimit'\n            }\n        },\n\n        /**\n         * Init component\n         *\n         * @return {exports}\n         */\n        initialize: function () {\n            var updateNearbyLocations, country;\n\n            this._super();\n\n            updateNearbyLocations = _.debounce(function (searchQuery) {\n                country = quote.shippingAddress() && quote.shippingAddress().countryId ?\n                    quote.shippingAddress().countryId : this.defaultCountryId;\n                searchQuery = this.getSearchTerm(searchQuery, country);\n                this.updateNearbyLocations(searchQuery);\n            }, this.searchDebounceTimeout).bind(this);\n            this.searchQuery.subscribe(updateNearbyLocations);\n\n            return this;\n        },\n\n        /**\n         * Init component observable variables\n         *\n         * @return {exports}\n         */\n        initObservable: function () {\n            return this._super().observe(['nearbyLocations', 'searchQuery']);\n        },\n\n        /**\n         * Set shipping information handler\n         */\n        setPickupInformation: function () {\n            var shippingAddress = quote.shippingAddress();\n\n            if (this.validatePickupInformation()) {\n                shippingAddress = addressConverter.quoteAddressToFormAddressData(shippingAddress);\n                checkoutData.setShippingAddressFromData(shippingAddress);\n                setShippingInformationAction().done(function () {\n                    stepNavigator.next();\n                });\n            }\n        },\n\n        /**\n         * @return {*}\n         */\n        getPopup: function () {\n            if (!this.popup) {\n                this.popup = modal(\n                    this.popUpList.options,\n                    $(this.popUpList.element)\n                );\n            }\n\n            return this.popup;\n        },\n\n        /**\n         * Get Search Term from search query and country.\n         *\n         * @param {String} searchQuery\n         * @param {String} country\n         * @returns {String}\n         */\n        getSearchTerm: function (searchQuery, country) {\n            return searchQuery ? searchQuery + this.delimiter + country : searchQuery;\n        },\n\n        /**\n         * @returns void\n         */\n        openPopup: function () {\n            var shippingAddress = quote.shippingAddress(),\n                country = shippingAddress.countryId ? shippingAddress.countryId :\n                this.defaultCountryId,\n                searchTerm = '';\n\n            this.getPopup().openModal();\n\n            if (shippingAddress.city && shippingAddress.postcode) {\n                searchTerm = this.getSearchTerm(shippingAddress.postcode, country);\n            }\n\n            this.updateNearbyLocations(searchTerm);\n        },\n\n        /**\n         * @param {Object} location\n         * @returns void\n         */\n        selectPickupLocation: function (location) {\n            pickupLocationsService.selectForShipping(location);\n            this.getPopup().closeModal();\n        },\n\n        /**\n         * @param {Object} location\n         * @returns {*|Boolean}\n         */\n        isPickupLocationSelected: function (location) {\n            return _.isEqual(this.selectedLocation(), location);\n        },\n\n        /**\n         * @param {String} searchQuery\n         * @returns {*}\n         */\n        updateNearbyLocations: function (searchQuery) {\n            var self = this,\n                productsInfo = [],\n                items = quote.getItems(),\n                searchCriteria;\n\n            _.each(items, function (item) {\n                if (item['qty_options'] === undefined || item['qty_options'].length === 0) {\n                    productsInfo.push(\n                        {\n                            sku: item.sku\n                        }\n                    );\n                }\n            });\n\n            searchCriteria = {\n                extensionAttributes: {\n                    productsInfo: productsInfo\n                },\n                pageSize: this.nearbySearchLimit\n            };\n\n            if (searchQuery) {\n                searchCriteria.area = {\n                    radius: this.nearbySearchRadius,\n                    searchTerm: searchQuery\n                };\n            }\n\n            return pickupLocationsService\n                .getNearbyLocations(searchCriteria)\n                .then(function (locations) {\n                    self.nearbyLocations(locations);\n                })\n                .fail(function () {\n                    self.nearbyLocations([]);\n                });\n        },\n\n        /**\n         * @returns {Boolean}\n         */\n        validatePickupInformation: function () {\n            var emailValidationResult,\n                loginFormSelector = this.loginFormSelector;\n\n            if (!customer.isLoggedIn()) {\n                $(loginFormSelector).validation();\n                emailValidationResult = $(loginFormSelector + ' input[name=username]').valid() ? true : false;\n\n                if (!emailValidationResult) {\n                    $(this.loginFormSelector + ' input[name=username]').focus();\n\n                    return false;\n                }\n            }\n\n            return true;\n        }\n    });\n});\n","Magento_InventoryInStorePickupFrontend/js/view/shipping-information-ext.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Checkout/js/model/quote'\n], function (quote) {\n    'use strict';\n\n    var storePickupShippingInformation = {\n        defaults: {\n            template: 'Magento_InventoryInStorePickupFrontend/shipping-information'\n        },\n\n        /**\n         * Get shipping method title based on delivery method.\n         *\n         * @return {String}\n         */\n        getShippingMethodTitle: function () {\n            var shippingMethod = quote.shippingMethod(),\n                locationName = '',\n                title;\n\n            if (!this.isStorePickup()) {\n\n                return this._super();\n            }\n\n            title = shippingMethod['carrier_title'] + ' - ' + shippingMethod['method_title'];\n\n            if (quote.shippingAddress().firstname !== undefined) {\n                locationName = quote.shippingAddress().firstname + ' ' + quote.shippingAddress().lastname;\n                title += ' \"' + locationName + '\"';\n            }\n\n            return title;\n        },\n\n        /**\n         * Get is store pickup delivery method selected.\n         *\n         * @returns {Boolean}\n         */\n        isStorePickup: function () {\n            var shippingMethod = quote.shippingMethod(),\n                isStorePickup = false;\n\n            if (shippingMethod !== null) {\n                isStorePickup = shippingMethod['carrier_code'] === 'instore' &&\n                    shippingMethod['method_code'] === 'pickup';\n            }\n\n            return isStorePickup;\n        }\n    };\n\n    return function (shippingInformation) {\n        return shippingInformation.extend(storePickupShippingInformation);\n    };\n});\n","Magento_InventoryInStorePickupFrontend/js/view/store-pickup.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'uiComponent',\n    'underscore',\n    'jquery',\n    'knockout',\n    'uiRegistry',\n    'Magento_Checkout/js/model/quote',\n    'Magento_Checkout/js/action/select-shipping-method',\n    'Magento_Checkout/js/checkout-data',\n    'Magento_Checkout/js/model/shipping-service',\n    'Magento_Checkout/js/model/step-navigator',\n    'Magento_Checkout/js/model/shipping-rate-service',\n    'Magento_InventoryInStorePickupFrontend/js/model/shipping-rate-processor/store-pickup-address',\n    'Magento_InventoryInStorePickupFrontend/js/model/pickup-locations-service'\n], function (\n    Component,\n    _,\n    $,\n    ko,\n    registry,\n    quote,\n    selectShippingMethodAction,\n    checkoutData,\n    shippingService,\n    stepNavigator,\n    shippingRateService,\n    shippingRateProcessor,\n    pickupLocationsService\n) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_InventoryInStorePickupFrontend/store-pickup',\n            deliveryMethodSelectorTemplate: 'Magento_InventoryInStorePickupFrontend/delivery-method-selector',\n            isVisible: false,\n            isAvailable: false,\n            isStorePickupSelected: false,\n            rate: {\n                'carrier_code': 'instore',\n                'method_code': 'pickup'\n            },\n            nearbySearchLimit: 50,\n            defaultCountry: window.checkoutConfig.defaultCountryId,\n            delimiter: window.checkoutConfig.storePickupApiSearchTermDelimiter,\n            rates: shippingService.getShippingRates(),\n            inStoreMethod: null\n        },\n\n        /**\n         * @inheritdoc\n         */\n        initialize: function () {\n            this._super();\n\n            shippingRateService.registerProcessor('store-pickup-address', shippingRateProcessor);\n\n            quote.shippingAddress.subscribe(function (shippingAddress) {\n                this.convertAddressType(shippingAddress);\n            }, this);\n            this.convertAddressType(quote.shippingAddress());\n\n            this.isStorePickupSelected.subscribe(function () {\n                this.preselectLocation();\n            }, this);\n            this.preselectLocation();\n\n            this.syncWithShipping();\n        },\n\n        /**\n         * Init component observable variables\n         *\n         * @return {exports}\n         */\n        initObservable: function () {\n            this._super().observe(['isVisible']);\n\n            this.isStorePickupSelected = ko.pureComputed(function () {\n                return _.isMatch(quote.shippingMethod(), this.rate);\n            }, this);\n\n            this.isAvailable = ko.pureComputed(function () {\n                return _.findWhere(this.rates(), {\n                    'carrier_code': this.rate['carrier_code'],\n                    'method_code': this.rate['method_code']\n                });\n            }, this);\n\n            return this;\n        },\n\n        /**\n         * Synchronize store pickup visibility with shipping step.\n         *\n         * @returns void\n         */\n        syncWithShipping: function () {\n            var shippingStep = _.findWhere(stepNavigator.steps(), {\n                code: 'shipping'\n            });\n\n            shippingStep.isVisible.subscribe(function (isShippingVisible) {\n                this.isVisible(this.isAvailable && isShippingVisible);\n            }, this);\n            this.isVisible(this.isAvailable && shippingStep.isVisible());\n        },\n\n        /**\n         * @returns void\n         */\n        selectShipping: function () {\n            var nonPickupShippingMethod = _.find(\n                this.rates(),\n                function (rate) {\n                    return (\n                        rate['carrier_code'] !== this.rate['carrier_code'] &&\n                        rate['method_code'] !== this.rate['method_code']\n                    );\n                },\n                this\n            );\n\n            this.selectShippingMethod(nonPickupShippingMethod);\n\n            registry.async('checkoutProvider')(function (checkoutProvider) {\n                checkoutProvider.set(\n                    'shippingAddress',\n                    quote.shippingAddress()\n                );\n                checkoutProvider.trigger('data.reset');\n            });\n        },\n\n        /**\n         * @returns void\n         */\n        selectStorePickup: function () {\n            var pickupShippingMethod = _.findWhere(\n                this.rates(),\n                {\n                    'carrier_code': this.rate['carrier_code'],\n                    'method_code': this.rate['method_code']\n                },\n                this\n            );\n\n            this.preselectLocation();\n            this.selectShippingMethod(pickupShippingMethod);\n        },\n\n        /**\n         * @param {Object} shippingMethod\n         */\n        selectShippingMethod: function (shippingMethod) {\n            selectShippingMethodAction(shippingMethod);\n            checkoutData.setSelectedShippingAddress(\n                quote.shippingAddress().getKey()\n            );\n        },\n\n        /**\n         * @param {Object} shippingAddress\n         * @returns void\n         */\n        convertAddressType: function (shippingAddress) {\n            if (\n                !this.isStorePickupAddress(shippingAddress) &&\n                this.isStorePickupSelected()\n            ) {\n                quote.shippingAddress(\n                    $.extend({}, shippingAddress, {\n                        /**\n                         * Is address can be used for billing\n                         *\n                         * @return {Boolean}\n                         */\n                        canUseForBilling: function () {\n                            return false;\n                        },\n\n                        /**\n                         * Returns address type\n                         *\n                         * @return {String}\n                         */\n                        getType: function () {\n                            return 'store-pickup-address';\n                        }\n                    })\n                );\n            }\n        },\n\n        /**\n         * @returns void\n         */\n        preselectLocation: function () {\n            var selectedLocation,\n                shippingAddress,\n                customAttributes,\n                selectedSourceCode,\n                nearestLocation,\n                productsInfo = [],\n                items = quote.getItems();\n\n            if (!this.isStorePickupSelected()) {\n                return;\n            }\n\n            selectedLocation = pickupLocationsService.selectedLocation();\n\n            if (selectedLocation) {\n                pickupLocationsService.selectForShipping(selectedLocation);\n\n                return;\n            }\n\n            shippingAddress = quote.shippingAddress();\n            customAttributes = shippingAddress.customAttributes || [];\n            selectedSourceCode = _.findWhere(customAttributes, {\n                'attribute_code': 'sourceCode'\n            });\n\n            if (selectedSourceCode) {\n                pickupLocationsService\n                    .getLocation(selectedSourceCode.value)\n                    .then(function (location) {\n                        pickupLocationsService.selectForShipping(location);\n                    });\n            } else if (shippingAddress.city && shippingAddress.postcode) {\n                _.each(items, function (item) {\n                    if (item['qty_options'] === undefined || item['qty_options'].length === 0) {\n                        productsInfo.push(\n                            {\n                                sku: item.sku\n                            }\n                        );\n                    }\n                });\n                pickupLocationsService\n                    .getNearbyLocations({\n                        area: {\n                            radius: this.nearbySearchRadius,\n                            searchTerm: shippingAddress.postcode + this.delimiter +\n                                        shippingAddress.countryId || this.defaultCountry\n                        },\n                        extensionAttributes: {\n                            productsInfo: productsInfo\n                        },\n                        pageSize: this.nearbySearchLimit\n                    })\n                    .then(function (locations) {\n                        nearestLocation = locations[0];\n\n                        if (nearestLocation) {\n                            pickupLocationsService.selectForShipping(\n                                nearestLocation\n                            );\n                        }\n                    });\n            }\n        },\n\n        /**\n         * @param {Object} address\n         * @returns {Boolean}\n         */\n        isStorePickupAddress: function (address) {\n            return address.getType() === 'store-pickup-address';\n        }\n    });\n});\n","Magento_InventoryInStorePickupFrontend/js/view/form/element/email.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine(['jquery', 'Magento_Checkout/js/view/form/element/email'], function (\n    $,\n    Component\n) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template:\n                'Magento_InventoryInStorePickupFrontend/form/element/email',\n            links: {\n                email:\n                    'checkout.steps.shipping-step.shippingAddress.customer-email:email'\n            }\n        }\n    });\n});\n","Magento_Cookie/js/notices.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\ndefine([\n    'jquery',\n    'jquery-ui-modules/widget',\n    'mage/cookies'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.cookieNotices', {\n        /** @inheritdoc */\n        _create: function () {\n            if ($.mage.cookies.get(this.options.cookieName)) {\n                this.element.hide();\n            } else {\n                this.element.show();\n            }\n            $(this.options.cookieAllowButtonSelector).on('click', $.proxy(function () {\n                var cookieExpires = new Date(new Date().getTime() + this.options.cookieLifetime * 1000);\n\n                $.mage.cookies.set(this.options.cookieName, JSON.stringify(this.options.cookieValue), {\n                    expires: cookieExpires\n                });\n\n                if ($.mage.cookies.get(this.options.cookieName)) {\n                    this.element.hide();\n                    $(document).trigger('user:allowed:save:cookie');\n                } else {\n                    window.location.href = this.options.noCookiesUrl;\n                }\n            }, this));\n        }\n    });\n\n    return $.mage.cookieNotices;\n});\n","Magento_Cookie/js/jquery.storageapi.extended.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'jquery/jquery.cookie',\n    'jquery/jquery.storageapi.min'\n], function ($) {\n    'use strict';\n\n    /**\n     *\n     * @param {Object} storage\n     * @private\n     */\n    function _extend(storage) {\n        $.extend(storage, {\n            _secure: window.cookiesConfig ? window.cookiesConfig.secure : false,\n            _samesite: window.cookiesConfig ? window.cookiesConfig.samesite : 'lax',\n\n            /**\n             * Set value under name\n             * @param {String} name\n             * @param {String} value\n             * @param {Object} [options]\n             */\n            setItem: function (name, value, options) {\n                var _default = {\n                    expires: this._expires,\n                    path: this._path,\n                    domain: this._domain,\n                    secure: this._secure,\n                    samesite: this._samesite\n                };\n\n                $.cookie(this._prefix + name, value, $.extend(_default, options || {}));\n            },\n\n            /**\n             * Set default options\n             * @param {Object} c\n             * @returns {storage}\n             */\n            setConf: function (c) {\n                if (c.path) {\n                    this._path = c.path;\n                }\n\n                if (c.domain) {\n                    this._domain = c.domain;\n                }\n\n                if (c.expires) {\n                    this._expires = c.expires;\n                }\n\n                if (typeof c.secure !== 'undefined') {\n                    this._secure = c.secure;\n                }\n\n                if (typeof c.samesite !== 'undefined') {\n                    this._samesite = c.samesite;\n                }\n\n                return this;\n            }\n        });\n    }\n\n    if (window.cookieStorage) {\n        _extend(window.cookieStorage);\n    }\n});\n","Magento_Cookie/js/require-cookie.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\ndefine([\n    'jquery',\n    'Magento_Ui/js/modal/alert',\n    'jquery-ui-modules/widget',\n    'mage/mage',\n    'mage/translate'\n], function ($, alert) {\n    'use strict';\n\n    $.widget('mage.requireCookie', {\n        options: {\n            event: 'click',\n            noCookieUrl: 'enable-cookies',\n            triggers: ['.action.login', '.action.submit'],\n            isRedirectCmsPage: true\n        },\n\n        /**\n         * Constructor\n         * @private\n         */\n        _create: function () {\n            this._bind();\n        },\n\n        /**\n         * This method binds elements found in this widget.\n         * @private\n         */\n        _bind: function () {\n            var events = {};\n\n            $.each(this.options.triggers, function (index, value) {\n                events['click ' + value] = '_checkCookie';\n            });\n            this._on(events);\n        },\n\n        /**\n         * This method set the url for the redirect.\n         * @param {jQuery.Event} event\n         * @private\n         */\n        _checkCookie: function (event) {\n            if (navigator.cookieEnabled) {\n                return;\n            }\n\n            event.preventDefault();\n\n            if (this.options.isRedirectCmsPage) {\n                window.location = this.options.noCookieUrl;\n            } else {\n                alert({\n                    content: $.mage.__('Cookies are disabled in your browser.')\n                });\n            }\n        }\n    });\n\n    return $.mage.requireCookie;\n});\n","js/jquery.parallax.min.js":"//============================================================\n//\n// The MIT License\n//\n// Copyright (C) 2014 Matthew Wagerfield - @wagerfield\n//\n// Permission is hereby granted, free of charge, to any\n// person obtaining a copy of this software and associated\n// documentation files (the \"Software\"), to deal in the\n// Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute,\n// sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do\n// so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice\n// shall be included in all copies or substantial portions\n// of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY\n// OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT\n// LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO\n// EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE\n// FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n// AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\n// OR OTHER DEALINGS IN THE SOFTWARE.\n//\n//============================================================\n\n/**\n * jQuery || Zepto Parallax Plugin\n * @author Matthew Wagerfield - @wagerfield\n * @description Creates a parallax effect between an array of layers,\n *              driving the motion from the gyroscope output of a smartdevice.\n *              If no gyroscope is available, the cursor position is used.\n */\n;(function($, window, document, undefined) {\n\n  // Strict Mode\n  'use strict';\n\n  // Constants\n  var NAME = 'parallax';\n  var MAGIC_NUMBER = 30;\n  var DEFAULTS = {\n    relativeInput: false,\n    clipRelativeInput: false,\n    calibrationThreshold: 100,\n    calibrationDelay: 500,\n    supportDelay: 500,\n    calibrateX: false,\n    calibrateY: true,\n    invertX: true,\n    invertY: true,\n    limitX: false,\n    limitY: false,\n    scalarX: 10.0,\n    scalarY: 10.0,\n    frictionX: 0.1,\n    frictionY: 0.1,\n    originX: 0.5,\n    originY: 0.5\n  };\n\n  function Plugin(element, options) {\n\n    // DOM Context\n    this.element = element;\n\n    // Selections\n    this.$context = $(element).data('api', this);\n    this.$layers = this.$context.find('.layer');\n\n    // Data Extraction\n    var data = {\n      calibrateX: this.$context.data('calibrate-x') || null,\n      calibrateY: this.$context.data('calibrate-y') || null,\n      invertX: this.$context.data('invert-x') || null,\n      invertY: this.$context.data('invert-y') || null,\n      limitX: parseFloat(this.$context.data('limit-x')) || null,\n      limitY: parseFloat(this.$context.data('limit-y')) || null,\n      scalarX: parseFloat(this.$context.data('scalar-x')) || null,\n      scalarY: parseFloat(this.$context.data('scalar-y')) || null,\n      frictionX: parseFloat(this.$context.data('friction-x')) || null,\n      frictionY: parseFloat(this.$context.data('friction-y')) || null,\n      originX: parseFloat(this.$context.data('origin-x')) || null,\n      originY: parseFloat(this.$context.data('origin-y')) || null\n    };\n\n    // Delete Null Data Values\n    for (var key in data) {\n      if (data[key] === null) delete data[key];\n    }\n\n    // Compose Settings Object\n    $.extend(this, DEFAULTS, options, data);\n\n    // States\n    this.calibrationTimer = null;\n    this.calibrationFlag = true;\n    this.enabled = false;\n    this.depths = [];\n    this.raf = null;\n\n    // Element Bounds\n    this.bounds = null;\n    this.ex = 0;\n    this.ey = 0;\n    this.ew = 0;\n    this.eh = 0;\n\n    // Element Center\n    this.ecx = 0;\n    this.ecy = 0;\n\n    // Element Range\n    this.erx = 0;\n    this.ery = 0;\n\n    // Calibration\n    this.cx = 0;\n    this.cy = 0;\n\n    // Input\n    this.ix = 0;\n    this.iy = 0;\n\n    // Motion\n    this.mx = 0;\n    this.my = 0;\n\n    // Velocity\n    this.vx = 0;\n    this.vy = 0;\n\n    // Callbacks\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onDeviceOrientation = this.onDeviceOrientation.bind(this);\n    this.onOrientationTimer = this.onOrientationTimer.bind(this);\n    this.onCalibrationTimer = this.onCalibrationTimer.bind(this);\n    this.onAnimationFrame = this.onAnimationFrame.bind(this);\n    this.onWindowResize = this.onWindowResize.bind(this);\n\n    // Initialise\n    this.initialise();\n  }\n\n  Plugin.prototype.transformSupport = function(value) {\n    var element = document.createElement('div');\n    var propertySupport = false;\n    var propertyValue = null;\n    var featureSupport = false;\n    var cssProperty = null;\n    var jsProperty = null;\n    for (var i = 0, l = this.vendors.length; i < l; i++) {\n      if (this.vendors[i] !== null) {\n        cssProperty = this.vendors[i][0] + 'transform';\n        jsProperty = this.vendors[i][1] + 'Transform';\n      } else {\n        cssProperty = 'transform';\n        jsProperty = 'transform';\n      }\n      if (element.style[jsProperty] !== undefined) {\n        propertySupport = true;\n        break;\n      }\n    }\n    switch(value) {\n      case '2D':\n        featureSupport = propertySupport;\n        break;\n      case '3D':\n        if (propertySupport) {\n          var body = document.body || document.createElement('body');\n          var documentElement = document.documentElement;\n          var documentOverflow = documentElement.style.overflow;\n          if (!document.body) {\n            documentElement.appendChild(body);\n          }\n          body.appendChild(element);\n          element.style[jsProperty] = 'translate3d(1px,1px,1px)';\n          propertyValue = window.getComputedStyle(element).getPropertyValue(cssProperty);\n          featureSupport = propertyValue !== undefined && propertyValue.length > 0 && propertyValue !== \"none\";\n          documentElement.style.overflow = documentOverflow;\n          body.removeChild(element);\n        }\n        break;\n    }\n    return featureSupport;\n  };\n\n  Plugin.prototype.ww = null;\n  Plugin.prototype.wh = null;\n  Plugin.prototype.wcx = null;\n  Plugin.prototype.wcy = null;\n  Plugin.prototype.wrx = null;\n  Plugin.prototype.wry = null;\n  Plugin.prototype.portrait = null;\n  Plugin.prototype.desktop = !navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry|BB10|mobi|tablet|opera mini|nexus 7)/i);\n  Plugin.prototype.vendors = [null,['-webkit-','webkit'],['-moz-','Moz'],['-o-','O'],['-ms-','ms']];\n  Plugin.prototype.motionSupport = !!window.DeviceMotionEvent;\n  Plugin.prototype.orientationSupport = !!window.DeviceOrientationEvent;\n  Plugin.prototype.orientationStatus = 0;\n  Plugin.prototype.transform2DSupport = Plugin.prototype.transformSupport('2D');\n  Plugin.prototype.transform3DSupport = Plugin.prototype.transformSupport('3D');\n  Plugin.prototype.propertyCache = {};\n\n  Plugin.prototype.initialise = function() {\n\n    // Configure Styles\n    if (this.$context.css('position') === 'static') {\n      this.$context.css({\n        position:'relative'\n      });\n    }\n\n    // Hardware Accelerate Context\n    this.accelerate(this.$context);\n\n    // Setup\n    this.updateLayers();\n    this.updateDimensions();\n    this.enable();\n    this.queueCalibration(this.calibrationDelay);\n  };\n\n  Plugin.prototype.updateLayers = function() {\n\n    // Cache Layer Elements\n    this.$layers = this.$context.find('.layer');\n    this.depths = [];\n\n    // Configure Layer Styles\n    this.$layers.css({\n      position:'absolute',\n      display:'block',\n      left: 0,\n      top: 0\n    });\n    this.$layers.first().css({\n      position:'relative'\n    });\n\n    // Hardware Accelerate Layers\n    this.accelerate(this.$layers);\n\n    // Cache Depths\n    this.$layers.each($.proxy(function(index, element) {\n      this.depths.push($(element).data('depth') || 0);\n    }, this));\n  };\n\n  Plugin.prototype.updateDimensions = function() {\n    this.ww = window.innerWidth;\n    this.wh = window.innerHeight;\n    this.wcx = this.ww * this.originX;\n    this.wcy = this.wh * this.originY;\n    this.wrx = Math.max(this.wcx, this.ww - this.wcx);\n    this.wry = Math.max(this.wcy, this.wh - this.wcy);\n  };\n\n  Plugin.prototype.updateBounds = function() {\n    this.bounds = this.element.getBoundingClientRect();\n    this.ex = this.bounds.left;\n    this.ey = this.bounds.top;\n    this.ew = this.bounds.width;\n    this.eh = this.bounds.height;\n    this.ecx = this.ew * this.originX;\n    this.ecy = this.eh * this.originY;\n    this.erx = Math.max(this.ecx, this.ew - this.ecx);\n    this.ery = Math.max(this.ecy, this.eh - this.ecy);\n  };\n\n  Plugin.prototype.queueCalibration = function(delay) {\n    clearTimeout(this.calibrationTimer);\n    this.calibrationTimer = setTimeout(this.onCalibrationTimer, delay);\n  };\n\n  Plugin.prototype.enable = function() {\n    if (!this.enabled) {\n      this.enabled = true;\n      if (this.orientationSupport) {\n        this.portrait = null;\n        window.addEventListener('deviceorientation', this.onDeviceOrientation);\n        setTimeout(this.onOrientationTimer, this.supportDelay);\n      } else {\n        this.cx = 0;\n        this.cy = 0;\n        this.portrait = false;\n        window.addEventListener('mousemove', this.onMouseMove);\n      }\n      window.addEventListener('resize', this.onWindowResize);\n      this.raf = requestAnimationFrame(this.onAnimationFrame);\n    }\n  };\n\n  Plugin.prototype.disable = function() {\n    if (this.enabled) {\n      this.enabled = false;\n      if (this.orientationSupport) {\n        window.removeEventListener('deviceorientation', this.onDeviceOrientation);\n      } else {\n        window.removeEventListener('mousemove', this.onMouseMove);\n      }\n      window.removeEventListener('resize', this.onWindowResize);\n      cancelAnimationFrame(this.raf);\n    }\n  };\n\n  Plugin.prototype.calibrate = function(x, y) {\n    this.calibrateX = x === undefined ? this.calibrateX : x;\n    this.calibrateY = y === undefined ? this.calibrateY : y;\n  };\n\n  Plugin.prototype.invert = function(x, y) {\n    this.invertX = x === undefined ? this.invertX : x;\n    this.invertY = y === undefined ? this.invertY : y;\n  };\n\n  Plugin.prototype.friction = function(x, y) {\n    this.frictionX = x === undefined ? this.frictionX : x;\n    this.frictionY = y === undefined ? this.frictionY : y;\n  };\n\n  Plugin.prototype.scalar = function(x, y) {\n    this.scalarX = x === undefined ? this.scalarX : x;\n    this.scalarY = y === undefined ? this.scalarY : y;\n  };\n\n  Plugin.prototype.limit = function(x, y) {\n    this.limitX = x === undefined ? this.limitX : x;\n    this.limitY = y === undefined ? this.limitY : y;\n  };\n\n  Plugin.prototype.origin = function(x, y) {\n    this.originX = x === undefined ? this.originX : x;\n    this.originY = y === undefined ? this.originY : y;\n  };\n\n  Plugin.prototype.clamp = function(value, min, max) {\n    value = Math.max(value, min);\n    value = Math.min(value, max);\n    return value;\n  };\n\n  Plugin.prototype.css = function(element, property, value) {\n    var jsProperty = this.propertyCache[property];\n    if (!jsProperty) {\n      for (var i = 0, l = this.vendors.length; i < l; i++) {\n        if (this.vendors[i] !== null) {\n          jsProperty = $.camelCase(this.vendors[i][1] + '-' + property);\n        } else {\n          jsProperty = property;\n        }\n        if (element.style[jsProperty] !== undefined) {\n          this.propertyCache[property] = jsProperty;\n          break;\n        }\n      }\n    }\n    element.style[jsProperty] = value;\n  };\n\n  Plugin.prototype.accelerate = function($element) {\n    for (var i = 0, l = $element.length; i < l; i++) {\n      var element = $element[i];\n      this.css(element, 'transform', 'translate3d(0,0,0)');\n      this.css(element, 'transform-style', 'preserve-3d');\n      this.css(element, 'backface-visibility', 'hidden');\n    }\n  };\n\n  Plugin.prototype.setPosition = function(element, x, y) {\n    x += 'px';\n    y += 'px';\n    if (this.transform3DSupport) {\n      this.css(element, 'transform', 'translate3d('+x+','+y+',0)');\n    } else if (this.transform2DSupport) {\n      this.css(element, 'transform', 'translate('+x+','+y+')');\n    } else {\n      element.style.left = x;\n      element.style.top = y;\n    }\n  };\n\n  Plugin.prototype.onOrientationTimer = function(event) {\n    if (this.orientationSupport && this.orientationStatus === 0) {\n      this.disable();\n      this.orientationSupport = false;\n      this.enable();\n    }\n  };\n\n  Plugin.prototype.onCalibrationTimer = function(event) {\n    this.calibrationFlag = true;\n  };\n\n  Plugin.prototype.onWindowResize = function(event) {\n    this.updateDimensions();\n  };\n\n  Plugin.prototype.onAnimationFrame = function() {\n    this.updateBounds();\n    var dx = this.ix - this.cx;\n    var dy = this.iy - this.cy;\n    if ((Math.abs(dx) > this.calibrationThreshold) || (Math.abs(dy) > this.calibrationThreshold)) {\n      this.queueCalibration(0);\n    }\n    if (this.portrait) {\n      this.mx = this.calibrateX ? dy : this.iy;\n      this.my = this.calibrateY ? dx : this.ix;\n    } else {\n      this.mx = this.calibrateX ? dx : this.ix;\n      this.my = this.calibrateY ? dy : this.iy;\n    }\n    this.mx *= this.ew * (this.scalarX / 100);\n    this.my *= this.eh * (this.scalarY / 100);\n    if (!isNaN(parseFloat(this.limitX))) {\n      this.mx = this.clamp(this.mx, -this.limitX, this.limitX);\n    }\n    if (!isNaN(parseFloat(this.limitY))) {\n      this.my = this.clamp(this.my, -this.limitY, this.limitY);\n    }\n    this.vx += (this.mx - this.vx) * this.frictionX;\n    this.vy += (this.my - this.vy) * this.frictionY;\n    for (var i = 0, l = this.$layers.length; i < l; i++) {\n      var depth = this.depths[i];\n      var layer = this.$layers[i];\n      var xOffset = this.vx * depth * (this.invertX ? -1 : 1);\n      var yOffset = this.vy * depth * (this.invertY ? -1 : 1);\n      this.setPosition(layer, xOffset, yOffset);\n    }\n    this.raf = requestAnimationFrame(this.onAnimationFrame);\n  };\n\n  Plugin.prototype.onDeviceOrientation = function(event) {\n\n    // Validate environment and event properties.\n    if (!this.desktop && event.beta !== null && event.gamma !== null) {\n\n      // Set orientation status.\n      this.orientationStatus = 1;\n\n      // Extract Rotation\n      var x = (event.beta  || 0) / MAGIC_NUMBER; //  -90 :: 90\n      var y = (event.gamma || 0) / MAGIC_NUMBER; // -180 :: 180\n\n      // Detect Orientation Change\n      var portrait = window.innerHeight > window.innerWidth;\n      if (this.portrait !== portrait) {\n        this.portrait = portrait;\n        this.calibrationFlag = true;\n      }\n\n      // Set Calibration\n      if (this.calibrationFlag) {\n        this.calibrationFlag = false;\n        this.cx = x;\n        this.cy = y;\n      }\n\n      // Set Input\n      this.ix = x;\n      this.iy = y;\n    }\n  };\n\n  Plugin.prototype.onMouseMove = function(event) {\n\n    // Cache mouse coordinates.\n    var clientX = event.clientX;\n    var clientY = event.clientY;\n\n    // Calculate Mouse Input\n    if (!this.orientationSupport && this.relativeInput) {\n\n      // Clip mouse coordinates inside element bounds.\n      if (this.clipRelativeInput) {\n        clientX = Math.max(clientX, this.ex);\n        clientX = Math.min(clientX, this.ex + this.ew);\n        clientY = Math.max(clientY, this.ey);\n        clientY = Math.min(clientY, this.ey + this.eh);\n      }\n\n      // Calculate input relative to the element.\n      this.ix = (clientX - this.ex - this.ecx) / this.erx;\n      this.iy = (clientY - this.ey - this.ecy) / this.ery;\n\n    } else {\n\n      // Calculate input relative to the window.\n      this.ix = (clientX - this.wcx) / this.wrx;\n      this.iy = (clientY - this.wcy) / this.wry;\n    }\n  };\n\n  var API = {\n    enable: Plugin.prototype.enable,\n    disable: Plugin.prototype.disable,\n    updateLayers: Plugin.prototype.updateLayers,\n    calibrate: Plugin.prototype.calibrate,\n    friction: Plugin.prototype.friction,\n    invert: Plugin.prototype.invert,\n    scalar: Plugin.prototype.scalar,\n    limit: Plugin.prototype.limit,\n    origin: Plugin.prototype.origin\n  };\n\n  $.fn[NAME] = function (value) {\n    var args = arguments;\n    return this.each(function () {\n      var $this = $(this);\n      var plugin = $this.data(NAME);\n      if (!plugin) {\n        plugin = new Plugin(this, value);\n        $this.data(NAME, plugin);\n      }\n      if (API[value]) {\n        plugin[value].apply(plugin, Array.prototype.slice.call(args, 1));\n      }\n    });\n  };\n\n})(window.jQuery || window.Zepto, window, document);\n\n/**\n * Request Animation Frame Polyfill.\n * @author Tino Zijdel\n * @author Paul Irish\n * @see https://gist.github.com/paulirish/1579671\n */\n;(function() {\n\n  var lastTime = 0;\n  var vendors = ['ms', 'moz', 'webkit', 'o'];\n\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n    window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];\n  }\n\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = function(callback, element) {\n      var currTime = new Date().getTime();\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n        timeToCall);\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n  }\n\n  if (!window.cancelAnimationFrame) {\n    window.cancelAnimationFrame = function(id) {\n      clearTimeout(id);\n    };\n  }\n\n}());\n","js/jquery.floatelement.js":"(function (factory) {\r\n    'use strict';\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define([\r\n            'jquery'\r\n        ], factory);\r\n    } else {\r\n        factory(window.jQuery);\r\n    }\r\n}(function ($) {\r\n    'use strict';\r\n\r\n    var $window = $(window);\r\n\r\n    $.fn.themePluginFloatElement = function(options) {\r\n        var settings = {\r\n            startPos: \"top\",\r\n            speed: 3,\r\n            horizontal: false,\r\n            transition: false\r\n        };\r\n        var $el, $options;\r\n\r\n        function initialize(t, options) {\r\n            return t.data(\"__floatElement\") ? this : ($el = t,\r\n            setData(),\r\n            setOptions(options),\r\n            build(),\r\n            this)\r\n        }\r\n\r\n        function setData() {\r\n            return $el.data(\"__floatElement\")\r\n        }\r\n\r\n        function setOptions(options) {\r\n            return $options = $.extend(!0, {}, settings, options, {\r\n                wrapper: $el\r\n            })\r\n        }\r\n\r\n        function build() {\r\n            var t, o = $options.wrapper, s = $(window);\r\n            return $options.style && o.attr(\"style\", $options.style),\r\n            s.width() > 767 && (\"none\" == $options.startPos ? t = \"\" : \"top\" == $options.startPos ? (o.css({\r\n                top: 0\r\n            }),\r\n            t = \"\") : (o.css({\r\n                bottom: 0\r\n            }),\r\n            t = \"-\"),\r\n            $options.transition && o.css({\r\n                transition: \"ease transform 500ms\"\r\n            }),\r\n            movement(t),\r\n            s.on(\"scroll\", function() {\r\n                movement(t)\r\n            }))\r\n        }\r\n\r\n        function movement(t) {\r\n            var i = $($options.wrapper)\r\n              , o = $(window)\r\n              , s = o.scrollTop()\r\n              , n = 100 * (i.offset().top - s) / o.height();\r\n            $options.horizontal ? i.css({\r\n                transform: \"translate3d(\" + t + n / $options.speed + \"%, \" + t + n / $options.speed + \"%, 0)\"\r\n            }) : i.css({\r\n                transform: \"translate3d(0, \" + t + n / $options.speed + \"%, 0)\"\r\n            })\r\n        }\r\n\r\n        initialize(this, options);\r\n\r\n        return this;\r\n    }\r\n}));","js/jquery.infinite-scroller.js":"define([\n    'jquery'\n], function ($) {\n    \"use strict\";\n    $.widget('smartwave.infiniteScroll', {\n        options: {\n            productsListSelector: '#layer-product-list',\n            next_page: '',\n            loading: false,\n            infinite_loaded_count: 0,\n            active: false\n        },\n        _create: function () {\n            this.inFinite();\n        },\n        inFinite: function(){\n            var self = this;\n            self.options.next_page = \"\";\n            if($(self.options.productsListSelector +' .infinite-loader').length > 0){\n                self.options.active = true;\n            }\n            $(\".pages-items li > a.next\").each(function(){\n                self.options.next_page = $(this).attr(\"href\");\n            });\n            $(window).scroll(function(){\n                if(!self.options.loading && self.options.active && self.options.next_page && $(window).scrollTop() >= $(\".infinite-loader\").offset().top-$(window).height()+100){\n                    if(self.options.infinite_loaded_count < 2){\n                        self.options.loading = true;\n                        $(\".pages-items li > a.next\").each(function(){\n                            self.options.next_page = $(this).attr(\"href\");\n                        });\n                        self.ajaxInfinite(self.options.next_page);\n                    }\n                }\n            });\n            $(\".infinite-loader .btn-load-more\").click(function(){\n                if(!self.options.loading && self.options.next_page && self.options.infinite_loaded_count >= 2){\n                    self.options.loading = true;\n                    self.ajaxInfinite(self.options.next_page);\n                }\n            });\n        },\n        ajaxInfinite: function (submitUrl) {\n            var self = this;\n            self.options.infinite_loaded_count++;\n            $('.infinite-loader .btn-load-more').hide();\n            $('.infinite-loader .loading').fadeIn(300);\n            $.ajax({\n                type: 'GET',\n                url: submitUrl,\n                dataType: \"html\",\n                beforeSend: function () {\n                    $('.infinite-loader .btn-load-more').hide();\n                    $('.infinite-loader .loading').fadeIn(300);\n                },\n                success: function (res) {\n                    self.options.loading = false;\n                    var items = $(res).find(self.options.productsListSelector +' .product-items .item');\n                    var b = $('<div/>').html($(res).find(self.options.productsListSelector));\n                    if (items.length > 0) {\n                        if($(b).find('div.products-grid')){\n                            $(self.options.productsListSelector + ' .products.wrapper').last()\n                                .after($(res).find(self.options.productsListSelector +' div.products-grid.wrapper').detach())\n                                .trigger('contentUpdated');\n                        }\n                        if($(b).find('div.products-list')){\n                            $(self.options.productsListSelector + ' .products.wrapper').last()\n                                .after($(res).find(self.options.productsListSelector +' div.products-list.wrapper').detach())\n                                .trigger('contentUpdated');\n                        }\n                        if($(b).find('.pages a.next').length>0){\n                            $(self.options.productsListSelector + ' .pages a.next').attr('href', $(res).find('.pages a.next').attr('href'));\n                        }else{\n                            $(self.options.productsListSelector + ' .pages a.next').remove();\n                        }\n                        $(b).remove();\n                        $(\"form[data-role=tocart-form]\").catalogAddToCart();\n                        $('.main .products.grid .product-items li.product-item:nth-child(2n)').addClass('nth-child-2n');\n                        $('.main .products.grid .product-items li.product-item:nth-child(2n+1)').addClass('nth-child-2np1');\n                        $('.main .products.grid .product-items li.product-item:nth-child(3n)').addClass('nth-child-3n');\n                        $('.main .products.grid .product-items li.product-item:nth-child(3n+1)').addClass('nth-child-3np1');\n                        $('.main .products.grid .product-items li.product-item:nth-child(4n)').addClass('nth-child-4n');\n                        $('.main .products.grid .product-items li.product-item:nth-child(4n+1)').addClass('nth-child-4np1');\n                        $('.main .products.grid .product-items li.product-item:nth-child(5n)').addClass('nth-child-5n');\n                        $('.main .products.grid .product-items li.product-item:nth-child(5n+1)').addClass('nth-child-5np1');\n                        $('.main .products.grid .product-items li.product-item:nth-child(6n)').addClass('nth-child-6n');\n                        $('.main .products.grid .product-items li.product-item:nth-child(6n+1)').addClass('nth-child-6np1');\n                        $('.main .products.grid .product-items li.product-item:nth-child(7n)').addClass('nth-child-7n');\n                        $('.main .products.grid .product-items li.product-item:nth-child(7n+1)').addClass('nth-child-7np1');\n                        $('.main .products.grid .product-items li.product-item:nth-child(8n)').addClass('nth-child-8n');\n                        $('.main .products.grid .product-items li.product-item:nth-child(8n+1)').addClass('nth-child-8np1');\n                        var hist = submitUrl;\n                        if(submitUrl.indexOf(\"p=\") > -1){\n                            var len = submitUrl.length-submitUrl.indexOf(\"p=\");\n                            var str_temp = submitUrl.substr(submitUrl.indexOf(\"p=\"),len);\n                            var page_param = \"\";\n                            if(str_temp.indexOf(\"&\") == -1){\n                                page_param = str_temp;\n                            } else {\n                                page_param = str_temp.substr(0,str_temp.indexOf(\"&\"));\n                            }\n                            hist = submitUrl.replace(page_param, \"\");\n                        }\n                        if (typeof window.history.pushState === 'function') {\n                            window.history.pushState({url: hist}, '', hist);\n                        }\n                        if(typeof enable_quickview != 'undefined' && enable_quickview == true) {\n                            requirejs(['jquery', 'weltpixel_quickview' ],\n                                function($, quickview) {\n                                    $('.weltpixel-quickview').off('click').on('click', function() {\n                                        var prodUrl = $(this).attr('data-quickview-url');\n                                        if (prodUrl.length) {\n                                            quickview.displayContent(prodUrl);\n                                        }\n                                    });\n                                });\n                        }\n                        $(\".products-grid .weltpixel-quickview\").each(function(){\n                            $(this).appendTo($(this).parent().parent().children(\".product-item-photo\"));\n                        });\n                        self.options.next_page = \"\";\n                        $(\".pages-items li > a.next\").each(function(){\n                            self.options.next_page = $(this).attr(\"href\");\n                        });\n                        if(self.options.infinite_loaded_count >= 2){\n                            $('.infinite-loader .loading').hide();\n                            if(self.options.next_page){\n                                $('.infinite-loader .btn-load-more').show();\n                                $(\".infinite-loader .btn-load-more\").unbind(\"click\").click(function(){\n                                    if(!self.options.loading && self.options.next_page && self.options.infinite_loaded_count >= 2){\n                                        self.options.loading = true;\n                                        self.ajaxInfinite(self.options.next_page);\n                                    }\n                                });\n                            }\n                        } else {\n                            $('.infinite-loader .loading').fadeOut(300);\n                        }\n                    }\n\n                },\n                error: function () {\n                    window.location.reload();\n                }\n            });\n        }\n    });\n    return $.smartwave.infiniteScroll;\n});"}
}});
